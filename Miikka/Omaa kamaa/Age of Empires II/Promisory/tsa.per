;Select attacking system

(defrule
	(true)
=>
	(set-goal attackingsystem old)
)

(defrule
	(population < 150)
	(unit-type-count archery-class > 1)
	(up-get-fact-sum any-ally population 0 temporary-goal)
	(up-get-fact-sum any-enemy population 0 temporary-goal2)
	(up-modify-goal temporary-goal g:+ temporary-goal2)
	(up-compare-goal temporary-goal2 < 800)
	(or(game-time < 2400)
	(up-compare-goal temporary-goal2 < 500));this is a cap for peformance reasons
	(or(population < 115)
	(or(players-unit-type-count any-enemy scout-cavalry-line > 2)
	(or(players-unit-type-count any-enemy knight-line > 0)
	(strategic-number infantry > 5))));micro is currently much more effective in large numbers in ranged vs melee than ranged vs ranged
	(nand(unit-type-count-total mangonel-line < 1)
	(players-unit-type-count any-enemy mangonel-line > 1))
	(players-building-type-count target-player palisade-wall < 45);35
	(players-building-type-count target-player stone-wall < 10)
	(strategic-number turn-time-estimate < 550);600
	(or(up-compare-const diff-fp == 1)
	(up-compare-const koth-game == 1))
	(players-unit-type-count target-player scorpion-line < 4)
=>
	(set-goal attackingsystem new)
)

(defrule
	(or(current-age-time > 210);still use in very early feudal
	(current-age >= castle-age))
	(or(players-building-type-count target-player watch-tower > 3)
	(or(unit-type-count my-unique-unit-line > 3);UU micro isn't supported atm
	(or(up-compare-const force-old-micro == 1)
	(or(and(up-building-type-in-town c: watch-tower > 0)
	(strategic-number sn-maximum-town-size < 30))
	(or(taunt-detected any-human 106);option to disable
	(or(warboat-count > 1)
	(or(players-unit-type-count any-enemy galley-line > 1)
	(or(map-type amazon-tunnel)
	(map-type black-forest)))))))))
=>
	(set-goal attackingsystem old)
)


;==============================================================
; Taunts
;==============================================================
(defrule ; debug rule
(or	(strategic-number sn-focus-player-number > max-players)
(or	(strategic-number sn-focus-player-number <= 0)
	(stance-toward focus-player ally)))
	(strategic-number sn-target-player-number >= 1)
	(strategic-number sn-target-player-number <= max-players)
(not	(stance-toward target-player ally))
	(player-in-game target-player)
=>
	(up-modify-goal temporary-goal s:= sn-target-player-number); to prevent further bugs
	(up-modify-sn sn-focus-player-number s:= sn-target-player-number); should be an enemy
	(chat-to-player my-player-number "Debugging focus player. 3,05"))
(defrule
	(taunt-detected any-human-ally 36)
	(up-compare-goal block-attacking != yes)
=>
	(chat-to-allies-using-id 22160); "39 Yes sire! I shall not attack until thou thyself give the word."
	(set-goal block-attacking yes))
(defrule
	(up-compare-goal block-attacking != no)
(or	(not(player-in-game any-human-ally))
(or	(taunt-detected any-human-ally 31)
	(taunt-detected any-human-ally 222)))
=>
	(chat-to-allies-using-id 22153); "39 At once, sire!"
	(acknowledge-taunt every-ally 36)
	(set-goal block-attacking no))
(defrule
	(strategic-number teamsuperiority <= -3)
	(strategic-number sn-military-superiority <= -3)
	(population < max-civ-pop)
=>
	(up-jump-rule 3))
(defrule
(or	(taunt-detected any-human-ally 31)
	(taunt-detected my-player-number 31))
(or	(and	(strategic-number teamsuperiority >= 0)
		(and	(strategic-number sn-military-superiority >= -1);
			(military-population >= 15))); 13
(or	(military-population >= 42)
(or	(strategic-number sn-military-superiority >= 1)
	(population >= max-civ-pop))))
=>
	(set-goal attacking yes))
(defrule
(or	(taunt-detected any-ally 31)
	(taunt-detected my-player-number 31))
(or	(and	(strategic-number teamsuperiority >= 1)
		(and	(strategic-number sn-military-superiority >= 0);
			(military-population >= 21)))
(or	(military-population >= 63)
(or	(strategic-number sn-military-superiority >= 2)
	(population >= max-civ-pop))))
=>
	(set-goal attacking yes))
(defrule
(or	(taunt-detected my-player-number 222)
	(taunt-detected any-computer-ally 222))
(or	(and	(strategic-number teamsuperiority >= 0)
		(and	(strategic-number sn-military-superiority >= 0);
			(military-population >= 21)))
(or	(military-population >= 50)
(or	(strategic-number sn-military-superiority >= 1); 2
	(population >= max-civ-pop))))
=>
	(set-goal attacking yes)); end jump
;==============================================================
; Under attack
;==============================================================
(defrule
	(up-compare-goal defend != no)
=>
	(set-goal defend no))
;==============================================================
(defrule
(or	(unit-type-count-total 211 >= 2); Dead female villager
(or	(unit-type-count-total 213 >= 2); Dead female builder
(or	(unit-type-count-total 215 >= 2); Dead female farmer
(or	(unit-type-count-total 217 >= 2); Dead female hunter
(or	(unit-type-count-total 219 >= 2); Dead female lumberjack
	(unit-type-count-total 221 >= 2)))))); Dead female miner
	(up-compare-goal defend != yes)
=>
	(set-goal defend yes))
;==============================================================
(defrule
(or	(unit-type-count-total 224 >= 2); Dead male villager
(or	(unit-type-count-total 225 >= 2); Dead male builder
(or	(unit-type-count-total 226 >= 2); Dead male farmer
(or	(unit-type-count-total 227 >= 2); Dead male hunter
(or	(unit-type-count-total 228 >= 2); Dead male lumberjack
	(unit-type-count-total 229 >= 2)))))); Dead male miner
	(up-compare-goal defend != yes)
=>
	(set-goal defend yes))
;==============================================================
(defrule
	(up-compare-goal underattack != yes)
	(up-enemy-units-in-town >= 5)
	(goal attacking no)
	(town-under-attack)
	(goal defend yes)
(or	(up-enemy-units-in-town g:>= my-mpop)
	(strategic-number sn-military-superiority <= -1))
	(population < max-civ-pop)
=>
	(chat-local-to-self "We are under attack.")
	(set-goal underattack yes))
;==============================================================
(defrule
	(up-compare-goal underattack != no)
	(up-enemy-units-in-town g:< my-mpop)
(or	(population >= del-civ-pop)
(or	(up-enemy-units-in-town < 4)
(or	(goal attacking yes)
(or	(and	(up-enemy-units-in-town g:<= my-mpop)
		(strategic-number sn-military-superiority >= 1))
	(goal defend no)))))
=>
	(chat-local-to-self "The attack should be over now.")
	(set-goal underattack no))
;==============================================================
; Strategy related attack/retreat behavior
;==============================================================
(defrule; 127
	(up-compare-goal strategy != r-flush)
=>
	(up-jump-rule 24))
(defrule; end neg jump
	(goal sk-var yes)
(or	(and	(nor	(civ-selected spanish)
			(civ-selected bulgarians)); test
		(players-unit-type-count target-player militiaman-line >= 4)); 6
	(players-unit-type-count target-player eagle-warrior-line >= 2)); 3
	(game-time >= 180)
=>
	(set-goal sk-var no)
	(set-goal attackprioritychange yes)
;	(chat-to-player my-player-number text-attempt-r-flush)
;	;(chat-to-allies text-attempt-r-flush)
;	(disable-self); avoid chat spam in case of bug
)
(defrule
	(up-research-status c: castle-age == research-pending)
	(up-compare-goal enemyState <= feudal)
	(strategic-number sn-military-superiority <= 1)
	(goal assistance no)
=>
	(up-jump-rule 3))
(defrule
	(players-building-type-count target-player watch-tower >= 2)
	(military-population < 25)
	(strategic-number sn-military-superiority <= 3)
(or	(goal assistance no)
	(strategic-number sn-military-superiority <= 2)); 1
	(population < max-civ-pop)
	(unit-type-count feudal-battering-ram <= 0)
	(unit-type-count battering-ram-line <= 0)
	(unit-type-count mangonel-line <= 0)
	(unit-type-count bombard-cannon-line <= 0)
	(unit-type-count trebuchet-set <= 0)
	(unit-type-count petard-class <= 0)
=>
	(up-jump-rule 2))
(defrule
	(military-population >= 2)
(or	(and	(players-military-population target-player <= 1)
		(military-population >= 4)); 5
	(strategic-number sn-military-superiority >= 2))
	(up-compare-goal attacking != yes)
=>
	(set-goal attacking yes))
(defrule
	(strategic-number sn-military-superiority >= 1); attack with >= 2 above
	(players-building-type-count target-player watch-tower < 2); 1
(or	(strategic-number sn-military-superiority >= 2)
(or	(unit-type-count militiaman-line < 6)
	(goal sk-var no)))
(or	(players-unit-type-count target-player scout-cavalry < 3); 2
(or	(unit-type-count spearman-line s:>= cavalry)
(or	(military-population >= 33); 36
	(unit-type-count archer-line >= 12)))); 18
	(up-compare-goal attacking != yes)
=>
	(set-goal attacking yes)); end jump
(defrule
(or	(players-military-population focus-player >= 5); target
	(strategic-number sn-military-superiority <= -2))
(or	(and	(players-current-age target-player >= castle-age)
		(and	(strategic-number sn-military-superiority <= 0)
			(current-age <= feudal-age)))
	(and	(goal attacking yes)
		(strategic-number sn-military-superiority <= -1)))
;	(goal attacking yes)
=>
	(chat-local-to-self "1.")
;	(set-goal attacking no)
	(set-goal retreatnow yes))
(defrule
	(players-current-age target-player >= castle-age)
	(strategic-number sn-military-superiority <= 1)
	(current-age <= feudal-age)
;	(players-military-population target-player >= 2)
(or	(and	(or	(players-unit-type-count target-player scout-cavalry-line >= 6)
			(players-unit-type-count target-player knight-line >= 3))
		(unit-type-count spearman-line <= 3))
(or	(players-unit-type-count target-player crossbowman >= 8)
	(and	(players-unit-type-count target-player elite-skirmisher >= 8)
		(goal sk-var no))))
;	(goal attacking yes)
=>
	(chat-local-to-self "1,5.")
;	(set-goal attacking no)
	(set-goal retreatnow yes))
(defrule
	(strategic-number sn-military-superiority <= 0)
(or	(and	(players-unit-type-count target-player knight-line >= 1)
		(unit-type-count spearman-line < 1))
(or	(and	(players-unit-type-count target-player knight-line >= 2)
		(unit-type-count spearman-line < 2))
	(and	(players-unit-type-count target-player knight-line >= 3)
		(unit-type-count spearman-line < 3))))
;	(goal attacking yes)
=>
	(chat-local-to-self "2.")
;	(set-goal attacking no)
	(set-goal retreatnow yes))
(defrule
	(strategic-number sn-military-superiority <= -1)
(or	(strategic-number eagles >= 3)
(or	(and	(strategic-number camels >= 5)
		(unit-type-count spearman-line < 2))
	(and	(strategic-number skirms >= 9)
		(goal sk-var no))))
;	(goal attacking yes)
=>
	(chat-local-to-self "2,5.")
;	(set-goal attacking no)
	(set-goal retreatnow yes))
(defrule
	(strategic-number sn-military-superiority <= 0)
(or	(strategic-number eagles >= 5)
(or	(and	(strategic-number camels >= 8)
		(unit-type-count spearman-line < 3))
	(and	(goal sk-var no)
		(and	(strategic-number skirms >= 12)
			(unit-type-count knight-line < 3)))))
;	(goal attacking yes)
=>
	(chat-local-to-self "3.")
;	(set-goal attacking no)
	(set-goal retreatnow yes))
(defrule
	(strategic-number sn-military-superiority <= 1)
(or	(strategic-number eagles >= 9)
(or	(and	(strategic-number camels >= 13)
		(unit-type-count spearman-line < 5))
	(and	(strategic-number skirms >= 18)
		(and	(goal sk-var no)
			(unit-type-count-total knight-line < 4)))))
;	(goal attacking yes)
=>
	(chat-local-to-self "4.")
;	(set-goal attacking no)
	(set-goal retreatnow yes))
(defrule
	(strategic-number sn-military-superiority <= 2)
(or	(players-unit-type-count target-player knight-line >= 8)
(or	(strategic-number eagles >= 14)
(or	(strategic-number camels >= 20)
	(and	(strategic-number skirms >= 26)
		(goal sk-var no)))))
;	(goal attacking yes)
=>
	(chat-local-to-self "5.")
;	(set-goal attacking no)
	(set-goal retreatnow yes))
(defrule
	(unit-type-count siege-weapon-class <= 0)
	(unit-type-count knight-line <= 2)
	(strategic-number sn-military-superiority <= 3); 2
(or	(and	(players-building-type-count target-player watch-tower >= 3)
		(and	(strategic-number sn-current-age < castlea)
			(up-projectile-detected projectile-watch-tower < 3000)))
(or	(players-unit-type-count target-player mangonel-line >= 1)
	(players-unit-type-count target-player scorpion-line >= 2)))
;	(goal attacking yes)
=>
	(chat-local-to-self "6.")
;	(set-goal attacking no)
	(set-goal retreatnow yes))
(defrule
(or	(players-unit-type-count target-player huskarl-line >= 2)
	(and	(unit-type-count trebuchet-set <= 0)
		(and	(unit-type-count battering-ram-line <= 1)
			(and	(up-projectile-detected projectile-castle < 3000)
				(players-building-type-count target-player castle >= 1)))))
=>
	(chat-local-to-self "7.")
	(set-goal retreatnow yes))
(defrule
	(unit-type-count siege-weapon-class <= 0)
	(unit-type-count knight-line <= 0)
(or	(players-building-type-count target-player watch-tower >= 5)
	(strategic-number sn-military-superiority <= 4)); 3
(or	(and	(players-building-type-count target-player watch-tower >= 4)
		(up-projectile-detected projectile-watch-tower < 3000))
(or	(players-unit-type-count target-player mangonel-line >= 2)
	(players-unit-type-count target-player scorpion-line >= 3)))
;	(goal attacking yes)
=>
	(chat-local-to-self "8.")
;	(set-goal attacking no)
	(set-goal retreatnow yes))
(defrule
	(strategic-number sn-military-superiority <= 0)
	(goal sk-var no)
	(strategic-number skirms >= 4)
	(players-unit-type-count target-player archer-line < 1)
	(players-unit-type-count target-player militiaman-line < 1)
	(players-unit-type-count target-player scout-cavalry <= 1)
	(players-building-type-count target-player stable < 1)
	(unit-type-count knight-line < 2)
;	(goal attacking yes)
=>
	(chat-local-to-self "9.")
;	(set-goal attacking no)
	(set-goal retreatnow yes))
(defrule
(or	(building-type-count-total town-center >= 4); 3
	(strategic-number sn-military-superiority <= 0))
; test	(goal attacking no)
	(goal sk-var yes)
	(player-in-game any-ally)
(or	(players-current-age every-enemy >= castle-age)
(or	(strategic-number cavalry >= 15)
	(players-current-age any-enemy >= imperial-age))); test
; hmm	(up-research-status c: castle-age >= research-pending);	(current-age >= castle-age)
(or	(strategic-number archers < 20)
	(strategic-number cavalry >= 10))
;	(goal attacking yes)
=>
	(chat-local-to-self "10.")
;	(set-goal attacking no)
	(set-goal retreatnow yes))
(defrule
	(goal attacking yes)
	(up-compare-goal target-mpop g:> my-mpop)
	(up-compare-goal retreatnow != yes)
	(strategic-number sn-military-superiority <= 0)
	(military-population < 16)
(or	(goal assistance no)
	(strategic-number sn-military-superiority <= -1))
	(up-timer-status resetnow != timer-running);	(up-timer-status resetnow == timer-disabled)
=>
	(chat-local-to-self "11.")
	(set-goal attacking no)
	(up-modify-sn sn-maximum-town-size c:max 10)
	(up-modify-sn sn-maximum-town-size c:min 14)
;	(up-full-reset-search)
;	(up-filter-distance s: sn-maximum-town-size c: -1)
;	(up-filter-include cmdid-military -1 -1 -1) ;
;	(up-find-local c: all-units-class c: 240)
;	(up-set-target-point position-self-x)
;	(up-target-point 0 action-move -1 stance-no-attack)
	(up-retreat-now);
	(enable-timer resetnow 18)
)
(defrule
	(unit-type-count siege-weapon-class <= 0)
	(strategic-number sn-maximum-town-size >= 20); for now
;	(up-projectile-target projectile-watch-tower == archery-class)
	(up-projectile-detected projectile-watch-tower < 3000)
	(military-population < 45); 40
	(unit-type-count knight-line < 5)
	(strategic-number sn-military-superiority <= 3)
=>
	(up-full-reset-search)
	(up-filter-garrison c: 3 c: -1)
	(up-find-remote c: watch-tower c: 1)
	(up-get-search-state local-total)
	(set-goal temporary-goal 42812))
(defrule
	(goal temporary-goal 42812)
	(up-compare-goal remote-total >= 1)
	(up-compare-flag retreat-flag != 2)
=>
	(set-goal attacking no)
	(up-modify-flag retreat-flag c:+ 2))
(defrule
	(strategic-number sn-maximum-town-size >= 20); for now
	(up-compare-goal ttower-distance >= 20);
	(military-population < 45)
;	(up-projectile-target projectile-watch-tower == archery-class)
	(up-projectile-detected projectile-watch-tower < 3000)
	(strategic-number sn-military-superiority <= 0)
	(up-timer-status resetnow == timer-disabled)
;	(goal attacking yes)
=>
	(chat-local-to-self "12.")
	(set-goal attacking no)
	(up-full-reset-search)
	(up-filter-include cmdid-military -1 -1 -1) ;
	(up-find-local c: all-units-class c: 240)
	(up-set-target-point position-self-x)
	(up-target-point 0 action-move -1 stance-no-attack)
	(enable-timer resetnow 16)
	(up-modify-sn sn-maximum-town-size c:min 14))
(defrule
;	(up-compare-goal remote-last <= 0)
	(strategic-number sn-maximum-town-size >= 20); for now
	(unit-type-count siege-weapon-class <= 0)
	(military-population < 33)
; tl	(unit-type-count elite-skirmisher < 16)
; nn	(up-projectile-target projectile-watch-tower == archery-class)
	(up-projectile-detected projectile-watch-tower < 3000)
	(strategic-number sn-military-superiority <= 1)
	(up-compare-flag retreat-flag != 2)
=>
	(up-modify-flag retreat-flag c:+ 2))
(defrule
	(unit-type-count siege-weapon-class <= 0)
	(unit-type-count trebuchet-set <= 0)
	(strategic-number target-military-superiority < 45)
; nn	(up-projectile-target projectile-town-center == archery-class)
	(up-projectile-detected projectile-town-center < 3000)
;(or
;	(strategic-number sn-military-superiority <= 3)
;	(players-current-age target-player >= castle-age))
	(up-compare-flag retreat-flag != 1)
=>
	(up-modify-flag retreat-flag c:+ 1))
(defrule; 127
	(goal retreatnow yes)
	(up-compare-goal sk-var != yes)
	(up-compare-const sk-var-affinity >= 1)
(not	(civ-selected turkish))
	(up-research-status c: castle-age <= research-available)
=>
	(chat-to-player my-player-number "sk-var?")
	(set-goal sk-var yes)
	(set-goal retreatnow no)
	(up-jump-rule -24)
	(disable-self)); end jump
;==============================================================
(defrule
	(up-compare-goal strategy != s-flush)
	(up-compare-goal scoutmicro == no)
=>
	(up-jump-rule 9))
(defrule
(or	(goal retargetenemy yes)
	(goal retargetenemy 7))
	(goal assistance no)
(or	(up-compare-goal focus-mpop >= 7)
	(up-compare-goal focus-cpop <= 0))
	(up-compare-goal focus-mpop g:>= my-mpop)
	(up-compare-goal enemy-pocket >= 1)
	(up-compare-goal ep-mpop <= 1)
	(up-compare-goal ep-cpop >= 1)
	(players-current-age every-enemy <= feudal-age)
=>
	(up-modify-sn sn-target-player-number g:= enemy-pocket)
	(up-modify-sn sn-focus-player-number g:= enemy-pocket))
(defrule
	(goal retargetenemy 7)
=>
	(set-goal retargetenemy yes)
;	(chat-to-player my-player-number "Targeting the closest enemy again. e-p")
;	;(chat-to-player every-ally "Targeting the closest enemy again.")
)
(defrule
	(goal strategy s-flush)
	(up-compare-goal scoutmicro != yes)
=>
	(set-goal scoutmicro yes)
	(disable-self))
(defrule
	(players-building-count any-enemy >= 1)
	(goal attacking no)
	(unit-type-count-total scout-cavalry-line >= scrush-cap)
=>
	(set-strategic-number sn-total-number-explorers 0)
	(set-strategic-number sn-number-explore-groups 0)
	(up-reset-scouts)
	(set-goal scouting no)
	(up-retreat-to stable c: scout-cavalry-line)
	(disable-self))
(defrule
	(unit-type-count siege-weapon-class <= 0)
;	(up-projectile-target projectile-watch-tower == archery-class)
	(up-projectile-detected projectile-watch-tower < 3000)
	(military-population < 20)
	(unit-type-count knight-line < 5)
	(strategic-number sn-military-superiority <= 2)
=>
	(up-full-reset-search)
	(up-filter-garrison c: 3 c: -1)
	(up-find-remote c: watch-tower c: 1)
	(up-get-search-state local-total))
(defrule
	(up-compare-goal remote-total >= 1)
	(unit-type-count siege-weapon-class <= 0)
;	(up-projectile-target projectile-watch-tower == archery-class)
	(up-projectile-detected projectile-watch-tower < 3000)
	(military-population < 40)
	(unit-type-count knight-line < 5)
	(strategic-number sn-military-superiority <= 2)
	(up-compare-flag retreat-flag != 2)
=>
	(up-modify-flag retreat-flag c:+ 2))
(defrule
;	(up-compare-goal remote-last <= 0)
	(unit-type-count siege-weapon-class <= 0)
	(up-projectile-target projectile-watch-tower == archery-class)
	(up-projectile-detected projectile-watch-tower < 3000)
	(strategic-number sn-military-superiority <= 1)
	(up-compare-flag retreat-flag != 2)
=>
	(up-modify-flag retreat-flag c:+ 2))
(defrule
;	(goal strategy s-flush)
	(unit-type-count siege-weapon-class <= 0)
	(unit-type-count trebuchet-set <= 0)
;	(strategic-number target-military-superiority < 40)
;	(up-projectile-target projectile-town-center == archery-class)
	(up-projectile-detected projectile-town-center < 3000)
;(or
;	(strategic-number sn-military-superiority <= 3)
;	(players-current-age target-player >= castle-age))
	(up-compare-flag retreat-flag != 1)
=>
	(up-modify-flag retreat-flag c:+ 1)); end jump
(defrule
	(goal retargetenemy 7)
(or	(strategic-number sn-focus-player-number s:!= sn-target-player-number)
(or	(up-compare-goal enemy-pocket <= 0)
(or	(up-compare-goal enemy-pocket > max-players)
	(not	(player-in-game focus-player)))))
=>
	(up-chat-data-to-player my-player-number "Debugging enemy-pocket focus-player: %d." g: enemy-pocket)
	(up-modify-sn sn-focus-player-number s:= sn-target-player-number))
;==============================================================
(defrule
	(up-compare-goal strategy != a-rush)
=>
	(up-jump-rule 17))
(defrule
	(up-compare-goal armytech <= feudal)
	(goal assistance no)
	(strategic-number sn-military-superiority <= 0)
=>
	(up-jump-rule 2))
(defrule
;j	(goal strategy a-rush)
	(strategic-number sn-military-superiority >= 0)
(or	(strategic-number sn-military-superiority >= 1)
	(and	(players-unit-type-count target-player knight-line <= 4)
		(or	(players-building-type-count target-player stable <= 1)
			(players-current-age target-player <= feudal-age))))
(or	(military-population >= 13)
	(and	(military-population >= 9)
		(or	(strategic-number sn-military-superiority >= 1)
			(players-current-age target-player <= feudal-age))))
;tl	(goal attacking no)
=>
	(set-goal attacking yes))
(defrule
;j	(goal strategy a-rush)
	(goal assistance yes)
(or	(population >= max-civ-pop)
(or	(strategic-number teamsuperiority >= -1)
	(strategic-number sn-military-superiority >= -1)))
	(strategic-number sn-military-superiority >= -3)
	(players-building-type-count target-player watch-tower < 2); 1
	(military-population >= 7)
	(up-research-status c: ri-bodkin-arrow >= research-pending)
	(up-research-status c: ri-crossbow >= research-pending)
	(goal attacking no)
=>
	(set-goal attacking yes))
(defrule
;	(goal strategy a-rush)
	(strategic-number sn-military-superiority <= -1)
(or	(unit-type-count 26 >= 3); dead x-bows
(or	(goal defend yes)
(or	(goal underattack yes)
	(strategic-number sn-military-superiority <= -2))))
(or	(strategic-number skirms >= 7)
(or	(strategic-number sn-military-superiority <= -3)
	(players-current-age target-player >= castle-age)))
;	(goal attacking yes)
=>
;	(set-goal attacking no)
	(set-goal retreatnow yes)
	(chat-local-to-self "1."))
(defrule
;	(goal strategy a-rush)
	(strategic-number sn-military-superiority <= 0)
(or	(and	(players-unit-type-count target-player knight-line >= 3)
		(unit-type-count spearman-line < 1))
(or	(and	(players-unit-type-count target-player knight-line >= 5)
		(unit-type-count spearman-line < 2))
	(and	(players-unit-type-count target-player knight-line >= 7)
		(unit-type-count spearman-line < 3))))
;	(goal attacking yes)
=>
;	(set-goal attacking no)
	(set-goal retreatnow yes)
	(chat-local-to-self "2."))
(defrule
;	(goal strategy a-rush)
	(strategic-number sn-military-superiority <= -1)
(or	(players-unit-type-count target-player mangonel-line >= 1)
(or	(players-unit-type-count target-player scorpion-line >= 1)
(or	(players-unit-type-count target-player eagle-warrior-line >= 6)
(or	(players-unit-type-count target-player knight-line >= 5)
	(strategic-number skirms >= 12)))))
;	(goal attacking yes)
=>
;	(set-goal attacking no)
	(set-goal retreatnow yes)
	(chat-local-to-self "2,5."))
(defrule
;	(goal strategy a-rush)
	(strategic-number sn-military-superiority <= 0)
(or	(players-unit-type-count target-player mangonel-line >= 2)
(or	(players-unit-type-count target-player scorpion-line >= 2)
(or	(players-unit-type-count target-player eagle-warrior-line >= 8)
(or	(and	(players-unit-type-count target-player knight-line >= 9)
		(unit-type-count spearman-line < 4))
	(and	(strategic-number skirms >= 16)
		(up-compare-goal mangonel-set < 1))))))
;	(goal attacking yes)
=>
;	(set-goal attacking no)
	(set-goal retreatnow yes)
	(chat-local-to-self "3."))
(defrule
;	(goal strategy a-rush)
	(strategic-number sn-military-superiority <= 1)
(or	(players-unit-type-count target-player mangonel-line >= 3)
(or	(players-unit-type-count target-player scorpion-line >= 3)
(or	(players-unit-type-count target-player eagle-warrior-line >= 14)
(or	(and	(players-unit-type-count target-player knight-line >= 12)
		(unit-type-count spearman-line < 6))
	(and	(players-unit-type-count target-player skirmisher-line >= 20)
		(up-compare-goal mangonel-set < 2))))))
;	(goal attacking yes)
=>
;	(set-goal attacking no)
	(set-goal retreatnow yes)
	(chat-local-to-self "4."))
(defrule
;	(goal strategy a-rush)
	(unit-type-count siege-weapon-class <= 0)
	(unit-type-count knight-line <= 2)
	(strategic-number sn-military-superiority <= 2)
(or	(and	(players-building-type-count target-player watch-tower >= 3)
		(and	(strategic-number sn-current-age < imperial)
			(up-projectile-detected projectile-watch-tower < 3000)))
(or	(players-unit-type-count target-player mangonel-line >= 1)
	(players-unit-type-count target-player scorpion-line >= 2)))
;	(goal attacking yes)
=>
;	(set-goal attacking no)
	(set-goal retreatnow yes)
	(chat-local-to-self "5."))
(defrule
;	(goal strategy a-rush)
(or	(players-unit-type-count target-player huskarl-line >= 2)
	(and	(unit-type-count trebuchet-set <= 0)
		(and	(unit-type-count battering-ram-line <= 1)
			(and	(up-projectile-detected projectile-castle < 3000)
				(players-building-type-count target-player castle >= 1)))))
=>
	(set-goal retreatnow yes)
	(chat-local-to-self "6."))
(defrule
;	(goal strategy a-rush)
	(unit-type-count siege-weapon-class <= 0)
	(unit-type-count knight-line <= 0)
(or	(players-building-type-count target-player watch-tower >= 5)
	(strategic-number sn-military-superiority <= 3))
(or	(and	(players-building-type-count target-player watch-tower >= 4)
		(up-projectile-detected projectile-watch-tower < 3000))
(or	(players-unit-type-count target-player mangonel-line >= 2)
	(players-unit-type-count target-player scorpion-line >= 3)))
;	(goal attacking yes)
=>
;	(set-goal attacking no)
	(set-goal retreatnow yes)
	(chat-local-to-self "7."))
(defrule
;	(goal strategy a-rush)
	(strategic-number sn-military-superiority <= 0)
(or	(players-unit-type-count target-player war-wagon-line >= 5)
(or	(players-unit-type-count target-player plumed-archer-line >= 7)
(or	(players-unit-type-count target-player eagle-warrior-line >= 10)
(or	(players-unit-type-count target-player war-elephant-line >= 5)
	(strategic-number skirms >= 20)))))
;	(goal attacking yes)
=>
;	(set-goal attacking no)
	(set-goal retreatnow yes)
	(chat-local-to-self "8."))
(defrule
	(unit-type-count siege-weapon-class <= 0)
;	(up-projectile-target projectile-watch-tower == archery-class)
	(up-projectile-detected projectile-watch-tower < 3000)
	(military-population < 44)
	(unit-type-count knight-line < 4)
	(strategic-number sn-military-superiority <= 3)
=>
	(up-full-reset-search)
	(up-filter-garrison c: 3 c: -1)
	(up-find-remote c: watch-tower c: 1)
	(up-get-search-state local-total))
(defrule
	(up-compare-goal remote-total >= 1)
	(unit-type-count siege-weapon-class <= 0)
;	(up-projectile-target projectile-watch-tower == archery-class)
	(up-projectile-detected projectile-watch-tower < 3000)
	(military-population < 44)
	(unit-type-count knight-line < 4)
	(strategic-number sn-military-superiority <= 3)
	(up-compare-flag retreat-flag != 2)
=>
	(set-goal attacking no)
	(up-modify-flag retreat-flag c:+ 2))
(defrule
;	(goal strategy a-rush)
	(military-population < 50)
	(up-projectile-target projectile-watch-tower == archery-class)
	(up-projectile-detected projectile-watch-tower < 3000)
	(strategic-number sn-military-superiority <= 0)
	(up-timer-status resetnow == timer-disabled)
;	(goal attacking yes)
=>
	(set-goal attacking no)
	(up-full-reset-search)
	(up-filter-include cmdid-military -1 -1 -1) ;
	(up-find-local c: all-units-class c: 240)
	(up-set-target-point position-self-x)
	(up-target-point 0 action-move -1 stance-no-attack)
	(enable-timer resetnow 16)
	(up-modify-sn sn-maximum-town-size c:max 10)
	(up-modify-sn sn-maximum-town-size c:min 14)
	(chat-local-to-self "9."))
(defrule
;	(up-compare-goal remote-last <= 0)
	(unit-type-count siege-weapon-class <= 0)
	(military-population < 24); 30
; tl	(unit-type-count elite-skirmisher < 16)
; nn	(up-projectile-target projectile-watch-tower == archery-class)
	(up-projectile-detected projectile-watch-tower < 3000)
	(strategic-number sn-military-superiority <= 1)
	(up-compare-flag retreat-flag != 2)
=>
	(up-modify-flag retreat-flag c:+ 2))
(defrule
;	(goal strategy a-rush)
	(unit-type-count siege-weapon-class <= 1)
	(unit-type-count trebuchet-set <= 0)
	(strategic-number target-military-superiority < 42)
	(up-projectile-target projectile-town-center == archery-class)
	(up-projectile-detected projectile-town-center < 3000)
;(or
;	(strategic-number sn-military-superiority <= 3)
;	(players-current-age target-player >= castle-age))
	(up-compare-flag retreat-flag != 1)
=>
	(up-modify-flag retreat-flag c:+ 1)); end jump
;==============================================================
(defrule
	(up-compare-goal strategy != ca-rush)
=>
	(up-jump-rule 15))
(defrule
	(strategic-number sn-military-superiority >= 0)
(or	(strategic-number sn-military-superiority >= 1)
	(and	(players-unit-type-count target-player knight-line <= 4)
		(or	(players-building-type-count target-player stable <= 1)
			(players-current-age target-player <= feudal-age))))
(or	(military-population >= 11)
	(and	(military-population >= 7)
		(or	(strategic-number sn-military-superiority >= 1)
			(players-current-age target-player <= feudal-age))))
;tl	(goal attacking no)
=>
	(set-goal attacking yes))
(defrule
	(goal assistance yes)
(or	(population >= max-civ-pop)
(or	(strategic-number teamsuperiority >= -1)
	(strategic-number sn-military-superiority >= -1)))
	(strategic-number sn-military-superiority >= -3)
	(players-building-type-count target-player watch-tower < 2); 1
	(military-population >= 7)
	(up-research-status c: ri-bodkin-arrow >= research-pending)
	(goal attacking no)
=>
	(set-goal attacking yes))
(defrule
	(strategic-number sn-military-superiority <= -1)
(or	(unit-type-count 34 >= 2); dead cava
(or	(goal defend yes)
(or	(goal underattack yes)
	(strategic-number sn-military-superiority <= -2))))
(or	(strategic-number skirms >= 7)
(or	(strategic-number sn-military-superiority <= -3)
	(players-current-age target-player >= castle-age)))
;	(goal attacking yes)
=>
;	(set-goal attacking no)
	(set-goal retreatnow yes)
	(chat-local-to-self "1."))
(defrule
	(strategic-number sn-military-superiority <= -1)
(or	(players-unit-type-count target-player mangonel-line >= 1)
(or	(players-unit-type-count target-player scorpion-line >= 1)
(or	(players-unit-type-count target-player eagle-warrior-line >= 7)
(or	(players-unit-type-count target-player knight-line >= 6)
	(strategic-number skirms >= 12)))))
;	(goal attacking yes)
=>
;	(set-goal attacking no)
	(set-goal retreatnow yes)
	(chat-local-to-self "2."))
(defrule
	(strategic-number sn-military-superiority <= 0)
(or	(players-unit-type-count target-player mangonel-line >= 2)
(or	(players-unit-type-count target-player scorpion-line >= 2)
(or	(players-unit-type-count target-player eagle-warrior-line >= 14)
(or	(players-unit-type-count target-player knight-line >= 12)
	(and	(strategic-number skirms >= 16)
		(up-compare-goal mangonel-set < 1))))))
;	(goal attacking yes)
=>
;	(set-goal attacking no)
	(set-goal retreatnow yes)
	(chat-local-to-self "3."))
(defrule
	(strategic-number sn-military-superiority <= 1)
(or	(players-unit-type-count target-player mangonel-line >= 3)
(or	(players-unit-type-count target-player scorpion-line >= 3)
(or	(players-unit-type-count target-player eagle-warrior-line >= 21)
(or	(players-unit-type-count target-player knight-line >= 18)
	(and	(strategic-number skirms >= 20)
		(up-compare-goal mangonel-set < 2))))))
;	(goal attacking yes)
=>
;	(set-goal attacking no)
	(set-goal retreatnow yes)
	(chat-local-to-self "4."))
(defrule
	(unit-type-count siege-weapon-class <= 0)
	(unit-type-count knight-line <= 2)
	(strategic-number sn-military-superiority <= 2)
(or	(and	(players-building-type-count target-player watch-tower >= 3)
		(and	(strategic-number sn-current-age < imperial)
			(up-projectile-detected projectile-watch-tower < 3000)))
(or	(players-unit-type-count target-player mangonel-line >= 1)
	(players-unit-type-count target-player scorpion-line >= 2)))
;	(goal attacking yes)
=>
;	(set-goal attacking no)
	(set-goal retreatnow yes)
	(chat-local-to-self "5."))
(defrule
(or	(players-unit-type-count target-player huskarl-line >= 2)
	(and	(unit-type-count trebuchet-set <= 0)
		(and	(unit-type-count battering-ram-line <= 1)
			(and	(up-projectile-detected projectile-castle < 3000)
				(players-building-type-count target-player castle >= 1)))))
=>
	(set-goal retreatnow yes)
	(chat-local-to-self "6."))
(defrule
	(unit-type-count siege-weapon-class <= 0)
	(unit-type-count knight-line <= 0)
(or	(players-building-type-count target-player watch-tower >= 5)
	(strategic-number sn-military-superiority <= 3))
(or	(and	(players-building-type-count target-player watch-tower >= 4)
		(up-projectile-detected projectile-watch-tower < 3000))
(or	(players-unit-type-count target-player mangonel-line >= 2)
	(players-unit-type-count target-player scorpion-line >= 3)))
;	(goal attacking yes)
=>
;	(set-goal attacking no)
	(set-goal retreatnow yes)
	(chat-local-to-self "7."))
(defrule
	(strategic-number sn-military-superiority <= 0)
(or	(players-unit-type-count target-player war-wagon-line >= 5)
(or	(players-unit-type-count target-player plumed-archer-line >= 8)
(or	(players-unit-type-count target-player longbowman-line >= 11)
(or	(players-unit-type-count target-player chu-ko-nu-line >= 11)
	(strategic-number skirms >= 20)))))
;	(goal attacking yes)
=>
;	(set-goal attacking no)
	(set-goal retreatnow yes)
	(chat-local-to-self "8."))
(defrule
	(unit-type-count siege-weapon-class <= 0)
;	(up-projectile-target projectile-watch-tower == archery-class)
	(up-projectile-detected projectile-watch-tower < 3000)
	(military-population < 44)
	(unit-type-count knight-line < 4)
	(strategic-number sn-military-superiority <= 3)
=>
	(up-full-reset-search)
	(up-filter-garrison c: 3 c: -1)
	(up-find-remote c: watch-tower c: 1)
	(up-get-search-state local-total))
(defrule
	(up-compare-goal remote-total >= 1)
	(unit-type-count siege-weapon-class <= 0)
;	(up-projectile-target projectile-watch-tower == archery-class)
	(up-projectile-detected projectile-watch-tower < 3000)
	(military-population < 44)
	(unit-type-count knight-line < 4)
	(strategic-number sn-military-superiority <= 3)
	(up-compare-flag retreat-flag != 2)
=>
	(set-goal attacking no)
	(up-modify-flag retreat-flag c:+ 2))
(defrule
	(military-population < 50)
	(up-projectile-target projectile-watch-tower == archery-class)
	(up-projectile-detected projectile-watch-tower < 3000)
	(strategic-number sn-military-superiority <= 0)
	(up-timer-status resetnow == timer-disabled)
;	(goal attacking yes)
=>
	(set-goal attacking no)
	(up-full-reset-search)
	(up-filter-include cmdid-military -1 -1 -1) ;
	(up-find-local c: all-units-class c: 240)
	(up-set-target-point position-self-x)
	(up-target-point 0 action-move -1 stance-no-attack)
	(enable-timer resetnow 16)
	(up-modify-sn sn-maximum-town-size c:max 10)
	(up-modify-sn sn-maximum-town-size c:min 14)
	(chat-local-to-self "9."))
(defrule
;	(up-compare-goal remote-last <= 0)
	(unit-type-count siege-weapon-class <= 0)
	(military-population < 24); 30
; tl	(unit-type-count elite-skirmisher < 16)
; nn	(up-projectile-target projectile-watch-tower == archery-class)
	(up-projectile-detected projectile-watch-tower < 3000)
	(strategic-number sn-military-superiority <= 1)
	(up-compare-flag retreat-flag != 2)
=>
	(up-modify-flag retreat-flag c:+ 2))
(defrule
	(unit-type-count siege-weapon-class <= 1)
	(unit-type-count trebuchet-set <= 0)
	(strategic-number target-military-superiority < 42)
	(up-projectile-target projectile-town-center == archery-class)
	(up-projectile-detected projectile-town-center < 3000)
;(or
;	(strategic-number sn-military-superiority <= 3)
;	(players-current-age target-player >= castle-age))
	(up-compare-flag retreat-flag != 1)
=>
	(up-modify-flag retreat-flag c:+ 1)); end jump
;==============================================================
(defrule
	(up-compare-goal strategy != krush)
=>
	(up-jump-rule 21))
(defrule
;tl	(goal attacking no)
	(strategic-number sn-military-superiority >= 0)
(or	(strategic-number sn-military-superiority >= 1)
	(and	(players-unit-type-count target-player knight-line <= 4)
		(or	(players-building-type-count target-player stable <= 1)
			(players-current-age target-player <= feudal-age))))
(or	(military-population >= 11); 10
	(and	(military-population >= 5); 6
		(or	(strategic-number sn-military-superiority >= 1)
			(players-current-age target-player <= feudal-age))))
=>
	(set-goal attacking yes))
(defrule
	(goal attacking no)
	(goal assistance yes)
(or	(population >= max-civ-pop)
(or	(strategic-number teamsuperiority >= -1)
	(strategic-number sn-military-superiority >= -1)))
	(strategic-number sn-military-superiority >= -2); 3
	(unit-type-count knight-line >= 3); 4
(or	(current-age-time < 180)
(or	(players-current-age target-player <= feudal-age)
	(unit-type-count knight-line >= 5))); 4
=>
	(set-goal attacking yes))
(defrule
	(strategic-number sn-military-superiority <= 0)
(or	(and	(unit-type-count 111 >= 8); dead kt
		(strategic-number sn-military-superiority <= -1))
	(strategic-number sn-military-superiority <= -3))
(or	(strategic-number spears >= 9); 8
	(players-current-age target-player >= castle-age))
(or	(goal attacking yes)
(or	(goal underattack yes)
	(military-population >= 16))); 16
=>
	(chat-local-to-self "1.")
;	(set-goal attacking no)
	(set-goal retreatnow yes))
(defrule
	(goal underattack yes)
	(strategic-number sn-military-superiority <= -1); 0
=>
	(chat-local-to-self "1,5.")
;	(set-goal attacking no)
	(set-goal retreatnow yes))
(defrule
	(goal attacking yes)
	(goal assistance no)
(or	(strategic-number spears >= 9); 6
	(strategic-number teamsuperiority <= 0)); 1
(or	(strategic-number sn-military-superiority <= -3)
	(and	(strategic-number sn-military-superiority <= -2)
		(strategic-number teamsuperiority <= -2))); test; 0
(or	(players-current-age target-player >= castle-age)
	(strategic-number teamsuperiority <= -3)); 0
=>
	(chat-local-to-self "2.")
;	(set-goal attacking no)
	(set-goal retreatnow yes))
(defrule
	(strategic-number moenche < 5)
	(strategic-number spears < 6)
	(players-unit-type-count target-player teutonic-knight-line < 4)
	(players-unit-type-count target-player throwing-axeman-line < 10)
	(players-unit-type-count target-player genoese-crossbowman < 7)
	(unit-type-count 111 < 2); 8 ; dead kt
=>
	(up-jump-rule 3)); test
(defrule
	(strategic-number sn-military-superiority <= 1)
(or	(strategic-number moenche >= 6); 5
(or	(players-unit-type-count target-player teutonic-knight-line >= 3)
(or	(players-unit-type-count target-player kamayuk >= 5)
(or	(strategic-number camels >= 7)
	(strategic-number spears >= 12))))); 10
;(or	(goal attacking yes)
;	(military-population >= 10))
=>
	(chat-local-to-self "3.")
;	(set-goal attacking no)
	(set-goal retreatnow yes))
(defrule
(or	(unit-type-count 111 >= 8); dead kt
	(strategic-number sn-military-superiority <= 0))
(or	(strategic-number moenche >= 5)
(or	(players-unit-type-count target-player teutonic-knight-line >= 2)
(or	(players-unit-type-count target-player kamayuk >= 4)
(or	(strategic-number camels >= 6)
	(strategic-number spears >= 10))))); 8
;(or	(goal attacking yes)
;	(military-population >= 10))
=>
	(chat-local-to-self "4.")
;	(set-goal attacking no)
	(set-goal retreatnow yes))
(defrule
(or	(strategic-number sn-military-superiority <= 0)
	(and	(goal assistance no)
		(strategic-number sn-military-superiority <= 1)))
(or	(players-unit-type-count target-player throwing-axeman-line >= 6)
(or	(players-unit-type-count target-player genoese-crossbowman >= 4)
(or	(players-unit-type-count target-player pikeman >= 6); 5
	(players-unit-type-count target-player halberdier >= 3))))
;(or	(goal attacking yes)
;	(military-population >= 10))
=>
	(chat-local-to-self "5.")
;	(set-goal attacking no)
	(set-goal retreatnow yes)); end mini jump
(defrule
	(unit-type-count bombard-cannon-line <= 0)
	(unit-type-count trebuchet-set <= 0)
	(unit-type-count battering-ram-line <= 0)
;	(goal retreat yes)
	(strategic-number sn-military-superiority <= 3)
(or	(strategic-number sn-military-superiority <= 1)
	(military-population < 15))
	(players-building-type-count target-player castle >= 1)
	(up-projectile-detected projectile-castle < 3000)
=>
	(chat-local-to-self "6.")
	(set-goal retreatnow yes)
;	(up-full-reset-search)
;	(up-get-point position-target saved-point-x)
;	(up-set-target-point position-self-x)
;	(up-get-point-distance position-self-x saved-point-x distancegoal)
;	(up-modify-goal distancegoal c:- 13); 11
;	(up-filter-distance g: distancegoal c: -1)
;	(up-filter-include cmdid-military -1 -1 -1)
;	(up-find-local c: all-units-class c: 240)
;	(up-target-point 0 action-move -1 stance-no-attack)
;	(enable-timer resetnow 16)
;;	(chat-local-to-self "Retreating a few steps from the enemy castle.")
)
(defrule
(or	(up-research-status c: imperial-age != research-available)
(or	(and	(up-compare-const krush-affinity >= 2)
		(goal assistance yes))
(or	(goal attacking yes)
(or	(goal underattack yes)
	(goal escrowing yes)))))
=>
	(up-jump-rule 2))
(defrule
	(up-compare-goal custom-civ-pop >= 90)
(or	(up-compare-goal custom-civ-pop >= 120)
(or	(up-compare-goal custom-civ-pop >= up-max-civ)
(or	(and	(up-compare-goal total-food-amount >= imperial-f2)
		(up-compare-goal total-gold-amount >= imperial-g2))
(or	(up-compare-goal total-food-amount >= imperial-food)
	(up-compare-goal total-gold-amount >= imperial-gold)))))
=>
	(chat-local-to-self "Resetting strategy, go up.")
	(set-goal strategy usual)
	(set-goal milunits no)
	(set-goal attackprioritychange yes))
(defrule
	(up-compare-const krush-affinity <= 1)
	(up-compare-goal custom-civ-pop >= 80)
(or	(up-compare-goal custom-civ-pop >= 100)
(or	(up-compare-goal custom-civ-pop >= up-max-civ)
(or	(up-compare-goal total-food-amount >= imperial-food)
	(up-compare-goal total-gold-amount >= imperial-gold))))
=>
	(chat-local-to-self "Resetting strategy, go up.2")
	(set-goal strategy usual)
	(set-goal milunits no)
	(set-goal attackprioritychange yes)); end jump
(defrule
(or	(goal retreatnow yes)
(or	(goal underattack yes); test
	(population >= max-civ-pop)))
=>
	(up-jump-rule 5))
(defrule
(or	(goal patroldefense yes)
(or	(goal patrolhelp yes)
(or	(up-timer-status unit-control-flare-timer2 == timer-running); 222
(or	(up-timer-status patrol-timer == timer-running)
(or	(military-population >= 21); 15
(or	(strategic-number sn-military-superiority >= 1); 2
(or	(up-timer-status resetnow == timer-running)
	(goal attacking no))))))))
=>
	(up-jump-rule 4))
(defrule
;	(strategic-number sn-military-superiority <= 0)
	(unit-type-count 111 >= 2); dead kt
(or	(military-population < 11); 8
	(strategic-number sn-military-superiority <= -2)); -1
(or	(goal assistance no)
	(military-population < 5)); 6
=>
	(chat-local-to-self "7.")
	(set-goal temporary-goal7 41043))
(defrule
	(up-compare-goal target-mpop g:> my-mpop)
;	(strategic-number sn-military-superiority <= 0)
	(military-population < 15)
	(goal assistance no)
(or	(players-current-age target-player >= castle-age)
	(strategic-number sn-military-superiority <= -3)); -2
=>
	(chat-local-to-self "8.")
	(set-goal temporary-goal7 41043))
(defrule
	(goal temporary-goal7 41043)
=>
	(set-goal attacking no)
	(up-modify-sn sn-maximum-town-size c:max 10)
	(up-modify-sn sn-maximum-town-size c:min 14)
	(up-full-reset-search)
	(up-filter-distance s: sn-maximum-town-size c: -1)
	(up-filter-include cmdid-military -1 -1 -1) ;
	(up-find-local c: all-units-class c: 240)
	(up-set-target-point position-self-x)
	(up-target-point 0 action-move -1 stance-no-attack)
	(enable-timer resetnow 24)); 20
(defrule
	(unit-type-count siege-weapon-class <= 0)
	(players-building-type-count focus-player watch-tower >= 4)
	(up-research-status c: ri-scale-barding < research-complete)
	(up-projectile-detected projectile-watch-tower < 3000)
	(strategic-number sn-military-superiority <= -1)
	(strategic-number sn-current-age < imperial)
	(up-compare-flag retreat-flag != 2)
=>
	(up-modify-flag retreat-flag c:+ 2)); end jump
(defrule
	(unit-type-count siege-weapon-class <= 0); 1
	(unit-type-count trebuchet-set <= 0)
	(military-population < 15); 10
	(up-projectile-detected projectile-town-center < 3000)
	(strategic-number sn-military-superiority <= 3); 2
(or	(up-research-status c: ri-chain-barding < research-complete)
	(strategic-number sn-military-superiority <= 2))
	(up-timer-status resetnow != timer-running);	(up-timer-status resetnow == timer-disabled)
	(up-compare-flag retreat-flag != 1)
=>
	(up-modify-flag retreat-flag c:+ 1))
	
(defrule
	(goal siegevar yes)
	(up-allied-goal any-ally strategy == sling); end jump
	(research-completed ri-chain-barding)
	(unit-type-count knight-line > 9)
	(current-age == castle-age)
=>
	(set-goal attacking yes)
)
;==============================================================
(defrule
	(up-compare-goal strategy != stonewall)
=>
	(up-jump-rule 2))
(defrule
	(goal attacking no)
	(up-research-status c: ri-elite-eagle-warrior >= research-pending)
(or	(strategic-number sn-military-superiority >= 2)
(or	(and	(strategic-number sn-military-superiority >= 1)
		(unit-type-count eagle-warrior-line >= 15))
(or	(and	(strategic-number sn-military-superiority >= 0)
		(players-current-age target-player <= castle-age))
	(population >= del-civ-pop))))
=>
	(set-goal attacking yes))
(defrule
	(goal attacking no)
	(up-research-status c: ri-elite-eagle-warrior >= research-pending)
	(players-current-age target-player <= feudal-age)
	(strategic-number sn-military-superiority >= -1)
	(military-population >= 5)
=>
	(set-goal attacking yes)); end jump
;==============================================================
(defrule
	(up-compare-goal strategy != fast-imp)
=>
	(up-jump-rule 2))
(defrule
	(goal attacking no)
(or	(strategic-number sn-military-superiority >= 3)
	(unit-type-count bombard-cannon-line >= 1))
(or	(strategic-number sn-military-superiority >= 2)
(or	(and	(strategic-number sn-military-superiority >= 1)
		(up-compare-goal my-mpop >= 14))
(or	(goal assistance yes)
	(population >= del-civ-pop))))
	(strategic-number sn-military-superiority >= 0)
	(military-population >= 8)
=>
	(set-goal attacking yes))
(defrule
	(goal attacking no)
(or	(strategic-number sn-military-superiority >= 2)
	(unit-type-count bombard-cannon-line >= 1))
(or	(players-current-age target-player <= feudal-age)
	(up-compare-goal my-mpop g:>= focus-mpop))
	(players-current-age target-player <= castle-age)
	(strategic-number sn-military-superiority >= -1)
	(military-population >= 8)
=>
	(set-goal attacking yes)); end jump
;==============================================================
;(defrule
;(or	(goal drushmicro no)
;(or	(players-building-type-count any-enemy castle >= 1)
;(or	(players-building-type-count any-enemy bombard-tower >= 1)
;(or	(players-building-type-count any-enemy watch-tower >= 3)
;(or	(players-building-count target-player <= 0)
;	(up-compare-goal targetdistance < 25))))))
;=>
;	(up-jump-rule 1)) ; provisory
;(defrule
;	(goal attacking yes)
;	(goal gatherinside no)
;	(up-compare-goal gl-threat-time > 20000)
;=>
;	(up-full-reset-search)
;	(up-reset-filters)
;	(up-filter-include cmdid-military -1 -1 -1)
;	(up-find-local c: all-units-class c: 240)
;	(up-get-point position-target temporary-point-x)
;	(up-set-target-point temporary-point-x)
;;	(up-copy-point point-x position-self-x)
;;	(up-lerp-tiles point-x temporary-point-x c: 6)
;;	(up-set-target-point point-x)
;;	(up-target-point 0 action-move -1 stance-aggressive)
;	(up-target-point 0 action-patrol -1 stance-aggressive)
;	(enable-timer resetnow 30)
;	(disable-self))
;==============================================================
(defrule
	(up-compare-goal strategy != r-flush)
	(up-compare-goal strategy != a-rush)
	(up-compare-goal strategy != ca-rush)
=>
	(up-jump-rule 1))
(defrule; testing
	(up-timer-status resetnow == timer-running)
	(goal attacking yes)
	(unit-type-count siege-weapon-class <= 0)
	(up-projectile-detected projectile-watch-tower < 3000)
(or	(up-research-status c: ri-padded-archer-armor < research-complete)
	(up-research-status c: ri-fletching < research-complete))
	(strategic-number sn-military-superiority <= 1)
	(military-population < 25)
=>
	(set-goal attacking no)
	(up-modify-sn sn-maximum-town-size c:max 10)
	(up-modify-sn sn-maximum-town-size c:min 14)
	(set-strategic-number sn-percent-attack-soldiers 0)
	(set-strategic-number sn-number-attack-groups 0)
	(set-strategic-number sn-percent-attack-boats 0); for now
	(set-strategic-number sn-number-boat-attack-groups 0)); for now; end jump
;==============================================================
(defrule
;	(up-compare-sn sn-current-age g:>= strategy-type); test
	(goal retreatnow yes)
	(up-compare-goal strategy != usual)
	(up-compare-goal milunits != yes); test
=>
	(chat-local-to-self "Resetting strategy. TSA")
	(set-goal strategy usual)
	(set-goal milunits yes)
	(set-goal attackprioritychange yes))
;==============================================================
; General attack + retreat behavior
;==============================================================
#load-if-not-defined DIFFICULTY-EASIEST
#load-if-not-defined DIFFICULTY-EASY
#load-if-not-defined DIFFICULTY-MODERATE
(defrule
	(players-building-count any-enemy >= 1)
	(current-age-time > 60)
	(population > up-max-civ)
	(strategic-number sn-military-superiority >= 2)
	(strategic-number teamsuperiority >= 0)
	(up-compare-goal armytech >= imperial);	(current-age >= imperial-age)
(or	(unit-type-count battering-ram-line >= 5); 6
(or	(unit-type-count trebuchet-set >= 2); 3
	(strategic-number sn-military-superiority >= 3))); 4
	(players-current-age target-player <= castle-age)
	(goal attacking no)
=>
;	(chat-local-to-self "Attack now! They're still not in the imperial-age.")
	(set-goal attacking yes))
(defrule
	(players-building-count any-enemy >= 1)
	(population > up-max-civ)
	(strategic-number sn-military-superiority >= 1); 2
	(strategic-number teamsuperiority >= -1); 0
	(up-compare-goal armytech >= castlea);	(current-age >= castle-age)
(or	(unit-type-count battering-ram-line >= 2)
(or	(unit-type-count trebuchet-set >= 1)
	(strategic-number sn-military-superiority >= 2))); 4
	(players-current-age target-player <= feudal-age)
	(goal attacking no)
=>
;	(chat-local-to-self "Attack now! They're still not in the castle-age.")
	(set-goal attacking yes))
(defrule
	(players-building-count any-enemy >= 1)
	(players-current-age target-player <= dark-age)
(or	(players-building-count every-enemy >= 1)
	(players-current-age every-enemy <= dark-age))
;	(population > up-max-civ)
	(strategic-number sn-military-superiority >= 1)
	(strategic-number teamsuperiority >= -1); 0
	(current-age >= feudal-age)
(or	(up-compare-goal armytech >= feudal); (current-age-time > 60)
	(strategic-number sn-military-superiority >= 2))
	(military-population >= 4); 3
	(goal attacking no)
=>
;	(chat-local-to-self "Attack now! They're still not in the feudal-age.")
	(set-goal attacking yes))
#end-if
#end-if
#end-if


(defrule
	(goal attacking no)
	(strategic-number sn-current-age >= imperial)
(or	(goal researchplan yes)
	(strategic-number sn-military-superiority >= 4))
	(strategic-number sn-military-superiority >= 1)
(or	(strategic-number sn-military-superiority >= 3)
(or	(up-compare-goal excessGold >= 4300)
	(goal assistance yes)))
=>
	(set-goal attacking yes))
(defrule
	(goal attacking no)
	(strategic-number sn-current-age >= imperial)
	(current-age-time > 1500); Emergency attack rule for super-lategame.
	(unit-type-count-total villager-gold < 1)
	(cc-players-unit-type-count 0 gold-mine < 10)
	(population >= max-pop)
(or	(up-compare-goal tradeunits <= 2); 0
	(up-compare-goal excessGold >= 4300))
(not	(town-under-attack))
	(goal underattack no)
=>
	(set-goal attacking yes))
(defrule
	(goal attacking no)
	(strategic-number sn-current-age >= imperial)
	(population >= del-civ-pop)
(or	(population >= max-pop)
	(up-compare-goal gl-threat-time < 12000))
;	(player-in-game any-ally)
;	(players-population any-ally < max-civ-pop)
	(strategic-number sn-military-superiority >= 1)
	(goal siegereq yes)
	(goal researchplan yes)
	(goal retreat yes)
=>
	(set-goal attacking yes))

(defrule
	(goal attacking no)
	(goal assistance yes)
	(goal researchplan yes)
	(population >= del-civ-pop)
(or	(goal siegereq yes)
	(population >= max-pop))
=>
	(set-goal attacking yes))
(defrule
	(goal attacking no)
	(goal assistance yes)
	(goal underattack no)
	(strategic-number sn-military-superiority >= 0)
(or	(strategic-number sn-military-superiority >= 1)
	(strategic-number teamsuperiority >= 0))
=>
	(set-goal attacking yes))


(defrule
	(goal attacking no)
	(strategic-number sn-military-superiority >= 1)
(or	(goal researchplan yes)
	(and	(strategic-number sn-current-age >= imperial)
		(population >= max-pop)))
(or	(population >= siege-pop)
	(strategic-number sn-military-superiority >= 2))
(or	(unit-type-count battering-ram-line >= 8)
(or	(unit-type-count trebuchet-set >= 5); 6
	(unit-type-count bombard-cannon-line >= 8)))
=>
	(set-goal attacking yes))
(defrule
	(goal attacking no)
;	(goal researchplan yes)
(or	(and	(unit-type-count trebuchet-set >= 3); 6
		(strategic-number sn-military-superiority >= 2))
(or	(and	(unit-type-count trebuchet-set >= 2); 4
		(strategic-number sn-military-superiority >= 3))
	(and	(unit-type-count trebuchet-set >= 1); 2
		(strategic-number sn-military-superiority >= 4))))
=>
	(set-goal attacking yes))
(defrule
	(goal attacking no)
;	(goal researchplan yes)
(or	(and	(unit-type-count battering-ram-line >= 6); 7
		(strategic-number sn-military-superiority >= 2))
(or	(and	(unit-type-count battering-ram-line >= 4); 5
		(strategic-number sn-military-superiority >= 3))
	(and	(unit-type-count battering-ram-line >= 2); 3
		(strategic-number sn-military-superiority >= 4))))
=>
	(set-goal attacking yes))





(defrule
(or	(up-compare-goal attacking != yes)
(or	(goal retreatnow yes)
(or	(and	(up-compare-goal strategy-type <= castle-war)
		(up-compare-goal strategy != usual))
(or	(and	(military-population >= up-max-civ)
		(strategic-number sn-military-superiority >= 1))
	(and	(strategic-number sn-military-superiority >= 2)
		(population >= max-civ-pop))))))
=>
	(up-jump-rule 11))
(defrule
	(population <= eighty-pop)
	(strategic-number sn-military-superiority <= -2); -3
	(strategic-number teamsuperiority <= 2)
	(military-population < 50)
(or	(up-compare-goal excessWood < 100)
(or	(up-compare-goal excessFood < 100)
	(up-compare-goal excessGold < 100)))
=>
	(set-goal retreatnow yes))
(defrule
	(population <= eighty-pop)
(or	(strategic-number sn-military-superiority <= -3); -3
	(and	(up-compare-goal assistance == no)
		(strategic-number teamsuperiority <= 2)))
	(strategic-number sn-military-superiority <= -2); -3
	(military-population < 50)
(or	(strategic-number sn-current-age < imperial)
	(up-compare-goal excessGold < 200)); 225
=>
	(set-goal retreatnow yes))
(defrule
	(population <= eighty-pop)
(or	(strategic-number sn-military-superiority <= -3); -3
	(and	(up-compare-goal assistance == no)
		(strategic-number teamsuperiority <= 2)))
	(strategic-number sn-military-superiority <= -2); -3
	(military-population < 40)
;	(goal siegereq no)
	(up-compare-goal excessGold < 2000)
=>
	(set-goal retreatnow yes))
(defrule
	(population <= eighty-pop)
	(up-compare-goal assistance == no)
	(strategic-number sn-military-superiority <= 2)
	(strategic-number teamsuperiority <= 1)
	(up-research-status c: imperial-age <= research-pending)
	(up-research-status c: imperial-age >= research-available)
	(players-current-age focus-player >= imperial-age)
	(player-in-game focus-player)
(not	(stance-toward focus-player ally));	(stance-toward focus-player enemy)
	(up-compare-goal excessGold < 2000)
=>
	(set-goal retreatnow yes))
(defrule
;	(up-compare-const mp-game == 1)
	(strategic-number sn-military-superiority <= 0)
(or	(up-compare-goal assistance == no)
	(strategic-number sn-military-superiority <= -1)); test
	(population < up-max-civ)
(or	(unit-type-count siege-weapon-class <= 0)
	(strategic-number sn-military-superiority <= -1))
=>
	(set-goal retreatnow yes))
(defrule
;	(up-compare-const mp-game == 1)
	(population < max-civ-pop)
	(population-cap >= 75); 50
	(strategic-number sn-military-superiority <= 0)
(or	(strategic-number sn-military-superiority <= -1)
	(strategic-number teamsuperiority <= -1))
(or	(military-population < 10)
	(and	(goal strategy usual)
		(military-population < 15)))
;	(unit-type-count battering-ram-line <= 0)
=>
	(set-goal retreatnow yes))
(defrule
	(population < del-civ-pop)
	(population-cap >= 50)
	(military-population < 8)
	(strategic-number sn-military-superiority <= 0)
(or	(strategic-number sn-military-superiority <= -1)
(or	(strategic-number teamsuperiority <= -1)
	(players-population target-player >= max-pop)))
=>
	(set-goal retreatnow yes))
(defrule
	(population < max-civ-pop)
	(population-cap >= 125)
	(strategic-number sn-military-superiority <= 0)
	(strategic-number teamsuperiority <= 2)
;	(strategic-number target-civilian-superiority <= 30)
;	(unit-type-count battering-ram-line <= 0)
;	(unit-type-count trebuchet-set <= 0)
;	(unit-type-count bombard-cannon-line <= 0)
	(military-population < 25)
	(goal assistance no)
=>
	(set-goal retreatnow yes))
(defrule
	(strategic-number sn-military-superiority <= -2)
;	(strategic-number target-civilian-superiority <= 25)
	(population < max-civ-pop)
	(up-compare-goal excessWood < 1200)
	(up-compare-goal excessFood < 1200)
	(up-compare-goal excessGold < 1200)
	(military-population < 40)
; test	(goal assistance no)
=>
	(set-goal retreatnow yes))
(defrule
;?	(up-compare-const mp-game == 0)
	(population < max-civ-pop)
	(military-population < 40)
(or	(strategic-number sn-military-superiority <= -3)
	(and	(strategic-number sn-military-superiority <= -2)
		(or	(up-compare-goal excessWood < 500)
			(or	(up-compare-goal excessFood < 500)
				(up-compare-goal excessGold < 500)))))
	(goal retreat yes)
=>
	(set-goal retreatnow yes))
(defrule
	(current-age <= feudal-age)
	(up-research-status c: castle-age <= research-pending)
	(up-research-status c: castle-age >= research-available)
	(players-current-age target-player >= imperial-age)
;	(strategic-number sn-military-superiority <= 3)
	(population < max-civ-pop)
	(up-compare-goal excessGold < 2000)
=>
	(set-goal retreatnow yes)); end jump

;(defrule
;	(town-under-attack)
;	(up-compare-const mp-game == 1)
;	(goal retreat yes)
;	(goal defend yes)
;	(goal attacking yes)
;=>
;	(set-goal attacking no)
;	(up-modify-sn sn-maximum-town-size c:max 10)
;	(up-modify-sn sn-maximum-town-size c:min 14)
;	(set-strategic-number sn-percent-attack-soldiers 0)
;	(up-retreat-now)
;	(set-goal retreat no)
;	(chat-local-to-self "Retreating to protect the town.")
;	(enable-timer retreat-timer 306))

#load-if-not-defined DIFFICULTY-EASIEST
#load-if-not-defined DIFFICULTY-EASY
(defrule
(or	(goal retreatnow yes)
(or	(and	(up-compare-goal strategy-type <= castle-war); feudal-war
		(up-compare-goal strategy != usual))
	(and	(up-compare-goal gl-threat-target == scout-unit)
		(unit-type-count-total scout-unit == 1))))
=>
	(up-jump-rule 9))
(defrule
(or	(population >= max-civ-pop)
(or	(and	(military-population >= 70); 80
		(strategic-number sn-military-superiority >= 1))
	(strategic-number sn-military-superiority >= 3)))
=>
	(up-jump-rule 8))
(defrule
	(goal retreat yes)
;(or	(goal attacking yes)
;	(strategic-number sn-maximum-town-size >= 42)); 32
(nand	(up-building-type-in-town c: town-center >= 1)
	(strategic-number sn-maximum-town-size <= 24))
	(unit-type-count trebuchet-set <= 0)
	(unit-type-count siege-weapon-class <= 0)
	(up-projectile-detected projectile-town-center < 3000)
	(up-projectile-target projectile-town-center != building-class)
;	(up-projectile-target projectile-town-center != siege-weapon-class)
;	(up-projectile-target projectile-town-center != unpacked-trebuchet-class)
	(strategic-number sn-military-superiority <= 1)
(or	(strategic-number sn-military-superiority <= 0)
	(military-population < 15))
=>
;	(set-goal retreatnow yes))
	(set-goal temporary-goal2 76552))
(defrule
	(goal temporary-goal2 76552)
(or	(goal assistance no)
	(strategic-number sn-military-superiority <= 0)); -1
	(up-compare-flag retreat-flag != 1)
=>
	(chat-local-to-self "Retreating from town-center.")
	(up-modify-flag retreat-flag c:+ 1))
(defrule
	(goal attacking yes)
	(strategic-number sn-military-superiority <= -1)
	(unit-type-count trebuchet-set <= 1)
	(unit-type-count battering-ram-line <= 3)
	(unit-type-count bombard-cannon-line <= 5)
	(up-projectile-detected projectile-castle < 3000)
	(up-projectile-target projectile-castle != building-class)
	(up-projectile-target projectile-castle != siege-weapon-class)
	(up-projectile-target projectile-castle != unpacked-trebuchet-class)
=>
	(chat-local-to-self "Retreating from castle.")
	(set-goal retreatnow yes)
	(up-jump-rule 5))
(defrule
	(goal attacking yes)
	(strategic-number sn-military-superiority <= 0)
	(unit-type-count trebuchet-set <= 1)
	(unit-type-count battering-ram-line <= 2)
	(unit-type-count bombard-cannon-line <= 3)
	(up-projectile-detected projectile-castle < 3000)
	(up-projectile-target projectile-castle != building-class)
	(up-projectile-target projectile-castle != siege-weapon-class)
	(up-projectile-target projectile-castle != unpacked-trebuchet-class)
=>
	(chat-local-to-self "Retreating from castle.")
	(set-goal retreatnow yes)
	(up-jump-rule 4))
(defrule
	(goal attacking yes)
	(strategic-number sn-military-superiority <= 1)
	(unit-type-count trebuchet-set <= 0)
	(unit-type-count battering-ram-line <= 1)
	(unit-type-count bombard-cannon-line <= 2)
	(up-projectile-detected projectile-castle < 3000)
	(up-projectile-target projectile-castle != building-class)
	(up-projectile-target projectile-castle != siege-weapon-class)
	(up-projectile-target projectile-castle != unpacked-trebuchet-class)
=>
	(chat-local-to-self "Retreating from castle.")
	(set-goal retreatnow yes)
	(up-jump-rule 3))
(defrule
	(goal attacking yes)
;	(strategic-number sn-military-superiority <= 3)
	(unit-type-count siege-ship <= 0)
	(unit-type-count trebuchet-set <= 0)
	(unit-type-count battering-ram-line <= 0)
	(up-projectile-detected projectile-castle < 3000)
	(up-projectile-target projectile-castle != building-class)
;	(up-projectile-target projectile-castle != siege-weapon-class)
;	(up-projectile-target projectile-castle != unpacked-trebuchet-class)
=>
	(chat-local-to-self "Retreating from castle.")
	(set-goal retreatnow yes)
	(up-jump-rule 2))
(defrule
	(goal attacking yes)
	(unit-type-count trebuchet-set <= 0)
	(unit-type-count battering-ram-line <= 1)
	(unit-type-count bombard-cannon-line <= 1)
	(up-projectile-detected projectile-bombard-tower < 3000)
	(up-projectile-target projectile-bombard-tower != building-class)
	(up-projectile-target projectile-bombard-tower != siege-weapon-class)
;	(up-projectile-target projectile-bombard-tower != unpacked-trebuchet-class)
	(strategic-number sn-military-superiority <= 0)
=>
	(chat-local-to-self "Retreating from bombard-tower.")
	(set-goal retreatnow yes)
	(up-jump-rule 1))
(defrule
	(goal attacking yes)
	(unit-type-count trebuchet-set <= 0)
	(unit-type-count battering-ram-line <= 0)
	(unit-type-count bombard-cannon-line <= 0); 1
	(up-compare-goal mangonel-set <= 1); 3
	(military-population < 25); 42
	(up-projectile-target projectile-watch-tower == archery-class)
	(up-projectile-detected projectile-watch-tower < 3000)
	(strategic-number sn-military-superiority <= 1)
	(up-compare-flag retreat-flag != 2)
=>
	(chat-local-to-self "Retreating from tower.")
	(up-modify-flag retreat-flag c:+ 2)); end jump

;(defrule
;	(strategic-number sn-current-age <= castlea)
;	(strategic-number sn-military-superiority <= 2)
;	(military-population <= 35)
;(or	(up-projectile-detected projectile-watch-tower < 3000)
;	(up-projectile-detected projectile-town-center < 3000))
;	(up-projectile-target projectile-watch-tower == archery-class)
;;	(unit-type-count battering-ram-line <= 0)
;	(goal attacking no)
;=>
;	(up-full-reset-search)
;	(up-set-target-point position-self-x)
;	(up-filter-include cmdid-military -1 -1 -1)
;	(up-find-local c: archery-class c: 240)
;	(up-target-point 0 action-move -1 stance-no-attack)
;	(enable-timer resetnow 9)
;; tl	(up-modify-sn sn-maximum-town-size c:max 10)
;	(up-modify-sn sn-maximum-town-size c:min 14)
;;	(chat-local-to-self "Retreat: Ranged units. 1")
;)
;(defrule
;	(goal attacking yes)
;	(players-military-population focus-player <= 1); target
;	(strategic-number sn-military-superiority <= 2); 3
;	(military-population < 70)
;	(up-projectile-detected projectile-castle < 3000)
;	(up-projectile-target projectile-castle == archery-class)
;;	(unit-type-count battering-ram-line <= 0)
;=>
;	(up-full-reset-search)
;	(up-set-target-point position-self-x)
;	(up-filter-include cmdid-military -1 -1 -1)
;	(up-find-local c: archery-class c: 240)
;	(up-target-point 0 action-move -1 stance-no-attack)
;	(enable-timer resetnow 6)
;;	(chat-local-to-self "Retreat: Ranged units. 2")
;)

;(defrule
;	(goal attacking no)
;;attno	(strategic-number sn-military-superiority <= 2)
;	(up-projectile-detected projectile-castle < 3000)
;	(up-projectile-target projectile-castle == archery-class)
;;	(unit-type-count battering-ram-line <= 0)
;=>
;	(up-full-reset-search)
;	(up-get-point position-target saved-point-x)
;	(up-set-target-point position-self-x)
;	(up-get-point-distance position-self-x saved-point-x distancegoal)
;	(up-modify-goal distancegoal c:- 15); 13
;	(up-filter-distance g: distancegoal c: -1)
;	(up-filter-include cmdid-military -1 -1 -1)
;	(up-find-local c: archery-class c: 240)
;	(up-target-point 0 action-move -1 stance-no-attack)
;	(enable-timer resetnow 12))

(defrule
(or	(game-time >= 1800)
(or	(players-building-type-count target-player town-center <= 0)
(or	(up-timer-status resetnow != timer-disabled)
(or	(up-compare-const dm-game == 1)
(or	(strategic-number sn-military-superiority >= 3); 2
(or	(military-population >= 25)
(or	(population >= max-civ-pop)
	(strategic-number sn-current-age >= imperial))))))))
=>
	(up-jump-rule 9))
(defrule
(or	(up-compare-const diff-fp <= 0)
(or	(up-compare-goal armytech >= imperial)
(or	(and	(military-population >= 13)
		(or	(up-compare-goal armytech >= castlea)
			(goal assistance yes)))
	(up-compare-goal targetdistance <= 18))))
=>
	(up-jump-rule 8))
(defrule
	(true)
=>
	(up-modify-goal temporary-goal s:= sn-focus-player-number)
	(set-strategic-number sn-focus-player-number 1)
	(set-goal temporary-goal2 0)
	(up-full-reset-search))
(defrule
	(player-in-game focus-player); end neg jump
(not	(stance-toward focus-player ally))
	(players-building-type-count focus-player town-center >= 1)
=>
	(up-find-remote c: town-center c: 1)
	(up-set-target-object search-remote c: 0)
	(up-get-object-data object-data-garrisoned temporary-goal7)
	(up-modify-goal temporary-goal7 c:+ 8); 9
	(up-get-point position-object point-x)
	(up-set-target-point point-x)
	(up-filter-include cmdid-military -1 -1 -1); -1 -1 -1) - stance; actionid-explore orderid-explore -1) - send scout etc
	(up-filter-distance c: -1 g: temporary-goal7)
	(up-find-local c: all-units-class c: 1)
	(up-remove-objects search-local object-data-group-flag == 8))
(defrule
	(up-set-target-object search-remote c: 0)
	(up-set-target-object search-local c: 0)
=>
	(up-get-point position-object temporary-point-x)
	(up-set-target-point point-x)
	(up-filter-distance c: -1 c: 3)
	(up-find-local c: all-units-class c: 24)
	(up-remove-objects search-local object-data-pierce-armor >= 5)
	(up-remove-objects search-local object-data-hitpoints >= 151)
	(set-goal temporary-goal8 -8)
	(up-get-object-data object-data-range temporary-goal9)
;	(up-modify-goal temporary-goal9 c:- 2)
	(up-modify-goal temporary-goal9 c:/ 2)
	(up-modify-goal temporary-goal9 c:max 0)
	(up-modify-goal temporary-goal9 c:min 3)
	(up-modify-goal temporary-goal8 g:+ temporary-goal9)
	(up-lerp-tiles temporary-point-x point-x g: temporary-goal8)
	(up-copy-point saved-point-x temporary-point-x))
(defrule
	(up-set-target-object search-remote c: 0)
	(up-set-target-object search-local c: 0)
=>
	(up-cross-tiles temporary-point-x point-x c: -2)
	(up-cross-tiles saved-point-x point-x c: 2)
	(up-get-point-distance temporary-point-x position-self-x temporary-goal3)
	(up-get-point-distance saved-point-x position-self-x temporary-goal4)
	(set-goal temporary-goal2 1))
(defrule
	(goal temporary-goal2 0)
	(strategic-number sn-focus-player-number < max-players)
=>
	(up-modify-sn sn-focus-player-number c:+ 1)
	(up-full-reset-search)
	(up-jump-rule -4))
(defrule
	(goal temporary-goal2 1)
	(up-compare-goal temporary-goal3 g:<= temporary-goal4)
=>
	(set-goal c-scout-time -1)
	(up-set-target-point temporary-point-x)
	(up-target-point 0 action-move -1 stance-no-attack); -1)
	(enable-timer stance-timer 4)
	(up-jump-rule 1))
(defrule
	(goal temporary-goal2 1)
	(up-compare-goal temporary-goal4 g:<= temporary-goal3)
=>
	(set-goal c-scout-time -1)
	(up-set-target-point saved-point-x)
	(up-target-point 0 action-move -1 stance-no-attack); -1)
	(enable-timer stance-timer 4))
(defrule
	(true)
=>
	(up-modify-sn sn-focus-player-number g:= temporary-goal)); end jump
	
#end-if
#end-if
;==============================================================
#load-if-not-defined DIFFICULTY-EASIEST
#load-if-not-defined DIFFICULTY-EASY
#load-if-not-defined DIFFICULTY-MODERATE
#load-if-not-defined DARK-AGE-END
#load-if-not-defined FEUDAL-AGE-END
(defrule
	(up-compare-flag retreat-flag == 1)
	(up-compare-flag retreat-flag == 2)
=>
	(set-goal temporary-goal6 1)); tbs
(defrule
(or	(and	(enemy-captured-relics)
		(players-building-type-count target-player monastery >= 1))
	(players-building-type-count target-player wonder >= 1))
	(up-compare-goal victory-time < 750)
	(up-compare-goal victory-time >= 0)
=>
	(set-goal retreat-flag 0)
	(up-jump-rule 20))
(defrule
(or	(goal retreat-flag 0)
(or	(and	(players-building-type-count target-player town-center <= 0)
		(players-building-type-count target-player watch-tower <= 0))
(or	(and	(up-projectile-detected projectile-town-center >= 3000)
		(up-projectile-detected projectile-watch-tower >= 3000))
(or	(unit-type-count champion >= 48)
	(unit-type-count elite-teutonic-knight >= 48)))))
=>
	(set-goal retreat-flag 0)
	(up-jump-rule 19))
(defrule
(or	(population >= max-pop)
	(and	(goal siegereq yes)
		(population >= siege-pop)))
	(unit-type-count-total villager <= min-number-vills)
(or	(up-compare-goal excessWood >= 900)
(or	(up-compare-goal excessFood >= 900)
	(up-compare-goal excessGold >= 250)))
=>
	(set-goal retreat-flag 0)
	(up-jump-rule 18))
(defrule
(or	(up-timer-status resetnow != timer-disabled);(up-timer-status resetnow == timer-running)
(or	(military-population >= 120); test
(or	(military-population <= 1)
(or	(and	(strategic-number sn-military-superiority >= 43);(strategic-number target-military-superiority >= 80); 75
		(strategic-number teamsuperiority >= 3))
	(and	(strategic-number sn-maximum-town-size < 30); 33
		(enemy-buildings-in-town))))))
=>
	(set-goal retreat-flag 0)
	(up-jump-rule 17))
(defrule
(or	(unit-type-count paladin >= 32)
(or	(unit-type-count elite-eagle-warrior >= 32)
(or	(unit-type-count elite-cataphract >= 48)
(or	(unit-type-count elite-tarkan >= 32)
(or	(unit-type-count elite-war-elephant >= 12)
(or	(unit-type-count elite-berserk >= 48)
	(unit-type-count huskarl-set >= 24)))))))
=>
	(set-goal retreat-flag 0)
	(up-jump-rule 16))
(defrule
;(or	(goal attacking yes)
;	(goal underattack no)); test
	(up-compare-flag retreat-flag == 1)
	(up-projectile-detected projectile-town-center < 3000)
	(up-projectile-target projectile-town-center != battering-ram-line)
	(up-projectile-target projectile-town-center != trebuchet-set)
	(up-projectile-target projectile-town-center != bombard-cannon)
=>
;	(chat-local-to-self "Searching for enemy town-center.")
	(set-goal temporary-goal5 1622846)
	(set-goal temporary-goal2 16)
	(up-full-reset-search))
(defrule
;(or	(goal attacking yes)
;	(goal underattack no)); test
	(up-compare-flag retreat-flag == 2)
	(up-projectile-detected projectile-watch-tower < 3000)
	(up-projectile-target projectile-watch-tower != battering-ram-line)
	(up-projectile-target projectile-watch-tower != trebuchet-set)
	(up-projectile-target projectile-watch-tower != bombard-cannon)
=>
;	(chat-local-to-self "Searching for enemy watch-tower.")
	(set-goal temporary-goal5 1622846)
	(set-goal temporary-goal2 16)
	(up-full-reset-search))
(defrule
	(goal temporary-goal5 1622846)
	(up-compare-flag retreat-flag == 1)
=>
	(up-modify-goal temporary-goal s:= sn-focus-player-number)
	(up-modify-sn sn-focus-player-number s:= sn-target-player-number)
	(up-full-reset-search)
	(up-filter-include -1 actionid-attack -1 -1)
	(up-find-remote c: town-center c: 1)
	(up-get-search-state local-total)
	(up-modify-sn sn-focus-player-number g:= temporary-goal)
	(set-goal temporary-goal2 12)
	(set-goal temporary-goal3 1)
	(up-jump-rule 1))
(defrule
	(goal temporary-goal5 1622846)
	(up-compare-flag retreat-flag == 2)
=>
	(up-modify-goal temporary-goal s:= sn-focus-player-number)
	(up-modify-sn sn-focus-player-number s:= sn-target-player-number)
	(up-full-reset-search)
	(up-filter-include -1 actionid-attack -1 -1)
	(up-find-remote c: watch-tower c: 1)
	(up-get-search-state local-total)
	(up-modify-sn sn-focus-player-number g:= temporary-goal)
	(set-goal temporary-goal2 16)
	(set-goal temporary-goal3 2))
(defrule
	(goal temporary-goal5 1622846)
	(up-compare-goal remote-total <= 0)
=>
;	(up-chat-data-to-self "Error finding the attacking fortification: %d" g: retreat-flag)
	(set-goal temporary-goal5 0)
	(up-modify-flag retreat-flag g:- temporary-goal3)
	(up-jump-rule 10))
(defrule
	(goal temporary-goal5 1622846)
	(up-compare-goal remote-total >= 1)
=>
	(up-set-target-object search-remote c: 0)
	(up-get-object-data object-data-range temporary-goal7)
	(up-get-point position-object saved-point-x)
	(up-copy-point temporary-point-x saved-point-x)
	(set-goal remote-total 0))
(defrule
	(goal temporary-goal5 1622846)
(not	(player-in-game any-ally))
=>
	(up-full-reset-search)
	(up-set-target-point saved-point-x)
	(up-filter-distance c: -1 g: temporary-goal2)
	(up-find-local c: unpacked-trebuchet-class c: 1)
	(up-find-local c: battering-ram-line c: 1)
	(up-find-local c: bombard-cannon c: 1)
	(up-find-local c: packed-trebuchet-class c: 1);
	(up-get-search-state local-total)
;	(up-chat-data-to-all "local-total: %d" g: local-total)
	(up-jump-rule 4))
(defrule
	(goal temporary-goal5 1622846)
=>
	(up-modify-goal temporary-goal s:= sn-focus-player-number)
	(set-strategic-number sn-focus-player-number 1))
(defrule
	(goal temporary-goal5 1622846)
	(player-in-game focus-player)
	(stance-toward focus-player ally)
=>
	(up-full-reset-search)
	(up-set-target-point saved-point-x)
	(up-filter-distance c: -1 g: temporary-goal2)
	(up-find-remote c: unpacked-trebuchet-class c: 1)
	(up-find-remote c: battering-ram-line c: 1)
	(up-find-remote c: bombard-cannon c: 1)
	(up-find-remote c: packed-trebuchet-class c: 1);
	(up-get-search-state local-total))
(defrule
	(goal temporary-goal5 1622846)
	(up-compare-goal remote-total <= 0)
	(strategic-number sn-focus-player-number < max-players)
=>
	(up-modify-sn sn-focus-player-number c:+ 1)
	(up-jump-rule -2))
(defrule
	(goal temporary-goal5 1622846)
=>
;	(up-chat-data-to-all "remote-total: %d" g: remote-total)
	(up-modify-sn sn-focus-player-number g:= temporary-goal))
(defrule
	(goal temporary-goal5 1622846)
(or	(up-compare-goal local-total >= 1)
	(up-compare-goal remote-total >= 1))
=>
	(set-goal temporary-goal5 0)
	(up-modify-flag retreat-flag g:- temporary-goal3)
	(up-jump-rule 3)); end mini-jump
(defrule
	(goal temporary-goal5 1622846)
	(goal attacking yes)
	(unit-type-count trebuchet-set <= 0)
	(unit-type-count battering-ram-line <= 0)
	(unit-type-count feudal-battering-ram <= 0)
	(unit-type-count bombard-cannon-line <= 0)
=>
	(set-goal attacking no)
	(up-modify-sn sn-maximum-town-size c:max 10)
	(up-modify-sn sn-maximum-town-size c:min 14)
	(set-strategic-number sn-percent-attack-soldiers 0)
	(set-strategic-number sn-number-attack-groups 0)
	(set-strategic-number sn-percent-attack-boats 0); for now
	(set-strategic-number sn-number-boat-attack-groups 0))
(defrule
	(goal temporary-goal5 1622846)
=>
	(up-get-point-distance temporary-point-x position-self-x temporary-goal4)
	(up-modify-goal temporary-goal4 c:- 9)
	(up-modify-goal temporary-goal4 g:max temporary-goal7)
	(up-modify-goal temporary-goal4 c:min 32)
	(up-modify-goal temporary-goal4 c:max 9)
	(up-lerp-tiles temporary-point-x position-self-x g: temporary-goal4)
	(up-full-reset-search)
	(up-filter-distance c: -1 g: temporary-goal2)
	(up-filter-exclude -1 actionid-explore orderid-explore warship-class)
	(up-filter-include cmdid-military -1 -1 -1)
	(up-find-local c: all-units-class c: 240)
	(up-filter-include cmdid-monk -1 -1 -1)
	(up-find-local c: all-units-class c: 240)
	(up-set-target-point temporary-point-x))
(defrule
	(goal temporary-goal5 1622846)
	(up-set-target-object search-local c: 0)
=>
	(up-chat-data-to-self "siege-retreat: %d" g: retreat-flag)
;	(chat-local-to-self text-siege-retreat)
	(up-modify-flag retreat-flag g:- temporary-goal3)
	(up-target-point 0 action-move -1 stance-no-attack)
	(enable-timer resetnow 9)); 8
(defrule
(or	(up-compare-flag retreat-flag == 1)
	(up-compare-flag retreat-flag == 2))
	(up-compare-goal temporary-goal6 >= 1)
=>
	(up-modify-goal temporary-goal6 c:- 1)
	(set-goal temporary-goal7 0)
	(up-jump-rule -16)); end jump
#end-if
#end-if
#end-if
#end-if
#end-if
;==============================================================
(defrule
	(taunt-detected any-human-ally 45)
	(military-population <= 0)
=>
	(chat-to-allies-using-id 22118); "Alas, I cannot help that at this time."
	(acknowledge-taunt every-ally 45))
(defrule
	(taunt-detected any-human-ally 45)
=>
	(chat-to-allies-using-id 22153); "39 At once, sire!"
	(set-goal retreatnow yes)
	(acknowledge-taunt every-ally 45))
;==============================================================
(defrule
(or	(difficulty == easiest)
(or	(difficulty == easy)
	(difficulty == moderate)))
	(goal retreatnow yes)
(or	(up-compare-goal my-mpop <= 1)
(or	(up-compare-goal my-mpop g:>= allowed-num-military)
	(up-compare-goal my-mpop >= 7)))
=>
	(set-goal retreatnow no)
	(enable-timer retreat-timer 8))
(defrule
(or	(difficulty == easiest)
(or	(difficulty == easy)
	(difficulty == moderate)))
	(goal retreatnow yes)
	(up-compare-goal my-mpop >= 4)
=>
	(set-goal retreatnow no)
	(up-modify-sn sn-maximum-town-size c:max 10)
	(up-modify-sn sn-maximum-town-size c:min 14)
	(set-strategic-number sn-percent-attack-soldiers 0)
	(set-strategic-number sn-number-attack-groups 0)
	(set-strategic-number sn-percent-attack-boats 0); for now
	(set-strategic-number sn-number-boat-attack-groups 0); for now
	(enable-timer retreat-timer 32); 16; 60
	(set-goal attacking no))
(defrule
	(up-compare-goal retreatnow != yes)
=>
	(up-jump-rule 6))
(defrule
(or	(and	(enemy-captured-relics)
		(players-building-type-count target-player monastery >= 1))
	(players-building-type-count target-player wonder >= 1))
	(up-compare-goal victory-time < 750)
	(up-compare-goal victory-time >= 0)
=>
	(up-jump-rule 5))
;(defrule
;	(goal retreat yes)
;	(up-timer-status resetnow == timer-running)
;=>
;	(enable-timer resetnow 60))
(defrule
;	(up-compare-sn sn-current-age g:>= strategy-type); test
(or	(up-compare-goal gl-threat-time >= 18000)
(or	(up-compare-goal gl-threat-target != scout-unit)
	(unit-type-count-total scout-unit >= 2)))
(or	(goal underattack yes)
(or	(goal defend yes)
	(up-enemy-units-in-town >= 5)))
	(up-compare-goal strategy != usual)
	(up-compare-goal milunits != yes); test
=>
	(chat-local-to-self "Resetting strategy.2 TSA")
	(set-goal strategy usual)
	(set-goal milunits yes)
	(set-goal attackprioritychange yes))
(defrule
	(goal retreat yes)
=>
	(set-goal retreat no)
	(set-goal retreatnow no)
	(set-goal attacking no)
	(up-modify-sn sn-maximum-town-size c:max 10)
	(up-modify-sn sn-maximum-town-size c:min 14)
	(set-strategic-number sn-percent-attack-soldiers 0)
	(set-strategic-number sn-number-attack-groups 0)
	(set-strategic-number sn-percent-attack-boats 0); for now
	(set-strategic-number sn-number-boat-attack-groups 0); for now
	(up-set-attack-stance -1 c: stance-no-attack);	(up-set-attack-stance -1 c: stance-defensive)
	(up-retreat-now)
	(enable-timer stance-timer 12)
	(enable-timer retreat-timer 16); 60
	(chat-local-to-self "Retreat now, it's getting dangerous!")
	(up-jump-rule 3))
(defrule
(or	(goal attacking yes)
	(up-timer-status resetnow == timer-running)); test
	(goal retreat yes)
=>
;	(up-reset-unit c: -1); TEST
	(disable-timer resetnow); test
	(disable-timer resetnow2); test
	(set-goal attacking no)
	(up-modify-sn sn-maximum-town-size c:max 10)
	(up-modify-sn sn-maximum-town-size c:min 14)
	(set-strategic-number sn-percent-attack-soldiers 0)
	(set-strategic-number sn-number-attack-groups 0)
	(set-strategic-number sn-percent-attack-boats 0); for now
	(set-strategic-number sn-number-boat-attack-groups 0); for now
;	(up-retreat-now)
	(enable-timer resetnow 36); 35
	(up-full-reset-search)); 90
(defrule
	(up-compare-goal attacking != yes)
	(up-timer-status resetnow != timer-running); test
	(goal retreat yes)
=>
;	(up-reset-unit c: -1); TEST
	(disable-timer resetnow); test
	(disable-timer resetnow2); test
	(up-modify-sn sn-maximum-town-size c:max 10)
	(up-modify-sn sn-maximum-town-size c:min 14)
	(set-strategic-number sn-percent-attack-soldiers 0)
	(set-strategic-number sn-number-attack-groups 0)
	(set-strategic-number sn-percent-attack-boats 0); for now
	(set-strategic-number sn-number-boat-attack-groups 0); for now
;	(up-retreat-now)
	(enable-timer resetnow 6); 5
	(up-full-reset-search)); 90
(defrule
	(goal retreat yes)
=>
	(set-goal retreat no)
	(set-goal retreatnow no)
	(up-set-target-point position-self-x)
	(up-filter-distance c: 8 c: -1)
	(up-filter-include cmdid-military -1 -1 -1)
	(up-filter-exclude -1 actionid-explore orderid-relic -1)
	(up-find-local c: all-units-class c: 240)
	(up-filter-include cmdid-monk -1 -1 -1)
	(up-find-local c: all-units-class c: 240)
	(set-goal attacking no)
	(up-target-point 0 action-move -1 stance-no-attack)
	(chat-local-to-self "Retreating, it's getting dangerous!")
	(up-retreat-now)
	(enable-timer stance-timer 12)
	(enable-timer retreat-timer 16)); 60; end jump

(defrule
	(up-compare-goal retreatnow != no)
=>
	(set-goal retreatnow no))


(defrule ; debug rule
(or	(strategic-number sn-focus-player-number > max-players)
(or	(strategic-number sn-focus-player-number <= 0)
	(stance-toward focus-player ally)))
	(strategic-number sn-target-player-number >= 1)
	(strategic-number sn-target-player-number <= max-players)
(not	(stance-toward target-player ally))
	(player-in-game target-player)
=>
	(up-modify-goal temporary-goal s:= sn-target-player-number); to prevent further bugs
	(up-modify-sn sn-focus-player-number s:= sn-target-player-number); should be an enemy
	(chat-to-player my-player-number "Debugging focus player. 3,1"))
;==============================================================
; Warboats | Navy
;==============================================================
#load-if-not-defined DIFFICULTY-EASIEST
#load-if-not-defined DIFFICULTY-EASY
(defrule
	(population < del-civ-pop)
	(up-timer-status resetnow3 != timer-running)
	(unit-type-count siege-ship < 3)
	(unit-type-count turtle-ship-line < 9)
(or	(up-projectile-detected projectile-castle < 3000)
	(up-projectile-detected projectile-bombard-tower < 3000))
	(up-projectile-target projectile-fortification == warship-class)
=>
	(up-retreat-to dock c: warship-class)
;	(chat-local-to-self "Retreat: Warships.0")
	(enable-timer resetnow3 15)
	(set-strategic-number sn-percent-attack-boats 0)
	(set-strategic-number sn-number-boat-attack-groups 0))
(defrule
	(population < max-civ-pop)
	(up-timer-status resetnow3 != timer-running)
	(unit-type-count siege-ship <= 0)
	(unit-type-count turtle-ship-line <= 2)
	(up-compare-goal navycount < 8); 16
(or	(up-projectile-detected projectile-town-center < 3000)
	(up-projectile-detected projectile-watch-tower < 3000))
	(up-projectile-target projectile-fortification == warship-class)
=>
	(up-retreat-to dock c: warship-class)
;	(chat-local-to-self "Retreat: Warships.1")
	(enable-timer resetnow3 15)
	(set-strategic-number sn-percent-attack-boats 0)
	(set-strategic-number sn-number-boat-attack-groups 0))
(defrule
(or	(strategic-number sn-percent-attack-boats < 100)
(or	(up-timer-status fivesec == timer-running)
(or	(up-timer-status resetnow3 == timer-running)
	(and	(goal attacking yes)
		(or	(up-compare-goal navycount >= 10); 14 ; hmm
			(or	(up-compare-goal navycount g:>= maxnavy)
				(or	(up-compare-goal navycount g:>= biggestenemynavy)
					(population >= max-civ-pop)))))))); del
=>
	(up-jump-rule 4))
(defrule
(or	(up-compare-goal enemyfocusnavy >= 14)
(or	(players-unit-type-count focus-player galley-line >= 10); any enemy
(or	(players-unit-type-count focus-player fire-ship-line >= 5)
(or	(players-unit-type-count focus-player longboat-line >= 8)
(or	(players-unit-type-count focus-player turtle-ship-line >= 5)
	(players-unit-type-count focus-player siege-ship >= 8))))))
	(up-compare-goal navycount < 12)
=>
	(up-retreat-to dock c: warship-class)
	(enable-timer resetnow3 18)
;	(chat-local-to-self "Retreat: Warships.2")
	(set-strategic-number sn-percent-attack-boats 0)
	(set-strategic-number sn-number-boat-attack-groups 0))
(defrule
(or	(up-compare-goal enemyfocusnavy >= 26)
(or	(players-unit-type-count focus-player galley-line >= 22); any enemy
(or	(players-unit-type-count focus-player fire-ship-line >= 18)
(or	(players-unit-type-count focus-player longboat-line >= 20)
(or	(players-unit-type-count focus-player turtle-ship-line >= 15)
	(players-unit-type-count focus-player siege-ship >= 20))))))
	(up-compare-goal navycount < 24)
=>
	(up-retreat-to dock c: warship-class)
	(enable-timer resetnow3 18)
;	(chat-local-to-self "Retreat: Warships.3")
	(set-strategic-number sn-percent-attack-boats 0)
	(set-strategic-number sn-number-boat-attack-groups 0))
(defrule
	(up-compare-goal navycount < 72)
	(up-compare-goal enemyfocusnavy >= 38)
(or	(up-compare-goal navycount < 36)
	(up-compare-goal enemyfocusnavy >= 50))
(or	(up-compare-goal navycount < 48)
	(up-compare-goal enemyfocusnavy >= 62))
(or	(up-compare-goal navycount < 60)
	(up-compare-goal enemyfocusnavy >= 74))
=>
	(up-retreat-to dock c: warship-class)
	(enable-timer resetnow3 18)
;	(chat-local-to-self "Retreat: Warships.4")
	(set-strategic-number sn-percent-attack-boats 0)
	(set-strategic-number sn-number-boat-attack-groups 0))
(defrule
	(goal strategy grush)
	(unit-type-count-total galley-line <= 15)
	(players-unit-type-count focus-player fire-ship-line >= 1)
(or	(unit-type-count-total galley-line <= 2)
	(players-unit-type-count focus-player fire-ship-line >= 3))
(or	(unit-type-count-total galley-line <= 5)
	(players-unit-type-count focus-player fire-ship-line >= 7))
(or	(unit-type-count-total galley-line <= 10)
	(players-unit-type-count focus-player fire-ship-line >= 12))
=>
	(up-retreat-to dock c: warship-class)
	(enable-timer resetnow3 18)
;	(chat-local-to-self "Retreat: Warships.5")
	(set-strategic-number sn-percent-attack-boats 0)
	(set-strategic-number sn-number-boat-attack-groups 0)); end jump
#end-if
#end-if
;=============================================================
; Other game-settings related attack-rules
;=============================================================
#load-if-defined DEFEND-WONDER
(defrule
	(up-compare-goal victory-time < 750)
	(players-building-type-count any-enemy wonder >= 1)
	(building-type-count wonder <= 0)
	(players-building-type-count every-ally wonder <= 0)
=>
	(set-goal attacking yes))
#end-if
;==============================================================
(defrule
	(goal attacking no)
	(timer-triggered one-min)
	(up-compare-goal my-mpop g:>= allowed-num-military)
	(strategic-number sn-current-age >= imperial);
	(up-timer-status retreat-timer != timer-running)
	(up-timer-status resetnow != timer-running)
=>
	(set-goal attacking yes))
#load-if-defined DIFFICULTY-EASIEST
(defrule
;	(current-age >= imperial-age)
	(up-compare-goal victory-time > 0)
	(up-compare-goal victory-time < 1333)
(or	(players-building-type-count any-enemy wonder > 0)
(or	(players-building-type-count any-enemy 826 > 0)
	(enemy-captured-relics)))
=>
	(up-jump-rule 1))
(defrule
	(up-compare-goal attacking != no)
(or	(game-time < max-delay); 4200
	(player-in-game any-human-enemy))
=>
;	(chat-local-to-self "Wait longer with attacking on this difficulty level.")
	(set-goal attacking no))
#end-if
#load-if-defined DIFFICULTY-EASY
(defrule
;	(current-age >= imperial-age)
	(up-compare-goal victory-time > 0)
	(up-compare-goal victory-time < 1667)
(or	(players-building-type-count any-enemy wonder >= 1)
(or	(players-building-type-count any-enemy 826 >= 1)
	(enemy-captured-relics)))
=>
	(up-jump-rule 1))
(defrule
	(goal attacking yes)
	(player-in-game any-human-enemy); test
; test	(population < max-pop); attack at some point
	(game-time < max-delay); 3300
(or	(game-time < 2400); 1800
(or	(strategic-number sn-military-superiority >= 3)
(or	(and	(strategic-number sn-military-superiority >= 2)
		(game-time < 3000)); 3000
	(and	(strategic-number sn-military-superiority >= 1)
		(game-time < 2700))))); 2400
=>
;	(chat-local-to-self "Wait longer with attacking on this difficulty level.")
	(set-goal attacking no))
#end-if
#load-if-defined DIFFICULTY-MODERATE
(defrule
;	(current-age >= imperial-age)
	(up-compare-goal victory-time > 0)
	(up-compare-goal victory-time < 2000)
(or	(players-building-type-count any-enemy wonder >= 1)
(or	(players-building-type-count any-enemy 826 >= 1)
	(enemy-captured-relics)))
=>
	(up-jump-rule 1))
(defrule
	(goal attacking yes)
	(player-in-game any-human-enemy); test
	(population < max-pop); attack at some point
	(game-time < max-delay); 2700
(or	(game-time < 1800); 900
(or	(strategic-number sn-military-superiority >= 3)
(or	(and	(strategic-number sn-military-superiority >= 2)
		(game-time < 2400)); 1800
	(and	(strategic-number sn-military-superiority >= 1)
		(game-time < 2100))))); 1350
=>
;	(chat-local-to-self "Wait longer with attacking on this difficulty level.")
	(set-goal attacking no))
#end-if
#load-if-not-defined DEFEND-WONDER
#load-if-defined DE-AVAILABLE
#load-if-defined DIFFICULTY-HARD
(defrule
;	(current-age >= imperial-age)
	(up-compare-goal victory-time > 0)
	(up-compare-goal victory-time < 2333)
(or	(players-building-type-count any-enemy wonder >= 1)
(or	(players-building-type-count any-enemy 826 >= 1)
	(enemy-captured-relics)))
=>
	(up-jump-rule 1))
(defrule
	(goal attacking yes)
	(player-in-game any-human-enemy); test
	(population < max-pop); attack at some point
	(game-time < max-delay); 1500
(or	(game-time < 900)
(or	(strategic-number sn-military-superiority >= 3)
(or	(and	(strategic-number sn-military-superiority >= 2)
		(game-time < 1500))
	(and	(strategic-number sn-military-superiority >= 1)
		(game-time < 1200)))))
=>
;	(chat-local-to-self "Wait longer with attacking on this difficulty level.")
	(set-goal attacking no))
#end-if
#end-if
#end-if; not on defend the wonder
;=============================================================
(defrule
	(up-compare-goal attacking != no)
	(up-compare-goal gl-treaty-time >= 1)
=>
;	(chat-local-to-self "Preventing attack due to ongoing treaty.")
	(set-goal attacking no))
(defrule
	(up-compare-goal attacking != no)
	(up-compare-goal attackInProgress != yes); test
	(strategic-number sn-percent-attack-soldiers < 100)
	(strategic-number sn-maximum-town-size < 40)
(not	(enemy-buildings-in-town))
	(goal drushmicro yes)
	(goal strategy drush)
	(unit-type-count militiaman-line < drush-militias)
(or	(up-pending-objects c: militiaman-line >= 1)
	(gold-amount >= 10))
	(population < max-pop)
=>
;	(chat-local-to-self "Preventing attack to wait for militias.")
	(set-goal attacking no))
(defrule
	(up-compare-goal attacking != no)
	(up-compare-goal attackInProgress != yes); test
	(strategic-number sn-percent-attack-soldiers < 100)
	(strategic-number sn-maximum-town-size < 40)
(not	(enemy-buildings-in-town))
	(current-age >= imperial-age)
	(up-compare-goal armytech < imperial)
	(strategic-number sn-military-superiority <= 1)
	(goal researchplan no)
	(up-compare-goal excessWood < 2400)
	(up-compare-goal excessFood < 2400)
	(up-compare-goal excessGold < 2400)
;	(goal assistance no)
	(population < max-pop)
=>
;	(chat-local-to-self "Preventing attack to wait for upgrades.")
	(set-goal attacking no))
(defrule
	(up-compare-goal attacking != no)
	(up-compare-goal attackInProgress != yes); test
	(strategic-number sn-percent-attack-soldiers < 100)
	(strategic-number sn-maximum-town-size < 40)
(not	(enemy-buildings-in-town))
(or	(goal patroldefense yes)
	(goal patrolhelp yes))
	(population < max-civ-pop); (population < up-max-civ)
=>
;	(chat-local-to-self "Preventing attack due to patrol-help/-defense.")
	(set-goal attacking no))
(defrule
	(up-compare-goal attacking != no)
	(up-compare-goal attackInProgress != yes); test
	(strategic-number sn-percent-attack-soldiers < 100)
	(strategic-number sn-maximum-town-size < 40)
	(population-cap >= 200)
	(military-population < 40)
	(players-military-population any-enemy >= 42)
	(civilian-population >= 160)
	(strategic-number sn-military-superiority <= 0); 1
(or	(up-compare-goal excessWood < 200)
(or	(up-compare-goal excessFood < 200)
	(up-compare-goal excessGold < 200)))
	(population < max-pop);	(population < max-civ-pop); (population < up-max-civ)
=>
;	(chat-local-to-self "Preventing attack to train more military.")
	(set-goal attacking no))
(defrule
	(up-compare-goal attacking != no)
	(players-building-count every-enemy <= 0)
(or	(game-time < 2400)
;(or	(goal attackmethod TSA)
	(and	(strategic-number sn-target-player-number <= 0)
		(strategic-number sn-focus-player-number <= 0)));)
(not	(enemy-buildings-in-town))
(nand	(population >= max-pop)
	(strategic-number sn-current-age >= imperial))
=>
;	(chat-local-to-self "Preventing attack against darkness.")
	(set-goal attacking no))
(defrule
	(up-compare-goal attacking != no)
	(military-population <= 1)
;(or	(strategic-number sn-total-number-explorers >= 1)
;	(military-population <= 0))
(nand	(population >= max-pop)
	(strategic-number sn-current-age >= imperial))
=>
;	(chat-local-to-self "Preventing attack without forces.")
	(set-goal attacking no))
(defrule
	(player-in-game target-player)
=>
	(up-full-reset-search)
	(up-modify-goal temporary-goal s:= sn-focus-player-number)
	(up-modify-sn sn-focus-player-number s:= sn-target-player-number)
	(up-find-remote c: castle c: 4)
	(up-find-remote c: bombard-tower c: 4)
	(up-find-remote c: krepost c: 4)
	(up-remove-objects search-remote object-data-status != 2)
	(up-modify-sn sn-focus-player-number g:= temporary-goal))
(defrule
	(player-in-game target-player)
	(up-set-target-object search-remote c: 0)
	(up-compare-goal attacking != no)
	(strategic-number sn-military-superiority <= 2)
	(strategic-number teamsuperiority <= 2)
	(strategic-number sn-current-age < imperial)
	(goal assistance no)
	(military-population < 60)
	(up-compare-goal attackInProgress != yes); test
	(unit-type-count feudal-battering-ram <= 0)
	(unit-type-count battering-ram-line <= 0)
	(unit-type-count bombard-cannon-line <= 0)
	(unit-type-count trebuchet-set <= 0)
	(unit-type-count petard-class <= 0)
=>
;	(chat-local-to-self "Preventing attack against fortifications.")
	(set-goal attacking no))
(defrule
	(up-compare-goal attacking != no)
(or	(strategic-number sn-target-player-number <= -2)
(or	(strategic-number sn-target-player-number > max-players)
	(not	(player-in-game target-player))))
(nand	(population >= max-pop)
	(strategic-number sn-current-age >= imperial))
=>
;	(chat-local-to-self "Preventing attack without valid target-player.")
	(set-goal attacking no))
(defrule
(nor	(gold-amount >= 200)
(or	(cc-players-unit-type-count 0 gold-mine > 0)
(or	(up-compare-goal tradeunits >= 3)
(or	(up-compare-goal relic-count >= 1)
(or	(goal assistance yes)
(or	(strategic-number sn-military-superiority >= 2)
(or	(game-time >= 6000)
	(population >= max-pop))))))))
=>
;	(chat-local-to-self "Preventing suicidal attack.")
	(set-goal attacking no))
(defrule
	(goal block-attacking yes)
=>
;	(chat-local-to-self "Attacking blocked.")
	(set-goal attacking no))
;=============================================================
; Warboats 2 | Navy 2
;=============================================================
(defrule
(or	(goal block-attacking yes)
	(and	(goal attacking no)
		(and	(and	(up-compare-const diff-fp != 1)
					(not	(difficulty == hardest)))
			(game-time < 4200))))
=>
	(up-jump-rule 4))
(defrule
	(up-compare-goal strategy-type2 == water)
	(up-compare-goal navycount >= 4); hm
	(up-compare-goal biggestenemynavy <= 0)
	(up-compare-goal enemyfocusnavy <= 0)
	(players-building-type-count every-enemy dock <= 0)
	(strategic-number sn-percent-attack-boats < 100)
=>
	(set-strategic-number sn-percent-attack-boats 100)
	(set-strategic-number sn-number-boat-attack-groups 1000)
	(disable-self))
(defrule
	(up-compare-goal navycount >= 6)
	(up-compare-goal biggestenemynavy <= 5)
(or	(up-compare-goal biggestenemynavy <= 0)
	(up-compare-goal navycount >= 15))
(or	(up-compare-goal strategy-type2 == water)
(or	(goal researchplan yes)
(or	(gold-amount >= 1000)
	(goal attacking yes))))
	(strategic-number sn-percent-attack-boats < 100)
=>
	(set-strategic-number sn-percent-attack-boats 100)
	(set-strategic-number sn-number-boat-attack-groups 1000))
(defrule
	(up-compare-goal navycount >= 27)
	(up-compare-goal biggestenemynavy <= 25)
(or	(up-compare-goal biggestenemynavy <= 15)
	(up-compare-goal navycount >= 39))
(or	(up-compare-goal strategy-type2 == water)
(or	(goal researchplan yes)
(or	(gold-amount >= 1000)
	(goal attacking yes))))
	(strategic-number sn-percent-attack-boats < 100)
=>
	(set-strategic-number sn-percent-attack-boats 100)
	(set-strategic-number sn-number-boat-attack-groups 1000))
(defrule
	(up-compare-goal navycount >= 51)
	(up-compare-goal biggestenemynavy <= 45)
(or	(up-compare-goal biggestenemynavy <= 35)
	(up-compare-goal navycount >= 63))
(or	(up-compare-goal strategy-type2 == water)
(or	(goal researchplan yes)
(or	(gold-amount >= 1000)
	(goal attacking yes))))
	(strategic-number sn-percent-attack-boats < 100)
=>
	(set-strategic-number sn-percent-attack-boats 100)
	(set-strategic-number sn-number-boat-attack-groups 1000)); end jump
(defrule
	(goal attacking yes);	(strategic-number sn-percent-attack-soldiers == 100)
(or	(strategic-number sn-percent-attack-boats < 100)
	(strategic-number sn-number-boat-attack-groups < 1000))
(or	(up-compare-goal strategy-type2 == water)
(or	(up-compare-goal navycount >= 10);  14
(or	(up-compare-goal navycount g:>= maxnavy)
(or	(up-compare-goal navycount g:>= biggestenemynavy)
	(population >= max-civ-pop))))); del
=>
	(set-strategic-number sn-percent-attack-boats 100)
	(set-strategic-number sn-number-boat-attack-groups 1000))
(defrule
	(players-building-count every-enemy <= 0)
	(strategic-number sn-percent-attack-boats >= 100)
=>
	(up-modify-goal temporary-goal g:= navycount)
	(up-modify-goal temporary-goal s:- sn-number-boat-explore-groups)
	(up-modify-sn sn-number-boat-attack-groups g:= temporary-goal))

(defrule
	(goal attacking no)
;	(up-compare-goal drushmicro == no)
;	(up-compare-goal navycount <= 5)
	(up-compare-goal navycount g:< biggestenemynavy); test
	(up-compare-goal navycount g:< enemyfocusnavy); test
	(up-compare-goal navycount g:< maxnavy); test
(or	(strategic-number sn-percent-attack-boats > 0)
	(strategic-number sn-number-boat-attack-groups > 0))
=>
;	(chat-to-player my-player-number "Debugging attack-boats.")
	(set-strategic-number sn-percent-attack-boats 0)
	(set-strategic-number sn-number-boat-attack-groups 0))
(defrule
	(players-building-count every-enemy <= 0)
(or	(strategic-number sn-percent-attack-boats > 0)
	(strategic-number sn-number-boat-attack-groups > 0))
=>
;	(chat-to-player my-player-number "Debugging attack-boats.2")
	(set-strategic-number sn-percent-attack-boats 0)
	(set-strategic-number sn-number-boat-attack-groups 0))
;=============================================================
; TSA timer for enemy building detection
;=============================================================
(defrule
	(strategic-number sn-current-age >= feudal)
=>
	(enable-timer TSA-timer 30)
	(set-goal TSA-goal 1)
	(disable-self))
(defrule
	(strategic-number sn-current-age >= feudal)
	(goal TSA-goal 0)
	(enemy-buildings-in-town)
=>
	(enable-timer TSA-timer 240); 240
;	(chat-local-to-self "Enemy found.")
	(set-goal TSA-goal 1))
(defrule
	(goal TSA-goal 1)
	(timer-triggered TSA-timer)
=>
	(chat-local-to-self "Resetting townsize."); 10
	(disable-timer TSA-timer)
	(set-goal TSA-goal 0)
	(up-modify-sn sn-maximum-town-size c:max 10)
	(up-modify-sn sn-maximum-town-size c:min 15)); <= 14 => attacking no
(defrule
	(goal attacking no)
	(goal underattack no)
	(strategic-number sn-military-superiority <= 1)
	(strategic-number sn-maximum-town-size >= 70)
	(enemy-buildings-in-town)
=>
	(chat-local-to-self "TS too big: Retreating and resetting townsize.")
	(up-retreat-now)
	(up-modify-sn sn-maximum-town-size c:max 10)
	(up-modify-sn sn-maximum-town-size c:min 14)
	(enable-timer resetnow 10)
;	(disable-self)
)
(defrule
	(goal attacking no)
	(goal underattack no)
	(goal researchplan no)
	(population < max-civ-pop)
	(up-enemy-units-in-town < 5) ; no enemy attack, just TS too big
	(up-compare-goal gl-threat-time > 8000)
	(strategic-number sn-military-superiority <= 1)
	(strategic-number sn-maximum-town-size >= 37); 34
	(enemy-buildings-in-town)
=>
	(chat-local-to-self "TS too big: Retreating and resetting townsize.")
	(up-retreat-now)
	(up-modify-sn sn-maximum-town-size c:max 10)
	(up-modify-sn sn-maximum-town-size c:min 14)
	(enable-timer resetnow 10)
;	(disable-self)
)
(defrule
	(goal attacking no)
	(goal underattack no)
	(up-compare-goal ttower-distance >= 33)
	(strategic-number sn-military-superiority <= 1)
	(strategic-number sn-maximum-town-size >= 25)
	(enemy-buildings-in-town)
=>
	(chat-local-to-self "TS too big: Retreating and resetting townsize.")
	(up-retreat-now)
	(up-modify-sn sn-maximum-town-size c:max 10)
	(up-modify-sn sn-maximum-town-size c:min 14)
	(enable-timer resetnow 10)
	(disable-self))
(defrule
	(current-age <= feudal-age)
	(unit-type-count siege-weapon-class <= 0)
	(up-building-type-in-town c: town-center >= 1)
	(up-projectile-detected projectile-town-center < 2000)
	(up-timer-status resetnow == timer-running)
=>
	(up-modify-sn sn-maximum-town-size c:max 10)
	(up-modify-sn sn-maximum-town-size c:min 15); <= 14 => attacking no
	(chat-to-player my-player-number "Enemy TC in TS: Resetting townsize.")
	(disable-self))
;=============================================================
; Keeping units garrisoned in their training grounds
;=============================================================
(defrule
(or	(goal gatherinside no)
	(and	(not	(enemy-buildings-in-town))
		(or	(up-enemy-units-in-town < 3)
			(military-population < 2)))); 3
;(not	(town-under-attack))
=>
	(up-jump-rule 4))
(defrule
	(true)
=>
	(set-goal math-goal -1)
	(set-goal math-goal2 -1)
	(up-modify-goal temporary-goal s:= sn-focus-player-number))
(defrule
;(or
	(up-enemy-units-in-town >= 3)
;	(town-under-attack))
	(military-population >= 3)
=>
	(up-modify-sn sn-focus-player-number g:= attacking-enemy)
	(up-get-fact military-population 0 math-goal)
	(up-get-fact enemy-units-in-town 0 math-goal2)
	(up-modify-goal math-goal g:- math-goal2))
(defrule
(or	(military-population <= 0); test
(or	(and	(up-enemy-units-in-town >= 3)
		(and	(military-population >= 3)
			(up-compare-goal math-goal >= 0)))
	(enemy-buildings-in-town)))
=>
	(set-goal gatherinside no))
(defrule
	(true)
=>
	(up-modify-sn sn-focus-player-number g:= temporary-goal));  end jump

(defrule
	(up-compare-goal gatherinside != no)
(or	(up-compare-goal gl-threat-target != scout-unit)
	(unit-type-count scout-unit >= 2))
	(up-compare-goal gl-threat-source != 910); wild animals
	(up-compare-goal gl-threat-time < 3000)
(or	(goal gl-threat-target villager-class)
(or	(goal gl-threat-target infantry-class)
(or	(goal gl-threat-target cavalry-class)
	(goal gl-threat-target archery-class))))
	(military-population >= 2)
=>
	(set-goal gatherinside no))
(defrule
	(up-compare-goal gatherinside != no)
(or	(building-type-count watch-tower >= 1)
(or	(goal position-goal pocket); test
(or	(goal patroldefense yes); test
	(goal patrolhelp yes))))
	(military-population >= 2);
=>
	(set-goal gatherinside no))
(defrule
	(up-compare-goal gatherinside != no)
(or	(population >= max-pop);
(or	(up-compare-const dm-game == 1)
(or	(and	(goal drushmicro yes)
		(or	(unit-type-count militiaman-line >= drush-militias)
			(unit-type-count militiaman-line >= 3)))
(or	(goal attacking yes)
	(game-time >= 2400)))))
=>
	(set-goal gatherinside no))
(defrule
	(up-compare-goal gatherinside != no)
(or	(military-population >= 21); test
	(and	(goal scoutmicro yes)
		(unit-type-count scout-cavalry-line >= 3)))
=>
	(set-goal gatherinside no))
;(defrule
;	(up-compare-goal gatherinside != yes)
;=>
;	(up-gather-inside c: barracks c: 0)
;	(up-gather-inside c: archery-range c: 0)
;	(up-gather-inside c: stable c: 0)
;	(up-ungarrison c: barracks)
;	(up-ungarrison c: archery-range)
;	(up-ungarrison c: stable)
;	(disable-self))

; (defrule
; 	(up-compare-goal gatherinside != yes)
; 	(timer-triggered fifteensec)
; =>
; 	(up-full-reset-search)
; 	(up-find-local c: archery-range c: 15)
; 	(up-get-search-state temporary-goal)
; 	(up-full-reset-search)
; 	(up-find-local c: barracks c: 15)
; 	(up-get-search-state temporary-goal2) ;we can overwrite since we only care about local total
; 	(up-full-reset-search)
; 	(up-find-local c: stable c: 15)
; 	(up-get-search-state temporary-goal3)
; 	(up-full-reset-search)
; 	(up-find-local c: siege-workshop c: 15)
; 	(up-get-search-state temporary-goal4)
; 	(up-full-reset-search)
; )

; (defrule
; 	(up-compare-goal gatherinside != yes)
; 	(timer-triggered fifteensec)
; =>
; 	(up-full-reset-search)
; 	(up-find-local c: town-center c: 1)
; 	(up-set-target-object search-local c: 0)
; 	(up-get-object-data object-data-id temporary-goal8);need to use ID so we can set TC as target object without affecting search results
; 	(up-full-reset-search)
; 	(up-find-local c: archery-range c: 15)
; 	(up-find-local c: stable c: 15)
; 	(up-find-local c: siege-workshop c: 15)
; 	(up-find-local c: barracks c: 15)
; 	(up-get-search-state temporary-goal)
; 	(set-goal temporary-goal5 0)
; )

(defrule
	(goal attackingsystem new)
	(game-time < 1800)
	(or(unit-type-count archer-line > 8)
	(unit-type-count archery-class > 15))
=>
	(set-goal gatherinside no)
)

(defrule
	(up-compare-goal gatherinside != yes);might need to split this rule for peformance reasons
	(timer-triggered fifteensec)
=>
	(up-set-target-point position-self-x)
	(up-full-reset-search)
	(up-find-local c: villager c: 10)
	(up-clean-search search-local object-data-distance search-order-asc);select villager by TC rather than TC itself
	(up-set-target-object search-local c: 0)
	(up-get-object-data object-data-id temporary-goal8);need to use ID so we can set TC as target object without affecting search results
	(up-full-reset-search)
	(up-find-local c: archery-range c: 15)
	(up-find-local c: stable c: 15)
	(up-find-local c: siege-workshop c: 15)
	(up-find-local c: barracks c: 15)
	(up-get-search-state temporary-goal)
	(set-goal temporary-goal5 0)
)
;End negative jump (-6)
(defrule
	(up-compare-goal gatherinside != yes)
	(timer-triggered fifteensec)
	(goal attacking yes)
=>
	(up-set-target-object search-local g: temporary-goal5)
	(up-get-point position-object point-x)
	(up-copy-point point2-x point-x)
	(up-lerp-tiles point2-x position-self-x c: -3)
	(set-goal temporary-goal7 20)
	(up-set-target-by-id g: temporary-goal8)
)
;End negative jump (-2)
(defrule
;	(up-path-distance point2-x 1 < 100);was not strict
	(up-compare-goal gatherinside != yes)
	(goal attacking yes)
	(timer-triggered fifteensec)
=>
	(up-reset-group c: 7)
	(up-create-group 0 0 c: 7);Promi doesn't use group 7 anywhere it seems - this optimizes out re-searching for everything
	(up-remove-objects search-local -1 g:!= temporary-goal5)
	(up-target-point point2-x action-gather -1 -1)
	(up-set-target-point point2-x)
	(up-target-objects 1 action-unload -1 -1)
	(up-set-group search-local c: 7)
	(up-jump-rule 1)
)

; (defrule
; 	(up-path-distance point2-x 1 >= 100);was not strict
; 	(up-compare-goal gatherinside != yes)
; 	(goal attacking yes)
; 	(timer-triggered fifteensec)
; 	(up-compare-goal temporary-goal7 > 0)
; =>
; 	(up-cross-tiles point2-x point-x c: 1)
; 	(up-modify-goal temporary-goal7 c:- 1)
; ;	(chat-to-player my-player-number "Adjusting gather point - attacking yes")
; 	(up-jump-rule -2)
; )


(defrule
	(up-compare-goal gatherinside != yes)
	(timer-triggered fifteensec)
	(goal attacking no)
=>
	(up-set-target-object search-local g: temporary-goal5)
	(up-get-point position-object point-x)
	(up-copy-point point2-x point-x)
	(up-lerp-tiles point2-x position-self-x c: 3)
	(set-goal temporary-goal7 20)
	(up-set-target-by-id g: temporary-goal8)
)
;End negative jump (-2)
(defrule
;	(up-path-distance point2-x 0 < 100)
	(up-compare-goal gatherinside != yes)
	(goal attacking no)
	(timer-triggered fifteensec)
=>
	(up-reset-group c: 7)
	(up-create-group 0 0 c: 7);Promi doesn't use group 7 anywhere it seems - this optimizes out re-searching for everything
	(up-remove-objects search-local -1 g:!= temporary-goal5)
	(up-target-point point2-x action-gather -1 -1)
	(up-set-target-point point2-x)
	(up-target-objects 1 action-unload -1 -1)
	(up-set-group search-local c: 7)
	(up-jump-rule 1)
)

; (defrule
; 	(up-path-distance point2-x 0 >= 100)
; 	(up-compare-goal gatherinside != yes)
; 	(goal attacking no)
; 	(timer-triggered fifteensec)
; 	(up-compare-goal temporary-goal7 > 0)
; =>
; 	(up-cross-tiles point2-x point-x c: 1)
; 	(up-modify-goal temporary-goal7 c:- 1)
; ;	(chat-to-player my-player-number "Adjusting point - attacking no")
; ;	(up-send-flare point2-x)
; 	(up-jump-rule -2)
; )
(defrule
	(timer-triggered fifteensec)
	(up-compare-goal gatherinside != yes)
	(up-compare-goal temporary-goal5 g:<= temporary-goal)
	(up-compare-goal temporary-goal5 < 70);shouldn't be needed, but additional protection against infinite loops
=>
	(up-modify-goal temporary-goal5 c:+ 1)
	(up-jump-rule -5);-7
)

; (defrule
; 	(true)
; =>
; 	(up-get-rule-id temporary-goal)
; 	(up-chat-data-to-player 1 "rule id %d" g: temporary-goal)
; )
(defrule
	(timer-triggered fifteensec)
	(up-compare-goal gatherinside != yes)
=>
	(up-set-target-by-id g: temporary-goal8)
	(up-get-point position-object point3-x)
;	(up-send-flare point3-x)
)

#load-if-defined COMMENT-OUT
(defrule
	(up-compare-goal gatherinside != yes)
	(timer-triggered fifteensec)
	(building-type-count archery-range < 3)
	(goal attacking yes)
=>
	(up-full-reset-search)
	(up-find-local c: archery-range c: 2)
	(up-set-target-object search-local c: 0)
	(up-get-point position-object point-x)
	(up-copy-point point3-x point-x)
	(up-set-target-object search-local c: 1);get average point of the two ranges
	(up-lerp-percent point-x point2-x c: 50)
	(up-lerp-tiles point-x position-self-x c: -6)
)


(defrule
	(up-compare-goal gatherinside != yes)
	(timer-triggered fifteensec)
	(building-type-count archery-range < 3)
	(goal attacking yes)
	(up-path-distance point-x 0 < 100)
=>
	(up-set-target-point point-x)
	(up-target-point point-x action-gather -1 -1)
;	(up-target-point point-x action-ungarrison -1 -1)
;	(chat-local-to-self "ungarrisoning archery range away from TC")
)


(defrule
	(up-compare-goal gatherinside != yes)
	(timer-triggered fifteensec)
	(building-type-count archery-range < 3)
	(goal attacking no)
=>
	(up-full-reset-search)
	(up-find-local c: archery-range c: 2)
	(up-set-target-object search-local c: 0)
	(up-get-point position-object point-x)
	(up-copy-point point3-x point-x)
	(up-set-target-object search-local c: 1);get average point of the two ranges
	(up-lerp-percent point-x point2-x c: 50)
	(up-lerp-tiles point-x position-self-x c: 5)
	(set-goal temporary-goal3 5)
)

(defrule
	(up-compare-goal gatherinside != yes)
	(timer-triggered fifteensec)
	(building-type-count archery-range < 3)
	(goal attacking no)
	(up-path-distance point-x 0 < 100)
=>
	(up-set-target-point point-x)
	(up-target-point point-x action-gather -1 -1)
;	(up-target-point point-x action-ungarrison -1 -1)
	(chat-local-to-self "ungarrisoning archery range towards TC")
	(up-ungarrison c: archery-range)
	(up-jump-rule 1)
)


(defrule
	(up-compare-goal gatherinside != yes)
	(timer-triggered fifteensec)
	(building-type-count archery-range < 3)
	(goal attacking no)
	(up-path-distance point-x 0 > 100)
	(up-compare-goal temporary-goal3 > 0)
=>
	(generate-random-number 4)
	(up-get-fact random-number g: temporary-goal);random search
	(generate-random-number 4)
	(up-modify-goal temporary-goal3 c:- 1)
	(up-get-fact random-number g: temporary-goal2)
	(up-modify-goal point-x c:- 2)
	(up-modify-goal point-y c:- 2)
	(up-modify-goal point-x g:+ temporary-goal)
	(up-modify-goal point-x g:- temporary-goal)
;	(chat-local-to-self "Debug: searching for pathable point")
	(up-jump-rule -2)
)
#end-if
(defrule
	(timer-triggered fifteensec)
	(up-compare-goal gatherinside != yes)
=>
	(up-ungarrison c: archery-range)
	(up-ungarrison c: stable)
	(up-ungarrison c: barracks)
)

;(defrule
;	(timer-triggered fifteensec)
;	(up-compare-goal gatherinside != yes)
;=>
;	(up-full-reset-search)
;	(up-filter-exclude -1 -1 -1 villager-class)
;	(up-filter-exclude -1 -1 -1 monastery-class)
;	(up-filter-exclude -1 -1 -1 king-class)
;	(up-filter-include -1 actionid-enter -1 -1);check if we need to check order ID as well
;	(up-target-objects 0 action-ungarrison -1 -1)
;)


(defrule
	(up-compare-goal gatherinside != no)
; ds	(timer-triggered fivesec); should be fine
	(building-type-count barracks >= 1)
; hm	(players-building-count any-enemy <= 0)
	(military-population == 1)
;	(unit-type-count scout-unit <= 0)
;	(up-compare-goal scouting-unit <= -1)
	(unit-type-count spearman-line == 1)
=>
	(up-gather-inside c: barracks c: 0)
	(up-ungarrison c: barracks)
	(disable-self)); for now
(defrule
	(goal gatherinside yes)
	(timer-triggered fifteensec)
(or	(building-type-count barracks >= 1)
(or	(building-type-count archery-range >= 1)
	(building-type-count stable >= 1)))
=>
	(up-gather-inside c: barracks c: 1)
	(up-gather-inside c: archery-range c: 1)
	(up-gather-inside c: stable c: 1))

(defrule
	(current-age >= feudal-age)
	(up-pending-objects c: fishing-ship <= 0)
	(up-pending-objects c: transport-ship <= 0)
=>
	(up-ungarrison c: dock)
	(up-gather-inside c: dock c: 1)
	(disable-self))
(defrule
	(current-age < feudal-age)
=>
	(up-jump-rule 3))
(defrule
	(up-compare-goal gl-threat-time < 3000); hmm
	(goal gl-threat-target warship-class)
	(military-population >= 2)
=>
	(up-gather-inside c: dock c: 0)
	(up-ungarrison c: dock)
	(disable-self))
(defrule
(or	(up-compare-goal navycount g:>= biggestenemynavy)
(or	(up-compare-goal navycount >= 10); 20
(or	(population >= max-civ-pop); del
(or	(strategic-number sn-percent-attack-boats >= 100)
(or	(strategic-number sn-number-boat-attack-groups >= 1000)
(or	(up-pending-objects c: transport-ship >= 1)
	(up-pending-objects c: fishing-ship >= 1)))))))
=>
	(up-gather-inside c: dock c: 0)
	(up-ungarrison c: dock)
	(disable-self))
(defrule
	(current-age >= feudal-age)
	(up-pending-objects c: fishing-ship <= 0)
	(up-pending-objects c: transport-ship <= 0)
	(up-compare-goal gl-threat-time < 3000); hmm
(or	(goal gl-threat-target building-class)
	(goal gl-threat-target warship-class))
	(military-population >= 1)
=>
	(up-gather-inside c: dock c: 0)
	(up-ungarrison c: dock)
	(disable-self)); end jump


(defrule; 214
(or	(up-compare-goal tower-garrison-time != 1)
(or	(up-compare-const diff-fp != 1)
(or	(building-type-count watch-tower <= 0)
	(game-time < 2))))
=>
	(up-jump-rule 4))
(defrule
(or	(goal attacking yes)
(or	(goal patroldefense yes)
(or	(goal patrolhelp yes)
(or	(building-type-count watch-tower >= 2)
	(up-compare-goal gl-threat-time >= 4000)))))
=>
	(set-goal temporary-goal 12974)
	(up-full-reset-search)
	(up-filter-garrison c: 1 c: -1))
(defrule
	(goal temporary-goal 12974)
	(up-find-local c: watch-tower c: 1)
=>
	(up-gather-inside c: watch-tower c: 0)
	(up-set-target-object search-local c: 0)
	(up-target-point 0 action-unload -1 -1)
	(set-goal tower-garrison-time 0))
(defrule
	(true)
=>
	(set-goal temporary-goal 12975)
	(up-full-reset-search)
	(up-filter-exclude -1 actionid-attack -1 -1)
	(up-filter-garrison c: 1 c: -1))
(defrule
	(goal temporary-goal 12975)
	(up-find-local c: watch-tower c: 1)
=>
	(up-gather-inside c: watch-tower c: 0)
	(up-set-target-object search-local c: 0)
	(up-target-point 0 action-unload -1 -1)
	(set-goal tower-garrison-time 0)); end jump

(defrule
	(up-compare-const diff-fp != 1)
=>
	(up-jump-rule 8))
(defrule
(or	(up-compare-goal gl-game-time g:< tower-garrison-time)
(or	(up-compare-goal gl-threat-time >= 8000)
(or	(goal attacking yes)
(or	(goal patroldefense yes)
(or	(goal patrolhelp yes)
(or	(building-type-count watch-tower != 1); <= 0
(or	(unit-type-count archer-line <= 0)
	(current-age >= castle-age))))))))
=>
	(up-jump-rule 7))
(defrule
	(true)
=>
	(up-modify-goal temporary-goal s:= sn-focus-player-number)
	(set-strategic-number sn-focus-player-number my-player-number)
	(set-goal temporary-goal3 0)
	(set-goal temporary-goal4 1)
	(set-goal temporary-goal5 0)
	(set-goal temporary-goal6 0)
	(set-goal temporary-goal7 0)
	(up-full-reset-search)
	(up-filter-include -1 actionid-attack -1 -1))
(defrule; end neg jump
	(up-find-remote c: watch-tower c: 1)
=>
	(up-set-target-object search-remote c: 0)
	(up-get-object-data object-data-garrison-count temporary-goal6)
	(up-modify-goal temporary-goal7 c:= t-garrison-c)
	(up-modify-goal temporary-goal7 g:- temporary-goal6)
	(up-modify-goal temporary-goal7 c:max 1)
	(up-modify-goal temporary-goal7 c:min 2)
	(up-get-point position-object saved-point-x)
	(up-set-target-point saved-point-x)
	(set-goal temporary-goal5 1)
	(up-reset-filters)
	(up-filter-distance c: -1 c: 5))
(defrule
	(goal temporary-goal5 1)
	(goal tower-garrison-time 1)
	(up-compare-goal temporary-goal6 >= t-garrison-c)
	(up-find-local c: villager-class c: 1)
=>
	(up-get-fact game-time 0 tower-garrison-time)
	(up-modify-goal tower-garrison-time c:+ 20)
	(up-full-reset-search)
	(up-filter-include -1 actionid-attack -1 -1);
	(up-filter-garrison c: 1 c: -1);
	(up-find-local c: watch-tower c: 1)
	(up-set-target-object search-local c: 0)
	(up-gather-inside c: watch-tower c: 0)
	(up-target-point 0 action-unload -1 -1)
	(up-jump-rule 3))
(defrule
	(goal temporary-goal5 1)
	(up-compare-goal temporary-goal6 < t-garrison-c)
	(up-find-local c: archer-line g: temporary-goal7)
=>
	(set-goal tower-garrison-time 1)
	(up-target-objects 0 action-garrison -1 -1)
	(up-modify-goal temporary-goal3 g:+ temporary-goal7)
	(up-modify-goal temporary-goal4 c:- 1))
(defrule
	(up-compare-goal temporary-goal3 < t-garrison-c)
	(up-compare-goal temporary-goal4 < 1)
	(goal temporary-goal5 1)
=>
	(up-full-reset-search)
	(up-filter-include -1 actionid-attack -1 -1)
	(up-modify-goal temporary-goal4 c:+ 1)
	(set-goal temporary-goal5 0)
	(up-jump-rule -4))
(defrule
	(up-compare-goal temporary-goal3 >= 1)
=>
	(up-gather-inside c: watch-tower c: 1))
(defrule
	(true)
=>
	(up-modify-sn sn-focus-player-number g:= temporary-goal)); end jump



(defrule
(or	(game-time >= 1500)
(or	(up-compare-const diff-fp != 1)
(or	(research-completed ri-tigui)
(or	(goal position-self-id -1)
(or	(and	(up-enemy-units-in-town <= 0)
		(up-enemy-villagers-in-town <= 0))
(or	(building-type-count town-center != 1); <= 0
	(unit-type-count villager <= 0)))))))
=>
	(up-jump-rule 7))
(defrule
	(true)
=>
	(up-modify-goal temporary-goal s:= sn-focus-player-number)
	(set-strategic-number sn-focus-player-number 1)
	(set-goal temporary-goal2 15)
	(set-goal temporary-goal3 0)
	(up-full-reset-search)
	(up-set-target-point position-self-x)
	(up-filter-distance c: -1 c: 4)
	(up-filter-exclude -1 -1 -1 livestock-class))
(defrule
	(player-in-game focus-player)
(not	(stance-toward focus-player ally))
	(strategic-number sn-focus-player-number != my-player-number)
	(player-valid focus-player)
=>
	(up-filter-status c: status-ready c: list-active)
	(up-find-status-remote c: all-units-class c: 8)
;	(up-find-remote c: all-units-class c: 1)
	(up-remove-objects search-remote object-data-hitpoints >= 67)
	(up-remove-objects search-remote object-data-speed >= 167)
	(up-remove-objects search-remote object-data-class == building-class)
	(up-remove-objects search-remote object-data-class == farm-class)
	(up-remove-objects search-remote object-data-class == tower-class)
	(up-remove-objects search-remote object-data-class == wall-class)
	(up-remove-objects search-remote object-data-class == gate-class))
(defrule
(not	(up-set-target-object search-remote c: 0))
	(strategic-number sn-focus-player-number < max-players)
=>
	(up-reset-search 1 1 1 1)
	(up-modify-sn sn-focus-player-number c:+ 1)
	(up-jump-rule -2))
(defrule
	(up-set-target-object search-remote c: 0)
(not	(stance-toward focus-player ally))
	(player-in-game focus-player)
	(player-valid focus-player)
=>
	(up-full-reset-search)
	(up-filter-distance c: -1 c: 4)
	(set-strategic-number sn-focus-player-number my-player-number)
	(up-find-remote c: town-center c: 1)
	(up-set-target-object search-remote c: 0)
	(up-get-object-data object-data-garrison-count temporary-goal2)
	(set-goal temporary-goal3 15)
	(set-goal temporary-goal6 52382))
(defrule
	(goal temporary-goal6 52382)
=>
	(up-modify-goal temporary-goal3 g:- temporary-goal2)
	(up-find-local c: villager-class g: temporary-goal3)
	(up-get-search-state local-total))
(defrule
	(true)
=>
	(up-modify-sn sn-focus-player-number g:= temporary-goal))
(defrule
	(up-compare-goal temporary-goal2 < 15)
	(up-compare-goal local-total >= 5); 3
	(up-compare-goal remote-total >= 1)
=>
;	(up-chat-data-to-all "remote-total: %d" g: remote-total)
	(up-target-objects 0 action-garrison -1 -1)
	(up-jump-rule 15));End jump (7) ;was 10

(defrule
	(true)
=>
	(up-modify-goal temporary-goal10 s:= sn-focus-player-number)
	(set-strategic-number sn-focus-player-number 1)
	(up-full-reset-search)
	(up-filter-include -1 -1 orderid-enter -1)
	(up-set-target-point position-self-x)
	(up-filter-distance c: -1 c: 8)
)

(defrule
	(player-in-game focus-player)
	(players-stance focus-player ally)
	(up-find-remote c: all-units-class c: 1)
=>
	(up-modify-sn sn-focus-player-number g:= temporary-goal10)
;	(chat-to-all "Jumping over these rules")
	(up-jump-rule 5)
)

(defrule
	(strategic-number sn-focus-player-number < max-players)
=>
	(up-modify-sn sn-focus-player-number c:+ 1)
	(up-jump-rule -2)
)

(defrule
	(strategic-number sn-focus-player-number >= max-players)
=>
	(up-modify-sn sn-focus-player-number g:= temporary-goal10)
)
(defrule
(or	(up-timer-status twentysec == timer-running)
(or	(up-compare-goal gl-threat-time < 10000)
	(and	(building-type-count town-center <= 0); test
		(and	(building-type-count watch-tower <= 0)
			(and	(building-type-count bombard-tower <= 0)
				(and	(building-type-count castle <= 0)
					(building-type-count krepost <= 0)))))))
=>
	(up-jump-rule 2))
(defrule
	(true)
=>
	(up-full-reset-search)
	(up-modify-goal temporary-goal g:= villagercount)
	(up-modify-goal temporary-goal c:min 240)
	(up-find-local c: villager-class g: temporary-goal)
	(up-get-search-state local-total)
	(up-modify-goal temporary-goal2 g:= local-total)
	(up-full-reset-search)
	(up-filter-exclude -1 actionid-attack -1 -1)
	(up-filter-garrison c: 1 c: -1);
	(up-find-local c: town-center c: 24); test
	(up-find-local c: watch-tower c: 24)
	(up-find-local c: bombard-tower c: 24)
	(up-find-local c: castle c: 24)
	(up-find-local c: krepost c: 24)
	(up-get-search-state local-total))
(defrule
	(up-compare-goal temporary-goal g:> temporary-goal2)
	(up-compare-goal local-total >= 1)
=>
;	(chat-to-all "Ungarrison villagers.")
	(up-target-point 0 action-unload -1 -1))

(defrule
(or	(up-timer-status embassy == timer-running)
	(building-type-count dock <= 0))
=>
	(up-jump-rule 4))
(defrule
	(true)
=>
	(up-full-reset-search)
	(up-filter-garrison c: 1 c: -1)
	(up-find-local c: dock c: 40))
(defrule
	(up-set-target-object search-local c: 0)
(or	(up-compare-goal navycount >= 1)
	(unit-type-count transport-ship >= 1))
(or	(goal attacking yes)
	(strategic-number sn-number-boat-attack-groups >= 1))
=>
;	(chat-local-to-self "Ungarrison warboats.")
	(up-target-point 0 action-unload -1 -1)
	(up-gather-inside c: dock c: 0)
	(up-jump-rule 2))
(defrule
	(up-set-target-object search-local c: 0)
(or	(unit-type-count fishing-ship >= 1)
	(unit-type-count trade-cog >= 1))
=>
	(up-full-reset-search)
	(up-find-local c: fishing-ship c: 40)
	(up-find-local c: trade-cog c: 40)
	(up-remove-objects search-local object-data-garrisoned != 1))
(defrule
	(up-set-target-object search-local c: 0)
(or	(unit-type-count fishing-ship >= 1)
	(unit-type-count trade-cog >= 1))
=>
;	(chat-local-to-self "Ungarrison ecoboats.")
	(up-get-object-data object-data-garrison-id temporary-goal)
	(up-full-reset-search)
	(up-add-object-by-id search-local g: temporary-goal)
	(up-remove-objects search-local object-data-garrison-count <= 0);
	(up-target-point 0 action-unload -1 -1)); end jump

;This approach doesn't work as up-find-remote stops working when the villagers are garrisonned
; (defrule
; 	(true)
; =>
; 	(up-modify-goal temporary-goal10 s:= sn-focus-player-number)
; 	(set-strategic-number sn-focus-player-number 1)
; 	(up-full-reset-search)
; ;	(up-filter-include -1 -1 orderid-enter -1);might not be needed and orderid doesn't last permenantly
; 	(up-set-target-point position-self-x)
; 	(up-filter-distance c: -1 c: 6)
; )

; (defrule
; 	(player-in-game focus-player)
; 	(players-stance focus-player ally)
; 	(up-find-remote c: all-units-class c: 1)
; =>
; 	(up-modify-sn sn-focus-player-number g:= temporary-goal10)
; 	(chat-to-all "Jumping over these rules")
; 	(up-jump-rule 6)
; )

; (defrule
; 	(strategic-number sn-focus-player-number < 8)
; =>
; 	(up-modify-sn sn-focus-player-number c:+ 1)
; 	(up-full-reset-search)
; 	(up-filter-distance c: -1 c: 6)
; 	(up-jump-rule -2)
; )


; (defrule
; 	(strategic-number sn-focus-player-number >= 8)
; =>
; 	(up-modify-sn sn-focus-player-number g:= temporary-goal10)
; )

(defrule
	(true)
=>
	(up-full-reset-search)
	(up-filter-distance c: -1 c: 60)
	(up-set-target-point position-self-x)
	(up-filter-include -1 -1 orderid-enter -1)
)

(defrule
	(not(up-find-local c: villager-class c: 3))
=>
	(up-jump-rule 4)
)

(defrule
(or	(game-time >= 1500)
(or	(up-compare-const diff-fp != 1)
(or	(building-type-count town-center <= 0)
(or	(up-compare-goal gl-threat-time < 4000)
(or	(and	(up-compare-goal gl-threat-source != dangerous-animal-class)
		(up-enemy-units-in-town >= 1))
	(unit-type-count villager <= 0))))))
=>
	(up-jump-rule 3))
(defrule
	(true)
=>
	(up-full-reset-search)
	(up-set-target-point position-self-x)
	(up-filter-distance c: -1 c: 7)
	(up-filter-exclude -1 -1 -1 building-class)
	(up-filter-status c: status-ready c: list-active)
	(up-find-status-remote c: all-units-class c: 1)
	(up-modify-goal temporary-goal s:= sn-focus-player-number)
	(set-strategic-number sn-focus-player-number 0)
	(up-find-remote c: 812 c: 1)
	(up-find-remote c: 126 c: 1)
	(up-find-remote c: 89 c: 1)
	(up-find-remote c: 202 c: 1)
	(up-find-remote c: 700 c: 1)
	(up-remove-objects search-remote object-data-player c:!= 0)
	(up-modify-sn sn-focus-player-number g:= temporary-goal)
	(up-reset-filters))
(defrule
(not	(up-set-target-object search-remote c: 0))
=>
	(up-filter-exclude -1 actionid-attack -1 -1)
	(up-filter-garrison c: 3 c: -1)
	(up-find-local c: town-center c: 8))
(defrule
	(up-set-target-object search-local c: 0)
(not	(up-set-target-object search-remote c: 0))
=>
;	(chat-to-all "Ungarrison villagers.2")
	(up-target-point 0 action-unload -1 -1)); end jumps

(defrule
	(false)
=>
	(do-nothing)
)

(defrule
	(or(goal attackingsystem new)
	(and(up-compare-goal treaty-time > 0)
	(goal inseln yes)))
	(strategic-number sn-rule-global-timer > 3)
=>
	(up-jump-direct g: old-jump-rule)
)

; (defrule
; 	(timer-triggered fifteensec)
; =>
; 	(chat-to-player 1 "Test: rule not jumped")
; )
;=============================================================
; Townsize attack and groups - Actual attacking
;=============================================================
(defrule
(or	(up-compare-goal attacking != yes)
	(up-compare-goal gatherinside != no))
=>
	(set-goal attackInProgress no))
(defrule
	(goal attacking yes)
	(goal gatherinside no)
=>
	(set-goal attackInProgress yes))
(defrule
	(goal attacking yes)
	(goal attackInProgress no)
	(not(enemy-buildings-in-town))
	(strategic-number sn-maximum-town-size g:< targetdistance)
(or	(strategic-number sn-percent-attack-soldiers < 100)
	(strategic-number sn-number-attack-groups < 1000))
=>
	(set-goal attackStart yes)
	(enable-timer resetnow 1)
	(chat-local-to-self "Starting attack.")); test
(defrule
(or	(up-compare-goal attacking != yes)
(or	(up-compare-goal attackmethod != TSA)
	(strategic-number sn-maximum-town-size g:>= map-size)))
=>
	(up-jump-rule 12))
(defrule
	(goal drushmicro yes)
	(current-age <= feudal-age)
	(strategic-number sn-current-age < imperial); <= dfeudal
	(building-type-count-total archery-range < 1)
	(building-type-count-total stable < 1)
	(building-type-count-total barracks < 2)
(or	(military-population <= drush-militias)
	(military-population <= 6))
=>
	(up-jump-rule 11))
(defrule
	(up-compare-goal targetdistance g:<= map-size)
	(up-compare-goal targetdistance >= 1)
(not	(enemy-buildings-in-town))
=>
	(up-modify-goal temporary-goal g:= targetdistance)
	(up-modify-goal temporary-goal c:+ 2)
	(up-modify-goal temporary-goal g:min map-size)
	(up-modify-goal temporary-goal c:max 12)
	(up-modify-sn sn-maximum-town-size g:max temporary-goal))
(defrule
	(up-compare-sn sn-maximum-town-size g:<= map-size)
(or	(not	(enemy-buildings-in-town))
	(and	(players-building-type-count any-enemy wonder >= 1)
		(up-compare-goal victory-time < 750)))
=>
	(up-modify-sn sn-maximum-town-size c:+ 2)
	(up-modify-sn sn-maximum-town-size g:min map-size))
(defrule
	(up-compare-goal targetdistance g:<= map-size)
(or	(and	(enemy-captured-relics)
		(and	(players-building-type-count target-player monastery >= 1)
			(up-building-type-in-town c: monastery <= 0)))
	(and	(players-building-type-count target-player wonder >= 1)
		(up-building-type-in-town c: wonder <= 0)))
=>
	(up-modify-sn sn-maximum-town-size c:+ 2)
	(up-modify-sn sn-maximum-town-size g:min map-size))
(defrule
	(players-building-type-count target-player town-center <= 0)
	(players-building-type-count target-player mill <= 0)
	(players-building-type-count target-player lumber-camp <= 0)
	(players-building-type-count target-player mining-camp <= 0)
=>
	(up-jump-rule 1))
(defrule
	(up-compare-goal targetdistance g:<= map-size)
	(players-building-type-count target-player castle <= 0)
	(players-building-type-count target-player bombard-tower <= 0)
	(players-building-type-count target-player krepost <= 0)
(or	(up-building-type-in-town c: watch-tower <= 0)
	(and	(strategic-number sn-maximum-town-size >= 33)
		(up-compare-goal strategy-type <= feudal-war)))
	(up-building-type-in-town c: town-center <= 0)
	(up-building-type-in-town c: mill <= 0);
	(up-building-type-in-town c: lumber-camp <= 0)
	(up-building-type-in-town c: mining-camp <= 0)
=>
	(up-modify-sn sn-maximum-town-size c:+ 2)
	(up-modify-sn sn-maximum-town-size g:min map-size)); end jump
(defrule
	(population >= siege-pop)
(or	(goal siegereq yes)
	(players-population target-player < min-number-vills));
	(strategic-number sn-military-superiority >= 1)
=>
	(up-jump-rule 2))
(defrule
	(strategic-number sn-military-superiority <= 3); test
	(military-population < 60)
	(population < 210); 225
(or	(population <= up-max-civ)
(or	(and	(players-population target-player >= maxcartspop); up-max-civ
		(strategic-number sn-military-superiority < 2)); 4
(or	(current-age <= feudal-age)
(or	(strategic-number sn-military-superiority <= 0); 1
	(up-compare-goal strategy-type <= feudal-war))))); castle
=>
	(up-jump-rule 4))
(defrule
	(strategic-number sn-military-superiority <= 4); 5
	(military-population < 60)
	(population < 220)
(nor	(unit-type-count battering-ram-line >= 2)
(or	(unit-type-count bombard-cannon-line >= 2)
(or	(unit-type-count trebuchet-set >= 1)
	(up-compare-goal mangonel-set >= 16))))
=>
	(up-jump-rule 3)); end jump
(defrule
	(players-building-type-count target-player town-center <= 0)
	(players-building-type-count target-player castle <= 0)
	(players-building-type-count target-player bombard-tower <= 0)
	(players-building-type-count target-player feitoria <= 0)
	(players-building-type-count target-player krepost <= 0)
	(players-building-type-count target-player watch-tower <= 0)
;	(players-building-type-count target-player siege-workshop <= 0)
=>
	(up-jump-rule 1))
(defrule
	(up-compare-goal targetdistance g:<= map-size)
	(up-building-type-in-town c: town-center <= 0)
	(up-building-type-in-town c: castle <= 0)
	(up-building-type-in-town c: bombard-tower <= 0)
	(up-building-type-in-town c: feitoria <= 0)
	(up-building-type-in-town c: krepost <= 0)
	(up-building-type-in-town c: watch-tower <= 0)
;	(up-building-type-in-town c: siege-workshop <= 0)
=>
	(up-modify-sn sn-maximum-town-size c:+ 2)
	(up-modify-sn sn-maximum-town-size g:min map-size)
	(up-jump-rule 1)); end jump
(defrule
	(up-compare-goal targetdistance g:<= map-size)
	(players-building-type-count target-player town-center <= 0)
	(players-building-type-count target-player castle <= 0)
	(players-building-type-count target-player bombard-tower <= 0)
	(players-building-type-count target-player feitoria <= 0)
	(players-building-type-count target-player krepost <= 0)
	(players-building-type-count target-player watch-tower <= 0)
	(players-building-type-count target-player market >= 1)
(or	(up-building-type-in-town c: market <= 0)
	(up-compare-const mp-game != 1))
=>
	(up-modify-sn sn-maximum-town-size c:+ 2)
	(up-modify-sn sn-maximum-town-size g:min map-size)); end jumps


(defrule
	(goal attacking yes)
	(goal attackmethod groups)
(or	(strategic-number sn-percent-attack-soldiers < 100)
	(strategic-number sn-number-attack-groups < 1000))
=>
	(set-strategic-number sn-percent-attack-soldiers 100)
	(set-strategic-number sn-number-attack-groups 1000)
	(set-strategic-number sn-percent-attack-boats 100)
	(set-strategic-number sn-number-boat-attack-groups 1000))

#load-if-not-defined LUDIKRIS-MAP
(defrule
(or	(difficulty == easiest)
(or	(difficulty == easy)
(or	(difficulty == moderate)
	(goal strategy stonewall))))
=>
	(up-jump-rule 1))
(defrule
;(nand	(players-population target-player < 75)
;		(population > 100))
	(goal map land)
	(goal inseln no)
	(players-building-count target-player >= 1)
	(players-building-type-count every-enemy stone-wall-line <= 2)
	(players-building-type-count every-enemy 939 <= 1); gates
	(up-compare-goal attackmethod != TSA)
=>
	(set-strategic-number sn-percent-attack-soldiers 0)
	(set-strategic-number sn-number-attack-groups 0)
;	(set-strategic-number sn-percent-attack-boats 0)
	(set-strategic-number sn-number-boat-attack-groups 0)
	(chat-local-to-self "TSA.")
	(set-goal attackmethod TSA)); end jump
(defrule
(or	(goal map water)
(or	(goal inseln yes)
;(or	(and	(players-population target-player < 70)
;		(population > 105))
(or	(players-building-count target-player <= 0)
(or	(players-building-type-count any-enemy stone-wall-line >= 3)
	(players-building-type-count any-enemy 939 >= 2)))));); gates
	(up-compare-goal attackmethod != groups)
=>
;	(up-modify-sn sn-maximum-town-size c:max 10)
;	(up-modify-sn sn-maximum-town-size c:min 14)
;	(chat-local-to-self "Resetting townsize.")
	(up-modify-sn sn-maximum-town-size c:max 10)
	(up-modify-sn sn-maximum-town-size c:min 24); 38
	(chat-local-to-self "Groups.")
	(set-goal attackmethod groups))
#else
(defrule
	(up-compare-goal attackmethod != groups)
=>
;	(chat-local-to-self "Resetting townsize.")
	(up-modify-sn sn-maximum-town-size c:max 10)
	(up-modify-sn sn-maximum-town-size c:min 32); 38
	(chat-local-to-self "Groups.")
	(set-goal attackmethod groups))
#end-if
(defrule
(or	(difficulty == easiest)
(or	(difficulty == easy)
(or	(difficulty == moderate)
	(goal strategy stonewall))))
	(up-compare-goal attackmethod != groups)
=>
;	(chat-local-to-self "Resetting townsize.")
	(up-modify-sn sn-maximum-town-size c:max 10)
	(up-modify-sn sn-maximum-town-size c:min 32); 38
	(chat-local-to-self "Groups.")
	(set-goal attackmethod groups))

(defrule
	(goal attacking no)
	(strategic-number sn-maximum-town-size >= 70)
=>
	(chat-to-player my-player-number "Debugging town-size (70).")
	(up-modify-sn sn-maximum-town-size c:max 10)
	(up-modify-sn sn-maximum-town-size c:min 32)); 24
(defrule
	(goal attacking no)
	(up-compare-goal drushmicro == no)
(or	(strategic-number sn-percent-attack-soldiers > 0)
	(strategic-number sn-number-attack-groups > 0))
=>
	(chat-to-player my-player-number "Debugging attack-groups.")
	(set-strategic-number sn-percent-attack-soldiers 0)
	(set-strategic-number sn-number-attack-groups 0))
;(defrule
;	(goal attacking no)
;	(up-compare-goal drushmicro == no)
;	(up-compare-goal navycount <= 5)
;(or	(strategic-number sn-percent-attack-boats > 0)
;	(strategic-number sn-number-boat-attack-groups > 0))
;=>
;	(set-strategic-number sn-percent-attack-boats 0)
;	(set-strategic-number sn-number-boat-attack-groups 0)
;	(chat-to-player my-player-number "Debugging attack-boats."))


(defrule
	(up-compare-const dm-game == 1)
	(game-time < 64)
(or	(strategic-number sn-maximum-town-size >= 16)
	(game-time < 48))
(or	(strategic-number sn-maximum-town-size >= 14)
	(game-time < 32))
(or	(strategic-number sn-maximum-town-size >= 12)
	(game-time < 8))
	(strategic-number sn-maximum-town-size >= 10)
=>
	(up-jump-rule 12))
(defrule
	(up-compare-goal villagercounttotal >= 30);	(unit-type-count-total villager >= 30); 40
	(up-compare-goal villagercounttotal < min-number-vills)
=>
	(up-modify-goal temporary-goal g:= villagercounttotal)
	(up-modify-goal temporary-goal c:/ 3); 4
	(up-modify-goal temporary-goal c:min 34))
(defrule
	(up-compare-goal villagercounttotal >= 30);	(unit-type-count-total villager >= 40)
	(up-compare-goal villagercounttotal < min-number-vills)
	(up-compare-sn sn-maximum-town-size g:< temporary-goal)
;	(not(enemy-buildings-in-town))
=>
	(up-modify-sn sn-maximum-town-size c:+ 1)
	(up-jump-rule 10))
(defrule
(or	(game-time >= 2700)
(or	(military-population >= 32)
(or	(goal inseln yes)
	(strategic-number sn-military-superiority >= 1))))
	(strategic-number sn-current-age >= cimperial)
	(not(enemy-buildings-in-town))
=>
	(up-modify-sn sn-maximum-town-size c:max 30)
	(up-jump-rule 9))
(defrule
(or	(game-time >= 2400)
(or	(military-population >= 31)
(or	(goal inseln yes)
	(strategic-number sn-military-superiority >= 1))))
	(strategic-number sn-current-age >= cimperial)
	(not(enemy-buildings-in-town))
=>
	(up-modify-sn sn-maximum-town-size c:max 28)
	(up-jump-rule 8))
(defrule
(or	(and	(military-population >= 20)
		(strategic-number sn-military-superiority >= 2))
(or	(game-time >= 2700)
	(goal inseln yes)))
	(strategic-number sn-current-age >= fcastlea)
	(not(enemy-buildings-in-town))
=>
	(up-modify-sn sn-maximum-town-size c:max 26)
	(up-jump-rule 7))
(defrule
(or	(and	(military-population >= 18)
		(strategic-number sn-military-superiority >= 2))
(or	(game-time >= 2400)
	(goal inseln yes)))
	(strategic-number sn-current-age >= fcastlea)
	(not(enemy-buildings-in-town))
=>
	(up-modify-sn sn-maximum-town-size c:max 24)
	(up-jump-rule 6))
(defrule
(or	(building-type-count-total town-center >= 3); (goal dreitc yes)
(or	(goal inseln yes)
	(game-time >= 2100))); 2400
(or	(game-time >= 2100)
(or	(goal inseln yes)
	(and	(game-time >= 1800)
		(strategic-number sn-military-superiority >= 2))))
	(not(enemy-buildings-in-town))
=>
	(up-modify-sn sn-maximum-town-size c:max 22)
	(up-jump-rule 5))
(defrule
(or	(game-time >= 1680)
(or	(goal inseln yes)
(or	(building-type-count-total town-center >= 3); (goal dreitc yes)
	(strategic-number sn-military-superiority >= 2))))
	(strategic-number sn-current-age >= fcastlea)
;	(not(enemy-buildings-in-town))
=>
	(up-modify-sn sn-maximum-town-size c:max 20)
	(up-jump-rule 4))
(defrule
(or	(strategic-number sn-current-age >= imperial)
(or	(game-time >= 1560)
(or	(goal inseln yes)
(or	(building-type-count-total town-center >= 3); (goal dreitc yes)
	(strategic-number sn-military-superiority >= 1)))))
	(strategic-number sn-current-age >= fcastlea)
;	(not(enemy-buildings-in-town))
=>
	(up-modify-sn sn-maximum-town-size c:max 18)
	(up-jump-rule 3))
(defrule
(or	(building-type-count-total town-center >= 3); (goal dreitc yes)
(or	(game-time >= 1410)
	(building-type-count-total monastery >= 1)))
(or	(game-time >= 1320)
(or	(building-type-count-total town-center >= 2)
	(strategic-number sn-military-superiority >= 0)))
;	(strategic-number sn-current-age >= fcastlea)
;	(not(enemy-buildings-in-town))
=>
	(up-modify-sn sn-maximum-town-size c:max 16)
	(up-jump-rule 2))
(defrule
(or	(game-time >= 1230)
	(strategic-number sn-current-age >= fcastlea))
(or	(building-type-count-total town-center >= 3); (goal dreitc yes)
(or	(building-type-count-total monastery >= 1)
	(wood-amount >= 260)))
;	(not(enemy-buildings-in-town))
=>
	(up-modify-sn sn-maximum-town-size c:max 14)
	(up-jump-rule 1))
(defrule
(or	(building-type-count-total town-center >= 3); (goal dreitc yes)
(or	(building-type-count-total archery-range >= 2); 1
(or	(building-type-count-total stable >= 2); 1
(or	(building-type-count-total barracks >= 2)
(or	(building-type-count-total blacksmith >= 1)
(or	(building-type-count-total market >= 1)
	(game-time >= 1080)))))))
;	(not(enemy-buildings-in-town))
=>
	(up-modify-sn sn-maximum-town-size c:max 12)); end jump
;==============================================================
; TSA? Yeah, right...
;==============================================================
#load-if-not-defined DIFFICULTY-EASIEST
#load-if-not-defined DIFFICULTY-EASY
#load-if-not-defined DIFFICULTY-MODERATE
(defrule
(or	(game-time >= 2400)
(or	(strategic-number sn-current-age >= imperial)
(or	(military-population >= 42)
	(and	(up-compare-goal strategy-type >= castle-war)
		(and	(up-compare-goal strategy != usual)
			(and	(up-compare-goal strategy != a-rush)
				(up-compare-goal strategy != ca-rush)))))))
=>
	(up-jump-rule 4))
(defrule
(or	(up-compare-goal scoutmicro != no)
(or	(players-building-type-count focus-player watch-tower <= 0); test
(or	(players-building-type-count any-enemy stone-wall-line >= 1)
(or	(players-building-type-count any-enemy palisade-wall >= 1)
(or	(players-building-type-count any-enemy gate >= 1)
	(goal map water))))))
=>
	(up-jump-rule 3))
(defrule
(or	(up-compare-goal drushmicro != no)
(or	(players-unit-type-count focus-player mangonel-line >= 1); 2
(or	(players-building-type-count any-enemy castle >= 1)
(or	(players-building-type-count any-enemy bombard-tower >= 1)
(or	(players-building-type-count any-enemy town-center >= 2)
(or	(players-building-type-count any-enemy watch-tower >= 2)
(or	(players-building-count target-player <= 0)
	(up-compare-goal targetdistance < 30))))))))
=>
	(up-jump-rule 2))
(defrule
(or	(current-age >= imperial-age)
(or	(population >= max-civ-pop)
(or	(unit-type-count battering-ram-line >= 1)
(or	(unit-type-count trebuchet-set >= 1)
(or	(unit-type-count bombard-cannon-line >= 1)
(or	(unit-type-count petard >= 3)
(or	(up-compare-goal mangonel-set >= 1); 2
	(unit-type-count scorpion-line >= 2)))))))); 3
=>
	(up-jump-rule 1))
(defrule
	(goal attacking yes)
	(goal attackStart yes)
	(goal gatherinside no)
	(goal underattack no)
	(up-timer-status patrol-timer == timer-disabled)
	(up-timer-status retreat-timer != timer-running)
	(up-timer-status resetnow != timer-running)
	(up-timer-status resetnow2 != timer-running)
	(goal patroldefense no)
	(goal patrolhelp no)
	(up-timer-status unit-control-flare-timer2 == timer-disabled)
=>
	(set-goal selectdrushwaypoint 0)
	(set-goal drushmicro 2)
	(enable-timer spread 120); test
;	(disable-self)
); end jump
(defrule
	(goal drushmicro 2)
(or	(players-unit-type-count focus-player mangonel-line >= 1); 2; test
	(up-timer-status spread != timer-running)); test
	(up-timer-status resetnow != timer-running); test
=>
	(up-reset-unit c: -1)
	(up-set-attack-stance -1 c: stance-aggressive)
	(chat-local-to-self text-resetting-military)
;	(chat-local-to-self "Drushmicro: No.")
	(set-goal drushmicro no)
	(up-jump-rule 1)
	(disable-self))
(defrule
	(goal drushmicro 2)
(or	(up-timer-status spread != timer-running); test
(or	(goal underattack yes)
(or	(up-timer-status patrol-timer != timer-disabled)
(or	(players-unit-type-count focus-player mangonel-line >= 1); 2; test
;(or	(up-timer-status retreat-timer == timer-running)
(or	(goal patroldefense yes)
(or	(goal patrolhelp yes)
	(up-timer-status unit-control-flare-timer2 != timer-disabled)))))));
=>
;	(chat-local-to-self "Drushmicro: No.")
	(set-goal drushmicro no))
(defrule
	(up-compare-goal duc-dfu != -1)
(or	(up-compare-goal drushmicro != 2)
(or	(not	(up-set-target-by-id g: duc-dfu))
	(and	(up-set-target-by-id g: duc-dfu)
		(up-object-data object-data-action == actionid-explore))))
=>
	(set-goal duc-dfu -1))

(defrule ; 129
(or	(game-time < 4)
(or	(and	(up-compare-const grouped-by-team == 1)
		(up-compare-const mp-game == 1))
(or	(goal gatherinside yes)
(or	(players-building-count target-player <= 0)
(or	(and	(players-building-type-count target-player town-center <= 0)
		(players-building-type-count target-player watch-tower <= 0))
	(up-compare-goal drushmicro != 2))))))
=>
	(up-jump-rule 28))
(defrule
	(true)
=>
	(up-full-reset-search)
	(set-goal point-distance 0)
	(set-goal point-distance2 0)
	(set-goal drushtarget 0)
	(set-goal selectdrushwaypoint 0)
	(set-goal drushwaypoint-x 0)
	(set-goal drushwaypoint-y 0)
	(set-goal drushwaypoint2-x 0)
	(set-goal drushwaypoint2-y 0)
	(set-goal drushretreatpoint-x 0)
	(set-goal drushretreatpoint-y 0)
	(disable-self))
(defrule
	(goal duc-dfu -1)
=>
	(up-set-target-point position-self-x)
	(up-full-reset-search)
	(up-filter-exclude -1 actionid-explore orderid-explore -1)
	(up-filter-include cmdid-military -1 -1 -1)
	(up-find-local c: all-units-class c: 1))
(defrule
	(goal duc-dfu -1)
	(up-set-target-object search-local c: 0)
=>
	(up-get-object-data object-data-id duc-dfu))
(defrule
	(players-building-type-count target-player mill >= 1)
	(players-building-type-count target-player mining-camp <= 0)
	(players-building-type-count target-player lumber-camp <= 0)
	(up-compare-goal drushtarget != mill)
=>
	(set-goal drushtarget mill)
;	(chat-local-to-self "Target: Mill.")
	(set-goal temporary-goal 0)
	(set-goal temporary-goal2 0)
	(set-goal temporary-goal3 0)
	(set-goal selectdrushwaypoint 0))
(defrule
	(players-building-type-count target-player lumber-camp >= 1)
	(players-building-type-count target-player mining-camp <= 0)
	(up-compare-goal drushtarget != lumber-camp)
=>
	(set-goal drushtarget lumber-camp)
;	(chat-local-to-self "Target: Lumber-camp.")
	(set-goal temporary-goal 0)
	(set-goal temporary-goal2 0)
	(set-goal temporary-goal3 0)
	(set-goal selectdrushwaypoint 0))
(defrule
	(players-building-type-count target-player mining-camp >= 1)
	(up-compare-goal drushtarget != mining-camp)
=>
	(set-goal drushtarget mining-camp)
;	(chat-local-to-self "Target: Mining-camp.")
	(set-goal temporary-goal 0)
	(set-goal temporary-goal2 0)
	(set-goal temporary-goal3 0)
	(set-goal selectdrushwaypoint 0))

(defrule
	(up-compare-goal drushtarget != 0)
	(up-compare-goal selectdrushwaypoint <= 0)
=>
	(up-full-reset-search)
	(up-set-target-point position-self-x)
	(up-find-remote g: drushtarget c: 1)
	(up-set-target-object search-remote c: 0)
	(up-get-point position-object saved-point-x)
	(up-get-point-distance position-self-x saved-point-x point-distance)
	(up-modify-goal point-distance c:- 2); test
	(up-full-reset-search)
	(set-goal obstacle watch-tower)
	(up-find-remote g: obstacle c: 1)
	(up-get-search-state local-total))

(defrule
	(up-compare-goal drushtarget != 0)
	(up-compare-goal selectdrushwaypoint <= 0)
	(up-compare-goal remote-total >= 1)
=>
	(up-set-target-object search-remote c: 0)
	(up-get-point position-object point-x)
	(up-get-point-distance position-self-x point-x point-distance2))
(defrule
	(up-compare-goal drushtarget != 0)
	(up-compare-goal selectdrushwaypoint <= 0)
	(up-compare-goal point-distance g:> point-distance2)
	(up-compare-goal remote-total >= 1)
=>
;	(chat-local-to-self "Need a waypoint to get to the drushtarget.")
	(set-goal selectdrushwaypoint 1)
	(up-jump-rule 1))
(defrule
	(up-compare-goal selectdrushwaypoint <= 0)
	(up-compare-goal obstacle != town-center)
=>
	(set-goal obstacle town-center)
	(up-full-reset-search)
	(up-find-remote g: obstacle c: 1)
	(up-get-search-state local-total)
	(up-jump-rule -3))

(defrule
	(goal selectdrushwaypoint 1)
=>
	(up-full-reset-search)
	(up-set-target-point position-self-x)
	(up-find-remote g: obstacle c: 1)
	(up-set-target-object search-remote c: 0)
	(up-get-point position-object drushwaypoint-x)
	(up-get-point position-object drushwaypoint2-x)
	(up-cross-tiles drushwaypoint-x position-self-x c: -26)
	(up-cross-tiles drushwaypoint2-x position-self-x c: 26); 20
;	(up-get-point position-center temporary-point-x)
)
(defrule
	(goal selectdrushwaypoint 1)
=>
	(up-full-reset-search)
	(up-find-remote g: drushtarget c: 1)
	(up-set-target-object search-remote c: 0)
	(up-get-point position-object saved-point-x)
	(up-get-point-distance saved-point-x drushwaypoint-x point-distance); right?
	(up-get-point-distance saved-point-x drushwaypoint2-x point-distance2)); left?
(defrule
	(goal selectdrushwaypoint 1)
	(up-compare-goal point-distance g:> point-distance2)
	(up-compare-goal duc-dfu != -1)
=>
	(up-copy-point drushwaypoint-x drushwaypoint2-x))
(defrule
	(goal selectdrushwaypoint 1)
	(up-point-distance drushwaypoint-x position-self-x >= 4); temporary-point-x
(or	(or	(up-compare-goal drushwaypoint-x g:>= map-size); avoid invalid points
		(up-compare-goal drushwaypoint-y g:>= map-size)); this idea is from barbie
(or	(or	(up-compare-goal drushwaypoint-x < 0)
		(up-compare-goal drushwaypoint-y < 0))
	(up-point-contains drushwaypoint-x c: tree-class)))
=>
	(up-lerp-tiles drushwaypoint-x position-self-x c: 1); temporary-point-x
	(up-jump-rule -1))

(defrule
	(goal selectdrushwaypoint 1)
	(up-compare-goal duc-dfu != -1)
=>
	(up-full-reset-search)
;	(up-set-target-point position-self-x)
; test	(up-filter-include -1 actionid-stop -1 -1)
	(up-filter-include cmdid-military -1 -1 -1)
	(up-filter-exclude -1 actionid-explore orderid-explore -1)
	(up-find-local c: all-units-class c: 240)
	(up-set-target-point drushwaypoint-x)
	(up-target-point 0 action-patrol -1 stance-defensive);aggressive); action-move
	(enable-timer stance-timer 67); 33
	(enable-timer resetnow2 67); 33
;	(set-goal selectdrushwaypoint 2)
;	(chat-local-to-self "Move to the waypoint. 1")
	(disable-self))

(defrule
	(goal selectdrushwaypoint 1)
	(up-compare-goal duc-dfu != -1)
=>
	(up-full-reset-search)
	(up-set-target-by-id g: duc-dfu)
	(up-get-point position-object saved-point-x)
	(up-find-remote g: drushtarget c: 1)
	(up-set-target-object search-remote c: 0)
	(up-get-point position-object point-x)
	(up-get-point-distance saved-point-x drushwaypoint-x temporary-goal); distance to waypoint
	(up-get-point-distance saved-point-x point-x temporary-goal3); distance to drushtarget
;	(up-chat-data-to-player my-player-number "temporary-goal: %d" g: temporary-goal)
;	(up-chat-data-to-player my-player-number "temporary-goal3: %d" g: temporary-goal3)
)

(defrule
	(up-timer-status threesec != timer-running)
	(goal selectdrushwaypoint 1)
	(up-compare-goal point-distance g:<= point-distance2)
	(up-compare-goal duc-dfu != -1)
;test	(up-timer-status resetnow == timer-disabled)
	(up-compare-goal temporary-goal >= 8); dist to waypoint
	(up-compare-goal temporary-goal3 >= 8); dist to drushtarget
=>
	(up-full-reset-search)
;	(up-set-target-point position-self-x)
; test	(up-filter-include -1 actionid-stop -1 -1)
	(up-filter-include cmdid-military -1 -1 -1)
	(up-filter-exclude -1 actionid-explore orderid-explore -1)
	(up-find-local c: all-units-class c: 240)
	(up-set-target-point drushwaypoint-x)
	(up-target-point 0 action-patrol -1 stance-defensive);aggressive); action-move
	(enable-timer stance-timer 67); 33
	(enable-timer resetnow2 67); 33
;	(chat-local-to-self "Move to the waypoint. 2")
;	(set-goal selectdrushwaypoint 2)
)

(defrule
	(up-timer-status threesec != timer-running)
	(up-compare-goal duc-dfu != -1)
	(goal selectdrushwaypoint 1)
	(up-compare-goal temporary-goal < 8); dist to waypoint
	(up-compare-goal temporary-goal3 >= 8); dist to drushtarget
;	(up-timer-status resetnow == timer-disabled)
=>
	(up-full-reset-search)
;	(chat-local-to-self "Arrived at the waypoint, moving to target.")
	(set-goal temporary-goal7 24882)
	(up-set-target-by-id g: duc-dfu))
(defrule
	(goal temporary-goal7 24882)
=>
	(up-get-point position-object saved-point-x)
	(up-set-target-point saved-point-x)
	(up-filter-distance c: -1 c: 15)
	(up-filter-include cmdid-military -1 -1 -1)
	(up-filter-exclude -1 actionid-explore orderid-explore -1)
	(up-find-local c: all-units-class c: 240)
	(up-reset-filters)
	(up-find-remote g: drushtarget c: 1)
	(up-set-target-object search-remote c: 0)
	(up-get-point position-object point-x)
	(up-set-target-point point-x)
	(up-target-point 0 action-patrol -1 stance-defensive);aggressive)
	(enable-timer stance-timer 33); 33
	(enable-timer resetnow2 33); 33
	(set-goal drushmicro no))

(defrule
	(up-compare-goal duc-dfu != -1)
	(goal selectdrushwaypoint 1)
	(up-compare-goal temporary-goal3 < 8); dist to drushtarget
=>
;	(up-set-attack-stance militiaman-line c: stance-aggressive)
	(enable-timer stance-timer 0)
	(disable-self));	(chat-local-to-self "Arrived at the drushtarget."))

(defrule
	(up-compare-goal duc-dfu != -1)
	(goal selectdrushwaypoint 1)
=>
	(up-full-reset-search)
	(up-find-remote g: obstacle c: 1)
	(up-set-target-object search-remote c: 0)
	(up-get-point position-object temporary-point-x)
	(up-filter-include cmdid-military -1 -1 -1)
	(up-set-target-by-id g: duc-dfu)
	(up-get-point position-object saved-point-x))

(defrule
	(up-compare-goal duc-dfu != -1)
	(goal selectdrushwaypoint 1)
=>
	(up-full-reset-search)
	(up-set-target-point position-self-x);
	(up-set-target-by-id g: duc-dfu)
	(up-get-point position-object saved-point-x)
	(up-set-target-point saved-point-x);
	(up-get-point-distance position-self-x saved-point-x temporary-goal2); dist to militia
	(up-get-point-distance position-self-x drushwaypoint-x temporary-goal); dist to waypoint
	(up-modify-goal temporary-goal c:+ 1))
(defrule
	(up-compare-goal duc-dfu != -1)
	(goal selectdrushwaypoint 1)
	(up-compare-goal temporary-goal2 g:> temporary-goal); waypoint closer than militia
=>
	(up-copy-point drushretreatpoint-x drushwaypoint-x))
(defrule
	(up-compare-goal duc-dfu != -1)
	(goal selectdrushwaypoint 1)
	(up-compare-goal temporary-goal2 g:<= temporary-goal); militia closer than waypoint
=>
	(up-set-target-point position-self-x)
	(up-copy-point drushretreatpoint-x position-self-x))

(defrule
	(up-compare-goal duc-dfu != -1)
	(players-building-type-count target-player town-center >= 1)
=>
	(up-full-reset-search)
	(up-set-target-by-id g: duc-dfu)
	(up-get-point position-object saved-point-x)
	(up-find-remote c: town-center c: 1)
	(up-set-target-object search-remote c: 0)
	(up-get-point position-object temporary-point-x)
	(up-get-search-state local-total))
(defrule
	(up-compare-goal remote-total >= 1)
;	(up-compare-goal local-total >= 1)
	(up-point-distance saved-point-x temporary-point-x <= 7)
	(up-compare-goal saved-point-x >= 0)
	(up-compare-goal temporary-point-x >= 0)
	(players-building-type-count target-player town-center >= 1)
;	(up-timer-status resetnow == timer-disabled)
=>
	(up-full-reset-search)
;	(up-set-target-point position-self-x);;
	(up-filter-include cmdid-military -1 -1 -1)
	(up-filter-exclude -1 actionid-explore orderid-explore -1)
	(up-find-local c: all-units-class c: 240)
	(up-set-target-point drushretreatpoint-x)
	(up-target-point 0 action-move -1 stance-no-attack)
;	(chat-local-to-self "Retreating from TC range for a few meters.")
	(set-goal drushmicro no)
	(enable-timer resetnow 8)); 9
(defrule
	(up-projectile-detected projectile-town-center < 3000)
	(unit-type-count siege-weapon-class < 1)
	(military-population < 20)
	(up-compare-goal gl-threat-target != scout-unit)
=>
	(up-full-reset-search)
;	(up-set-target-point position-self-x);;
	(up-filter-include cmdid-military -1 -1 -1)
	(up-filter-exclude -1 actionid-explore orderid-explore -1)
	(up-find-local c: all-units-class c: 240)
	(up-set-target-point drushretreatpoint-x)
	(up-target-point 0 action-move -1 stance-no-attack)
;	(chat-local-to-self "Retreating from arrow fire for a few meters.")
	(set-goal drushmicro no)
	(enable-timer resetnow 8)); 10; end jump

(defrule
	(goal drushmicro 2)
	(up-timer-status resetnow2 == timer-disabled)
=>
;	(chat-local-to-self "Drushmicro: No.")
	(set-goal drushmicro no))



(defrule
(or	(up-compare-const diff-fp <= 0)
(or	(up-compare-goal attacking != yes)
(or	(game-time >= 1500)
(or	(unit-type-count battering-ram-line >= 1)
(or	(unit-type-count bombard-cannon-line >= 1)
(or	(up-compare-goal trebuchet-set >= 1)
(or	(soldier-count >= 31)
	(soldier-count <= 0))))))))
=>
	(up-jump-rule 20))
(defrule
;(or	(up-projectile-detected projectile-castle < 30000);
;(or	(up-projectile-detected projectile-town-center < 30000);
;(or	(up-projectile-detected projectile-bombard-tower < 30000);
;(or	(up-projectile-detected projectile-watch-tower < 30000);
(or	(up-timer-status threesec == timer-running)
(or	(unit-type-count petard >= 1)
(or	(unit-type-count mangonel-line >= 2)
	(up-compare-goal armytech >= castlea))));)))); imperial
=>
	(up-jump-rule 19))
(defrule
	(true)
=>
	(up-modify-goal temporary-goal7 s:= sn-focus-player-number)
	(up-full-reset-search)
	(up-set-target-point position-self-x)
	(up-filter-include cmdid-military actionid-attack orderid-attack on-mainland)
	(up-filter-exclude -1 -1 -1 warship-class)
	(up-find-local c: all-units-class c: 40)
	(up-remove-objects search-local object-data-group-flag >= 0)
	(up-clean-search search-local object-data-distance search-order-asc))
(defrule
	(up-set-target-object search-local c: 0)
(nor	(up-object-data object-data-target == building-class)
;(or	(up-object-data object-data-target == farm-class)
(or	(up-object-data object-data-target == tower-class)
(or	(up-object-data object-data-target == wall-class)
	(up-object-data object-data-target == gate-class))));)
=>
	(up-jump-rule 17))
(defrule
	(up-set-target-object search-local c: 0)
=>
	(up-get-point position-object saved-point-x)
	(set-strategic-number sn-focus-player-number 1)
	(up-reset-filters)
	(up-set-target-point saved-point-x)
	(up-filter-distance c: -1 c: 8)
	(up-filter-include -1 -1 -1 on-mainland)
	(up-filter-exclude -1 -1 -1 warship-class))
(defrule; end neg jump
	(up-set-target-object search-local c: 0)
(not	(players-stance focus-player ally))
	(player-in-game focus-player)
	(strategic-number sn-focus-player-number != my-player-number)
=>
	(up-find-remote c: all-units-class c: 40)
	(up-remove-objects search-remote object-data-class == building-class)
;	(up-remove-objects search-remote object-data-class == farm-class)
	(up-remove-objects search-remote object-data-class == tower-class)
	(up-remove-objects search-remote object-data-class == wall-class)
	(up-remove-objects search-remote object-data-class == gate-class))
(defrule
	(up-set-target-object search-local c: 0)
(not	(up-set-target-object search-remote c: 0))
	(strategic-number sn-focus-player-number < max-players)
=>
	(up-modify-sn sn-focus-player-number c:+ 1)
	(up-jump-rule -2))
(defrule
(or	(not	(up-set-target-object search-local c: 0))
	(up-set-target-object search-remote c: 0))
=>
	(up-jump-rule 12))
(defrule
	(true)
=>
	(set-strategic-number sn-focus-player-number 1)
	(up-full-reset-search)
	(up-set-target-point saved-point-x)
	(up-filter-distance c: -1 c: 30)
	(set-goal temporary-goal villager-class))
(defrule; end neg jump
(not	(players-stance focus-player ally))
	(player-in-game focus-player)
	(strategic-number sn-focus-player-number != my-player-number)
=>
	(up-find-remote g: temporary-goal c: 40))
(defrule
	(up-set-target-object search-remote c: 0)
	(up-compare-goal temporary-goal != villager-class)
=>
	(up-remove-objects search-remote object-data-distance < 8)
	(up-get-point position-object temporary-point-x)
	(up-get-point-distance position-self-x saved-point-x temporary-goal2)
	(up-set-target-point position-self-x)
	(up-remove-objects search-remote object-data-distance g:< temporary-goal2)
	(up-set-target-point saved-point-x))
(defrule
(not	(up-set-target-object search-remote c: 0))
	(strategic-number sn-focus-player-number < max-players)
=>
	(up-modify-sn sn-focus-player-number c:+ 1)
	(up-jump-rule -3))
(defrule
(not	(up-set-target-object search-remote c: 0))
	(goal temporary-goal villager-class)
	(players-building-type-count any-enemy mining-camp >= 1)
=>
	(set-strategic-number sn-focus-player-number 1)
	(set-goal temporary-goal mining-camp)
	(up-jump-rule -4))
(defrule
(not	(up-set-target-object search-remote c: 0))
(or	(goal temporary-goal villager-class)
	(goal temporary-goal mining-camp))
	(players-building-type-count any-enemy lumber-camp >= 1)
=>
	(set-strategic-number sn-focus-player-number 1)
	(set-goal temporary-goal lumber-camp)
	(up-jump-rule -5))
(defrule
(not	(up-set-target-object search-remote c: 0))
(or	(goal temporary-goal villager-class)
(or	(goal temporary-goal mining-camp)
	(goal temporary-goal lumber-camp)))
	(players-building-type-count any-enemy mill >= 1)
=>
	(set-strategic-number sn-focus-player-number 1)
	(set-goal temporary-goal mill)
	(up-jump-rule -6))
(defrule
(not	(up-set-target-object search-remote c: 0))
=>
	(up-jump-rule 4))
(defrule
	(true)
=>
	(up-clean-search search-remote object-data-distance search-order-asc)
	(up-set-target-object search-remote c: 0)
	(up-get-point position-object object-point-x)
	(up-full-reset-search)
	(up-set-target-point object-point-x)
	(up-filter-distance c: -1 c: 14); 12
	(up-find-remote c: castle c: 1)
	(up-find-remote c: krepost c: 1)
	(up-find-remote c: bombard-tower c: 1)
	(up-find-remote c: watch-tower c: 1)
	(up-find-remote c: town-center c: 1)
	(up-get-point-distance saved-point-x object-point-x temporary-goal))
(defrule
(not	(up-set-target-object search-remote c: 0))
	(up-compare-goal temporary-goal >= 4)
=>
	(up-full-reset-search)
	(up-set-target-point saved-point-x)
	(up-filter-distance c: -1 c: 8)
	(up-filter-include cmdid-military -1 -1 on-mainland)
	(up-filter-exclude -1 actionid-explore orderid-explore warship-class)
	(up-find-local c: all-units-class c: 40)
	(up-remove-objects search-local object-data-action == actionid-move)
	(up-remove-objects search-local object-data-order == orderid-move)
	(up-remove-objects search-local object-data-group-flag >= 0))
(defrule
(not	(up-set-target-object search-remote c: 0))
	(up-compare-goal temporary-goal >= 4)
=>
	(up-modify-goal temporary-goal c:- 2); 3
	(up-modify-goal temporary-goal c:min 9); 8
	(up-modify-goal temporary-goal c:max 2); 1
	(up-lerp-tiles saved-point-x object-point-x g: temporary-goal)
	(up-set-target-point position-self-x)
	(up-remove-objects search-local object-data-distance < 16)
	(up-set-target-point saved-point-x)
	(up-remove-objects search-local object-data-distance < 4)
	(up-get-search-state local-total)
	(set-goal temporary-goal2 123102))
(defrule
	(up-compare-goal local-total >= 1)
	(goal temporary-goal2 123102)
=>
;	(up-send-flare saved-point-x)
	(up-chat-data-to-self "Moving forward with %d soldiers." g: local-total)
;	(up-chat-data-to-all "Moving forward with %d soldiers." g: local-total)
;	(up-chat-data-to-all "Moving %d tiles." g: temporary-goal)
	(up-target-point 0 action-move -1 stance-defensive);-aggressive
	(enable-timer stance-timer 3))
(defrule
	(true)
=>
	(up-modify-sn sn-focus-player-number g:= temporary-goal7)); end jumps



(defrule
(or	(up-compare-const diff-fp <= 0)
(or	(up-compare-goal scouting-unit <= -1)
	(military-population <= 0)))
=>
	(up-jump-rule 16))
(defrule
	(true)
=>
	(up-modify-goal temporary-goal7 s:= sn-focus-player-number)
	(up-full-reset-search)
	(up-set-target-point position-self-x)
	(up-add-object-by-id search-local g: scouting-unit))
(defrule
(not	(up-set-target-object search-local c: 0))
=>
	(up-full-reset-search)
	(up-filter-distance c: 5 c: -1)
	(up-filter-include cmdid-military -1 orderid-explore on-mainland)
	(up-filter-exclude -1 actionid-attack orderid-attack warship-class)
	(up-find-local c: all-units-class c: 40)
	(up-remove-objects search-local object-data-hitpoints >= 42)
	(up-remove-objects search-local object-data-action == actionid-move)
	(up-remove-objects search-local object-data-tasks-count <= 0)
	(up-clean-search search-local object-data-speed search-order-desc)
	(up-remove-objects search-local object-data-index >= 1))
(defrule
(not	(up-set-target-object search-local c: 0))
	(unit-type-count scout-unit == 1)
=>
	(up-full-reset-search)
	(up-filter-distance c: 5 c: -1)
	(up-filter-include cmdid-military -1 orderid-attack on-mainland)
	(up-filter-exclude -1 actionid-move orderid-move warship-class)
	(up-find-local c: scout-unit c: 40)
	(up-remove-objects search-local object-data-hitpoints >= 42)
	(up-remove-objects search-local object-data-tasks-count <= 0)
	(up-clean-search search-local object-data-speed search-order-desc)
	(up-remove-objects search-local object-data-index >= 1))
(defrule
	(up-set-target-object search-local c: 0)
=>
	(up-get-object-data object-data-speed temporary-goal4)
	(up-get-object-data object-data-id temporary-goal)
	(up-get-point position-object saved-point-x)
	(set-strategic-number sn-focus-player-number 1)
	(up-reset-filters)
	(up-set-target-point saved-point-x)
	(up-filter-distance c: -1 c: 8)
	(up-filter-include -1 actionid-attack orderid-attack on-mainland))
(defrule; end neg jump
	(up-set-target-object search-local c: 0)
(not	(players-stance focus-player ally))
	(player-in-game focus-player)
	(strategic-number sn-focus-player-number != my-player-number)
=>
	(up-find-remote c: all-units-class c: 40)
	(up-remove-objects search-remote object-data-target-id g:!= temporary-goal)
	(up-remove-objects search-remote object-data-speed g:> temporary-goal4))
(defrule
	(up-set-target-object search-local c: 0)
	(strategic-number sn-focus-player-number < max-players)
(not	(up-set-target-object search-remote c: 0))
=>
	(up-modify-sn sn-focus-player-number c:+ 1)
	(up-jump-rule -2))
(defrule
	(up-set-target-object search-local c: 0)
	(up-set-target-object search-remote c: 0)
=>
;	(chat-local-to-self "Sending scout home.")
	(up-get-point-distance saved-point-x position-self-x temporary-goal)
	(up-modify-goal temporary-goal c:- 1)
	(up-modify-goal temporary-goal c:min 12)
	(up-modify-goal temporary-goal c:max 1)
	(up-lerp-tiles saved-point-x position-self-x g: temporary-goal)
	(up-set-target-point saved-point-x)
	(up-target-point 0 action-move -1 stance-no-attack)
;	(up-modify-sn sn-focus-player-number g:= temporary-goal7)
;	(up-jump-rule 8); don't jump last
)
(defrule
	(true)
=>
	(up-full-reset-search)
	(up-filter-include cmdid-military -1 orderid-explore on-mainland)
	(up-filter-exclude -1 actionid-attack orderid-attack warship-class)
	(up-find-local c: all-units-class c: 40)
	(up-remove-objects search-local object-data-hitpoints < 12)
	(up-clean-search search-local object-data-base-attack search-order-desc)
	(up-remove-objects search-local object-data-index >= 1))
(defrule
	(up-set-target-object search-local c: 0)
=>
	(up-get-point position-object saved-point-x)
	(up-get-object-data object-data-hitpoints temporary-goal2)
	(up-get-object-data object-data-range temporary-goal3)
	(up-get-object-data object-data-strike-armor temporary-goal4)
	(up-get-object-data object-data-base-attack temporary-goal)
	(up-modify-goal temporary-goal c:* 3); 2
	(up-modify-goal temporary-goal2 g:+ temporary-goal3)
	(up-modify-goal temporary-goal2 g:+ temporary-goal4)
	(up-modify-goal temporary-goal g:min temporary-goal2)
	(set-goal temporary-goal3 0)
	(set-strategic-number sn-focus-player-number 1)
	(up-reset-filters)
	(up-set-target-point saved-point-x)
	(up-filter-distance c: -1 c: 8)
	(up-filter-include -1 -1 -1 on-mainland))
(defrule; end neg jump
	(up-set-target-object search-local c: 0)
(not	(players-stance focus-player ally))
	(player-in-game focus-player)
	(strategic-number sn-focus-player-number != my-player-number)
=>
	(up-find-remote c: villager-class c: 40)
	(up-remove-objects search-remote object-data-hitpoints g:> temporary-goal))
(defrule
	(up-set-target-object search-local c: 0)
	(strategic-number sn-focus-player-number < max-players)
=>
	(up-modify-sn sn-focus-player-number c:+ 1)
	(up-jump-rule -2))
(defrule
	(up-set-target-object search-local c: 0)
	(up-set-target-object search-remote c: 0)
=>
	(up-set-target-point saved-point-x)
	(up-clean-search search-remote object-data-distance search-order-asc)
	(up-set-target-object search-remote c: 0)
	(up-get-object-data object-data-id temporary-goal2)
	(up-get-point position-object object-point-x)
	(up-reset-search 0 0 1 1)
	(up-reset-filters)
	(set-strategic-number sn-focus-player-number 1)
	(up-set-target-point object-point-x)
	(up-filter-distance c: -1 c: 13)
	(set-goal temporary-goal3 211293))
(defrule
	(goal temporary-goal3 211293)
(not	(players-stance focus-player ally))
	(player-in-game focus-player)
	(strategic-number sn-focus-player-number != my-player-number)
=>
	(up-find-remote c: castle c: 1)
	(up-find-remote c: krepost c: 1)
	(up-find-remote c: bombard-tower c: 1)
	(up-find-remote c: watch-tower c: 1)
	(up-find-remote c: town-center c: 1)
	(up-filter-include cmdid-military -1 -1 on-mainland)
	(up-find-remote c: all-units-class c: 1))
(defrule
	(goal temporary-goal3 211293)
	(strategic-number sn-focus-player-number < max-players)
(not	(up-set-target-object search-remote c: 0))
=>
	(up-modify-sn sn-focus-player-number c:+ 1)
	(up-jump-rule -2))
(defrule
	(goal temporary-goal3 211293)
(not	(up-set-target-object search-remote c: 0))
=>
;	(up-chat-data-to-self "Targeting low hp villager (%d)" g: temporary-goal)
	(up-reset-search 0 0 1 1)
	(up-set-target-by-id g: temporary-goal2)
	(up-target-objects 1 action-default -1 -1))
(defrule
	(true)
=>
	(up-modify-sn sn-focus-player-number g:= temporary-goal7)); end jumps


(defrule
(or	(up-compare-const diff-fp != 1)
(or	(unit-type-count villager <= 0)
;(or	(goal patroldefense yes)
(or	(military-population >= 25)
(or	(up-enemy-units-in-town >= 25)
	(players-military-population every-enemy <= 1)))));)
=>
	(up-jump-rule 14))
(defrule
(not	(player-in-game any-ally))
	(military-population <= 1)
	(strategic-number sn-military-superiority <= -1)
	(strategic-number target-civilian-superiority <= -1)
=>
	(up-jump-rule 13))
(defrule
	(building-type-count town-center <= 0)
	(building-type-count castle <= 0)
	(building-type-count krepost <= 0)
	(building-type-count bombard-tower <= 0)
	(building-type-count watch-tower <= 0)
=>
	(up-jump-rule 12))
(defrule
	(true)
=>
	(set-goal temporary-goal5 28)
	(up-modify-goal temporary-goal7 s:= sn-focus-player-number)
	(set-strategic-number sn-focus-player-number 1)
	(set-goal temporary-goal8 0)
	(up-full-reset-search)
	(up-set-target-point position-self-x)
	(up-modify-goal temporary-goal s:= sn-maximum-town-size)
	(up-modify-goal temporary-goal c:max 32)
	(up-modify-goal temporary-goal c:min 38)
	(up-filter-distance c: -1 g: temporary-goal); 4 x
	(up-filter-include cmdid-military -1 -1 on-mainland)
	(up-filter-exclude -1 -1 -1 warship-class))
(defrule
(or	(up-research-status c: ri-loom <= research-pending)
	(up-research-status c: ri-wheel-barrow <= research-pending))
=>
	(up-modify-goal temporary-goal5 c:min 20))
(defrule; end neg jumps
(not	(players-stance focus-player ally))
	(player-in-game focus-player)
	(strategic-number sn-focus-player-number != my-player-number)
=>
	(up-find-remote c: all-units-class c: 40))
(defrule
	(strategic-number sn-focus-player-number < max-players)
(not	(up-set-target-object search-remote c: 0))
=>
	(up-modify-sn sn-focus-player-number c:+ 1)
	(up-jump-rule -2))
(defrule
	(up-set-target-object search-remote c: 0)
=>
	(up-clean-search search-remote object-data-distance search-order-asc)
	(up-set-target-object search-remote c: 0)
	(up-get-point position-object object-point-x)
	(up-get-object-data object-data-range temporary-goal2)
	(up-get-object-data object-data-speed temporary-goal3)
	(up-modify-goal temporary-goal2 c:* 125); 100
	(up-modify-goal temporary-goal2 g:+ temporary-goal3)
	(up-modify-goal temporary-goal2 c:/ 100)
;	(up-chat-data-to-self "Run from (%d) tiles distance." g: temporary-goal2)
	(up-modify-goal temporary-goal2 c:max 1)
	(up-modify-goal temporary-goal2 c:+ 1)
	(up-modify-goal temporary-goal2 c:min 9)
	(up-set-target-point object-point-x)
	(up-full-reset-search)
	(up-filter-distance c: -1 c: 7); 6
	(set-goal temporary-goal8 124190))
(defrule
	(goal temporary-goal8 124190)
=>
	(up-filter-include cmdid-military -1 -1 on-mainland)
	(up-filter-exclude -1 -1 -1 warship-class)
	(up-find-remote c: all-units-class c: 40)
	(up-get-search-state local-total)
	(up-modify-goal temporary-goal4 g:= remote-total)
	(up-set-target-object search-remote c: 0)
	(up-clean-search search-remote object-data-base-attack search-order-desc)
	(up-get-object-data object-data-base-attack temporary-goal6)
	(up-modify-goal temporary-goal5 g:/ temporary-goal6)
	(up-modify-goal temporary-goal5 c:max 4)
	(up-modify-goal temporary-goal5 c:min 7)
	(up-full-reset-search)
	(up-filter-distance c: -1 g: temporary-goal2)
	(set-goal temporary-goal8 124191))
(defrule
	(goal temporary-goal8 124191)
	(up-compare-goal temporary-goal4 g:>= temporary-goal5)
=>
	(up-filter-include -1 -1 -1 on-mainland)
	(up-filter-exclude -1 actionid-attack orderid-attack -1);	(up-filter-exclude -1 actionid-move orderid-move -1)
	(up-find-local c: villager-class c: 40)
	(up-remove-objects search-local object-data-action == actionid-enter)
	(up-remove-objects search-local object-data-order == orderid-enter)
	(up-set-target-object search-local c: 0)
	(up-get-point position-object saved-point-x)
	(up-lerp-tiles saved-point-x position-self-x g: temporary-goal2)
	(up-lerp-tiles saved-point-x position-self-x g: temporary-goal2)
	(up-set-target-point saved-point-x)
	(up-filter-include cmdid-military -1 -1 on-mainland)
;	(up-filter-exclude -1 -1 -1 warship-class)
	(up-find-remote c: all-units-class c: 40)
	(set-goal temporary-goal8 124192)
	(up-reset-filters))
(defrule
	(goal temporary-goal8 124192)
(nor	(up-set-target-object search-remote c: 0)
	(up-set-target-object search-local c: 0))
	(strategic-number sn-focus-player-number < max-players)
=>
	(up-modify-sn sn-focus-player-number c:+ 1)
	(up-full-reset-search)
	(up-set-target-point position-self-x)
	(up-filter-distance c: 4 g: temporary-goal)
	(up-filter-include cmdid-military -1 -1 on-mainland)
	(up-filter-exclude -1 -1 -1 warship-class)
	(set-goal temporary-goal8 0)
	(up-jump-rule -6))
(defrule
	(goal temporary-goal8 124192)
(not	(up-set-target-object search-remote c: 0))
	(up-set-target-object search-local c: 0)
=>
	(set-strategic-number sn-focus-player-number my-player-number)
	(up-reset-search 0 0 1 1)
	(up-filter-garrison c: -1 c: 4)
	(up-find-remote c: watch-tower c: 20)
	(up-find-remote c: bombard-tower c: 20)
	(up-filter-garrison c: -1 c: 14)
	(up-find-remote c: town-center c: 20)
	(up-filter-garrison c: -1 c: 19)
	(up-find-remote c: krepost c: 20)
	(up-find-remote c: castle c: 20)
	(set-goal temporary-goal8 124193)
	(up-get-search-state local-total))
(defrule; todo
	(goal temporary-goal8 124193)
	(up-compare-goal remote-total >= 1)
	(up-set-target-object search-remote c: 0)
=>
	(up-get-object-data object-data-maxhp temporary-goal)
	(up-modify-goal temporary-goal c:%* 20)
	(up-remove-objects search-remote object-data-hitpoints g:< temporary-goal)
;	(up-chat-data-to-self "Removing objects with less than %d hitpoints." g: temporary-goal)
	(up-modify-goal remote-total c:- 1)
	(up-jump-rule -1))
(defrule
	(goal temporary-goal8 124193)
	(up-set-target-object search-remote c: 0)
	(up-set-target-object search-local c: 0)
=>
;	(up-chat-data-to-self "Scary damage, run from (%d) units." g: temporary-goal5)
;	(up-chat-data-to-self "Found (%d) units." g: temporary-goal4)
	(up-clean-search search-remote object-data-distance search-order-asc)
	(up-remove-objects search-remote object-data-index >= 1)
	(up-get-search-state local-total)
;	(up-chat-data-to-self "Moving %d villagers to safety." g: local-total)
	(up-target-objects 0 action-garrison -1 -1))
(defrule
	(true)
=>
	(up-modify-sn sn-focus-player-number g:= temporary-goal7)); end jumps



(defrule
(or	(up-compare-const diff-fp != 1)
(or	(unit-type-count villager <= 0)
;(or	(goal patroldefense yes)
(or	(military-population >= 31)
(or	(up-enemy-units-in-town >= 31)
	(players-military-population every-enemy <= 1)))));)
=>
	(up-jump-rule 13))
(defrule
	(building-type-count town-center <= 0)
	(building-type-count lumber-camp <= 0)
=>
	(up-jump-rule 12))
(defrule
	(true)
=>
	(up-modify-goal temporary-goal7 s:= sn-focus-player-number)
	(set-strategic-number sn-focus-player-number 1)
	(up-modify-goal temporary-goal s:= sn-maximum-town-size)
	(up-modify-goal temporary-goal c:max 32)
	(up-modify-goal temporary-goal c:min 38)
	(set-goal temporary-goal2 0)
	(set-goal temporary-goal3 0)
	(set-goal saved-point-x -1)
	(up-full-reset-search)
	(up-set-target-point position-self-x)
	(up-filter-distance c: 4 g: temporary-goal)
	(up-filter-include -1 actionid-enter orderid-enter on-mainland)
	(up-find-local c: villager-class g: villagercount)
	(up-remove-objects search-local object-data-gather-type != wood)
	(up-clean-search search-local object-data-distance search-order-asc))
(defrule
	(up-set-target-object search-local c: 0)
=>
	(set-goal temporary-goal4 0)
	(up-get-point position-object saved-point-x)
	(up-full-reset-search)
	(up-find-local c: town-center c: 40)
	(up-find-local c: lumber-camp c: 40)
	(up-remove-objects search-local -1 > 13);for peformance reasons, triggers threshold at 1000 with 40, 600 with 20 and 500 with 15
	;could we set this threshold dependent on system specs somehow?
)
(defrule
	(up-compare-goal saved-point-x <= -1)
=>
	(up-jump-rule 8))
(defrule; end neg jumps
	(up-set-target-object search-local g: temporary-goal3)
	(up-object-data object-data-type == town-center)
=>
	(up-modify-goal temporary-goal4 c:+ 1))
(defrule
	(up-set-target-object search-local g: temporary-goal3)
=>
	(up-get-point position-object temporary-point-x)
	(up-set-target-point temporary-point-x)
	(up-reset-search 0 0 1 1)
	(up-reset-filters)
	(up-modify-goal temporary-goal4 c:+ 4)
	(up-filter-distance c: -1 g: temporary-goal4)
	(up-filter-status c: status-ready c: list-active)
	(up-find-resource c: wood c: 12)
	(up-filter-status c: status-resource c: list-active)
	(up-find-resource c: wood c: 12)
	(up-remove-objects search-remote object-data-tasks-count >= 3)
	(up-get-search-state local-total)
	(up-modify-goal temporary-goal2 g:= remote-total))
(defrule
	(up-compare-goal remote-total < 2)
	(up-set-target-object search-local g: temporary-goal3)
	(up-compare-goal temporary-goal3 < 481);sanity check
=>
	(up-modify-goal temporary-goal3 c:+ 1)
	(up-jump-rule -2))
(defrule; end neg jumps
	(up-compare-goal remote-total >= 2)
	(strategic-number sn-focus-player-number != my-player-number)
(not	(stance-toward focus-player ally))
	(player-valid focus-player)
	(up-set-target-object search-local g: temporary-goal3)
=>
	(up-reset-filters)
	(up-filter-distance c: -1 c: 9)
	(up-find-remote c: all-units-class c: 2)
	(up-get-search-state local-total)
	(up-modify-goal temporary-goal5 g:= remote-last)
	(up-modify-goal temporary-goal5 c:- 1)
	(up-modify-goal temporary-goal5 c:max 0)
	(up-remove-objects search-remote object-data-class != tree-class); tbs
	(up-get-search-state local-total)
	(up-modify-goal remote-total g:+ temporary-goal5))
(defrule
	(up-compare-goal remote-total >= 2)
	(up-compare-goal temporary-goal2 g:== remote-total)
	(strategic-number sn-focus-player-number < max-players)
	(up-set-target-object search-local g: temporary-goal3)
=>
	(up-modify-sn sn-focus-player-number c:+ 1)
	(up-jump-rule -2))
(defrule
	(up-compare-goal remote-total >= 2)
	(up-compare-goal temporary-goal2 g:== remote-total)
	(up-point-distance temporary-point-x saved-point-x >= 6)
	(up-set-target-object search-local g: temporary-goal3)
=>
	(set-strategic-number sn-focus-player-number 1)
	(up-lerp-tiles temporary-point-x saved-point-x c: 6)
	(up-set-target-point temporary-point-x)
	(up-bound-point temporary-point-x temporary-point-x)
	(up-bound-point saved-point-x saved-point-x);sanity checks
	(up-jump-rule -3))
(defrule
	(up-compare-goal temporary-goal2 g:!= remote-total)
	(up-set-target-object search-local g: temporary-goal3)
	(up-compare-goal temporary-goal3 < 480);sanity check
=>
	(set-strategic-number sn-focus-player-number 1)
	(up-modify-goal temporary-goal3 c:+ 1)
	(set-goal temporary-goal4 0)
	(up-jump-rule -7))
(defrule
	(up-compare-goal remote-total >= 2)
	(up-compare-goal temporary-goal2 g:== remote-total)
	(up-set-target-object search-local g: temporary-goal3)
=>
	(up-set-target-point saved-point-x)
	(up-reset-search 1 1 0 0)
	(up-reset-filters)
	(up-filter-distance c: -1 c: 4)
	(up-filter-include -1 actionid-enter orderid-enter on-mainland)
	(up-find-local c: villager-class g: villagercount)
	(up-remove-objects search-local object-data-gather-type != wood)
	(up-get-search-state local-total)
;	(up-chat-data-to-self "Found trees for %d scared villagers." g: local-total)
	(up-target-objects 0 action-default -1 -1)); end jump
(defrule
	(true)
=>
	(up-modify-sn sn-focus-player-number g:= temporary-goal7)); end jumps


;(defrule
;(not	(map-type oasis))
;	(strategic-number sn-military-superiority <= 3)
;	(up-projectile-detected projectile-watch-tower < 125000)
;;	(up-projectile-detected projectile-watch-tower > 5000)
;	(up-projectile-detected projectile-town-center > 25000)
;	(goal attacking yes)
;	(players-building-type-count target-player watch-tower == 1)
;=>
;	(up-full-reset-search)
;	(up-find-remote c: watch-tower c: 1)
;	(up-set-target-object search-remote c: 0)
;	(up-get-point position-object enemytower-x)
;	(up-find-local c: town-center c: 1)
;	(up-set-target-object search-local c: 0)
;	(up-get-point position-object point-x)
;	(up-cross-tiles enemytower-x point-x c: 22))
;(defrule
;	(timer-triggered embassy)
;(not	(map-type oasis))
;	(strategic-number sn-military-superiority <= 3)
;	(up-projectile-detected projectile-watch-tower < 125000)
;	(up-projectile-detected projectile-watch-tower > 5000)
;	(up-projectile-detected projectile-town-center > 25000)
;	(goal attacking yes)
;	(up-compare-goal gl-threat-time > 3333)
;	(players-building-type-count target-player watch-tower == 1)
;=>
;	(up-find-local c: archery-class c: 240)
;	(up-set-target-point enemytower-x)
;	(up-target-point 0 action-move -1 stance-defensive);aggressive)
;	(chat-local-to-self "Trying to avoid the enemy tower while attacking."))
;==============================================================
(defrule
(or	(up-compare-goal drushmicro != no)
(or	(up-compare-goal attacking != yes)
(or	(up-compare-goal attackStart != yes)
(or	(up-timer-status resetnow2 == timer-running)
(or	(and	(strategic-number sn-maximum-town-size < 45)
	(up-enemy-units-in-town >= 6)
)
;(or	(and	(and	(up-compare-goal gl-threat-time < 10000)
;			(up-compare-goal gl-threat-time >= 0))
;		(or	(up-compare-goal gl-threat-target != scout-unit)
;			(unit-type-count scout-unit >= 2)))
	(players-building-count target-player <= 0))))))
=>
;	(chat-local-to-self "Testing.5")
	(up-jump-rule 3))
(defrule
(or	(up-compare-goal gatherinside != no)
(or	(up-compare-goal underattack != no)
(or	(up-timer-status patrol-timer != timer-disabled)
;(or	(up-timer-status retreat-timer == timer-running)
(or	(up-timer-status resetnow == timer-running)
(or	(up-compare-goal patroldefense != no)
(or	(up-compare-goal patrolhelp != no)
	(up-timer-status unit-control-flare-timer2 != timer-disabled)))))));)
=>
;	(chat-local-to-self "Testing.4")
	(up-jump-rule 2))
(defrule
	(players-unit-type-count every-enemy siege-onager <= 0)
	(players-unit-type-count every-enemy onager <= 1)
	(players-unit-type-count every-enemy mangonel-line <= 2)
	(players-unit-type-count every-enemy heavy-scorpion <= 3)
;;;;	(players-unit-type-count every-enemy scorpion-line <= 4)
=>
	(up-get-point position-target temporary-point-x)
	(set-goal temporary-goal8 513228))
(defrule
	(goal temporary-goal8 513228)
	(up-compare-goal temporary-point-x >= 1)
	(up-compare-goal temporary-point-y >= 1)
	(up-compare-goal temporary-point-x g:< map-size)
	(up-compare-goal temporary-point-y g:< map-size)
=>
;	(chat-to-all "ST_")
	(chat-to-player my-player-number "ST_");	(chat-local-to-self "Testing.")
;	(up-reset-unit c: -1)
	(up-full-reset-search)
	(up-set-target-point temporary-point-x)
	(up-filter-distance c: 8 c: -1)
	(up-filter-include cmdid-military -1 -1 -1)
	(up-filter-exclude -1 actionid-explore orderid-explore -1)
	(up-find-local c: all-units-class c: 240)
;	(up-copy-point point-x position-self-x)
;	(up-lerp-tiles point-x temporary-point-x c: 6)
;	(up-set-target-point point-x)
;	(up-target-point 0 action-move -1 stance-aggressive)
	(up-target-point 0 action-patrol -1 stance-defensive)
	(enable-timer stance-timer 67); 50
	(enable-timer resetnow2 67)); end mini jump

(defrule
	(up-timer-status resetnow == timer-disabled)
	(up-timer-status resetnow2 != timer-disabled)
(or	(up-projectile-detected projectile-any < 3000)
	(and	(up-compare-goal gl-threat-time < 3000)
		(and	(up-compare-goal gl-threat-time >= 0)
			(or	(up-compare-goal gl-threat-target != scout-unit)
				(unit-type-count scout-unit >= 2)))))
	(up-compare-goal gl-threat-source != dangerous-animal-class)
=>
;	(chat-to-all "SlrS_")
	(chat-to-player my-player-number "SlrS_");	(chat-local-to-self "Testing.2")
;	(set-goal drushmicro no)
	(enable-timer resetnow 0)
;	(disable-timer resetnow2)
	(enable-timer stance-timer 0))

;(defrule
;	(taunt-detected any-enemy 18)
;	(up-compare-goal drushmicro != no)
;=>
;;	(chat-to-all "SlrS_3")
;	(set-goal drushmicro no))
;==============================================================
;#load-if-not-defined UP-SCENARIO-GAME
(defrule
(or	(and	(up-compare-goal gl-threat-time >= 12000); 8000
		(goal attacking yes))
(or	(up-compare-goal gl-threat-time <= -1)
(or	(up-compare-goal patroldefense != no)
(or	(up-compare-goal patrolhelp != no)
(or	(up-timer-status patrol-timer != timer-disabled)
(or	(up-timer-status unit-control-flare-timer2 != timer-disabled)
	(military-population <= 1)))))))
=>
	(up-jump-rule 17))
(defrule
(or	(up-compare-const diff-fp <= 0)
;(or	(up-compare-goal armytech g:> enemyState)
;(or	(up-compare-goal gl-threat-target == villager-class)
;(or	(up-compare-goal gl-threat-source == dangerous-animal-class)
;(or	(up-timer-status retreat-timer == timer-running)
;(or	(up-timer-status resetnow == timer-running)
	(population >= del-civ-pop));)))))
=>
	(up-jump-rule 16))
(defrule
(or	(players-military-population every-enemy <= 1)
(or	(goal underattack yes)
(or	(up-compare-goal armytech >= imperial); castlea
	(and	(strategic-number sn-current-age >= imperial)
		(or	(goal attacking yes)
			(population >= max-civ-pop))))))
=>
	(up-jump-rule 15))
(defrule
	(true)
=>
	(up-full-reset-search)
	(up-set-target-point position-self-x)
	(up-modify-goal temporary-goal10 s:= sn-safe-town-size)
	(up-modify-goal temporary-goal10 c:- 4)
	(up-modify-goal temporary-goal10 c:max 16)
	(up-filter-distance g: temporary-goal10 c: -1)
	(up-filter-include cmdid-military -1 -1 on-mainland)
	(up-filter-exclude -1 actionid-explore orderid-explore warship-class)
	(up-find-local c: all-units-class c: 240)
	(up-remove-objects search-local object-data-group-flag >= 0)
	(up-remove-objects search-local object-data-under-attack <= 0)
	(up-remove-objects search-local object-data-action == actionid-move)
	(up-remove-objects search-local object-data-order == orderid-move)
	(up-clean-search search-local object-data-speed search-order-desc)
	(up-modify-goal temporary-goal7 s:= sn-focus-player-number))
(defrule
	(true)
=>
	(set-goal temporary-point-x 4))
(defrule
(or	(up-compare-goal armytech g:> enemyState)
(or	(goal assistance yes);
(or	(and	(unit-type-count cavalry-class >= 1)
		(or	(unit-type-count scout-cavalry-class <= 0)
			(strategic-number skirms >= 8)))
	(unit-type-count cavalry-class >= 2))))
=>
	(up-modify-goal temporary-point-x g:max 3))
(defrule
(not	(up-set-target-object search-local c: 0))
=>
	(up-reset-search 1 1 1 1)
	(up-find-local c: all-units-class c: 240)
	(up-remove-objects search-local object-data-group-flag >= 0)
	(up-remove-objects search-local object-data-action == actionid-move)
	(up-remove-objects search-local object-data-order == orderid-move)
	(up-clean-search search-local object-data-speed search-order-desc))
(defrule
	(up-set-target-object search-local c: 0)
=>
	(set-strategic-number sn-focus-player-number 1)
	(up-get-object-data object-data-speed temporary-goal)
	(up-clean-search search-local object-data-distance search-order-desc)
	(up-set-target-object search-local c: 0)
	(up-get-point position-object saved-point-x)
	(up-clean-search search-local object-data-precise-z search-order-asc)
	(up-set-target-object search-local c: 0)
	(up-get-object-data object-data-precise-z temporary-goal4)
	(up-get-point-distance position-self-x saved-point-x temporary-goal8)
	(up-modify-goal temporary-goal8 c:min 50);
	(up-modify-goal temporary-goal8 c:max 0);
	(up-modify-goal temporary-goal c:+ 50);
	(up-modify-goal temporary-goal g:- temporary-goal8);
	(up-set-target-point saved-point-x)
	(up-filter-distance c: -1 c: 14))
(defrule; end neg jump
	(up-set-target-object search-local c: 0)
(not	(stance-toward focus-player ally))
	(player-in-game focus-player)
(nand	(strategic-number sn-target-player-number s:== sn-focus-player-number)
	(up-compare-goal armytech g:> enemyState))
	(strategic-number sn-focus-player-number != my-player-number)
=>
	(up-find-remote c: all-units-class c: 40))
(defrule
	(strategic-number sn-focus-player-number < max-players)
	(up-set-target-object search-local c: 0)
=>
	(up-modify-sn sn-focus-player-number c:+ 1)
	(up-jump-rule -2))
(defrule
	(up-set-target-object search-local c: 0)
	(up-set-target-object search-remote c: 0)
=>
	(up-clean-search search-remote object-data-speed search-order-desc)
	(up-set-target-object search-remote c: 0)
	(up-get-object-data object-data-speed temporary-goal2)
	(up-get-point position-object object-point-x)
	(up-clean-search search-remote object-data-precise-z search-order-desc)
	(up-set-target-object search-remote c: 0)
	(up-get-object-data object-data-precise-z temporary-goal3)
	(up-remove-objects search-remote object-data-pierce-armor > 100)
	(up-get-search-state local-total)
	(up-modify-goal temporary-goal5 g:= remote-total)
;	(up-chat-data-to-all "Enemy forces: %d" g: temporary-goal5)
	(up-modify-goal temporary-goal5 g:* temporary-point-x)
	(up-modify-goal temporary-goal5 c:/ 5))
(defrule
	(up-compare-goal temporary-goal3 g:>= temporary-goal4)
	(up-compare-goal temporary-goal g:>= temporary-goal2)
	(up-set-target-object search-local c: 0)
	(up-set-target-object search-remote c: 0)
=>
	(up-modify-goal temporary-goal6 s:= sn-enemy-sighted-response-distance)
	(up-modify-goal temporary-goal6 c:min 21)
	(up-modify-goal temporary-goal6 c:max 14)
	(up-full-reset-search)
	(up-set-target-point saved-point-x)
	(up-filter-distance c: -1 g: temporary-goal6)
	(up-filter-include cmdid-military -1 -1 on-mainland)
	(up-filter-exclude -1 actionid-explore orderid-explore warship-class)
	(set-strategic-number sn-focus-player-number 1)
	(set-goal temporary-goal3 128183))
(defrule; end neg jump
	(stance-toward focus-player ally)
	(player-in-game focus-player)
	(goal temporary-goal3 128183)
=>
	(up-find-remote c: all-units-class c: 40))
(defrule
	(strategic-number sn-focus-player-number < max-players)
	(goal temporary-goal3 128183)
=>
	(up-modify-sn sn-focus-player-number c:+ 1)
	(up-jump-rule -2))
(defrule
	(goal temporary-goal3 128183)
=>
	(up-modify-sn sn-focus-player-number g:= temporary-goal7)
	(up-get-search-state local-total)
;	(up-chat-data-to-all "Our forces: %d" g: remote-total)
	(up-modify-goal temporary-goal9 s:= sn-military-superiority)
	(up-modify-goal temporary-goal9 s:max teamsuperiority)
	(up-modify-goal temporary-goal9 c:max 0)
	(up-modify-goal remote-total g:+ temporary-goal9))
(defrule
	(up-compare-goal remote-total g:< temporary-goal5)
	(goal temporary-goal3 128183)
=>
	(up-full-reset-search)
	(up-set-group search-local c: 9)
	(up-set-target-point saved-point-x)
	(up-filter-distance c: -1 g: temporary-goal6)
	(up-filter-include cmdid-military -1 -1 on-mainland)
	(up-filter-exclude -1 actionid-explore orderid-explore warship-class)
	(up-find-local c: all-units-class c: 240)
	(up-remove-objects search-local object-data-class == siege-weapon-class)
;	(up-remove-objects search-local object-data-class == scorpion-class)
	(up-set-target-point position-self-x)
;	(up-remove-objects search-local object-data-group-flag >= 0)
	(up-remove-objects search-local object-data-attack-stance == stance-no-attack)
	(up-remove-objects search-local object-data-distance g:< temporary-goal10)
;	(enable-timer retreat-timer 9)
;	(enable-timer resetnow 8)
;	(set-goal retreat no)
	(set-goal temporary-goal3 128184))
(defrule
	(goal temporary-goal3 128184)
	(up-set-target-object search-local c: 0)
=>
	(chat-local-to-self "Avoid fighting while outnumbered.")
	(up-target-point 0 action-move -1 stance-no-attack)
	(up-modify-group-flag 0 c: 9)
	(up-reset-group c: 9)
	(up-create-group 0 0 c: 9)
	(up-modify-group-flag 1 c: 9)
	(enable-timer group9 11)); 10
(defrule
	(true)
=>
	(up-modify-sn sn-focus-player-number g:= temporary-goal7)); end jump
;==============================================================
#load-if-defined COMMENT-OUT ;sometimes causes more negative effects than positive ones
(defrule
(or	(up-compare-goal gl-threat-time >= 8000)
(or	(up-compare-goal gl-threat-time <= -1)
(or	(up-compare-goal patroldefense != no)
(or	(up-compare-goal patrolhelp != no)
(or	(up-timer-status patrol-timer != timer-disabled)
(or	(up-timer-status unit-control-flare-timer2 != timer-disabled)
	(military-population <= 1)))))))
=>
	(up-jump-rule 5))
(defrule
(or	(up-compare-const diff-fp <= 0)
(or	(up-compare-goal attacking != no)
(or	(up-compare-goal gl-threat-target == villager-class)
(or	(up-compare-goal gl-threat-source == dangerous-animal-class)
(or	(up-timer-status retreat-timer == timer-running)
	(up-timer-status resetnow == timer-running))))))
=>
	(up-jump-rule 4))
(defrule
	(up-compare-goal gl-threat-time >= 6000); 4500
(or	(up-compare-goal drushmicro == no)
	(military-population >= 7))
	(strategic-number sn-military-superiority <= -1)
	(goal retreat yes)
	(players-current-age focus-player <= castle-age); feudal;
	(strategic-number sn-current-age < imperial);
=>
	(up-modify-goal temporary-goal s:= sn-maximum-town-size)
	(up-modify-goal temporary-goal s:+ sn-current-age);
	(up-modify-goal temporary-goal c:max 6)
	(up-modify-goal temporary-goal c:min 32); 12; hmm
	(set-goal temporary-goal8 76543)
	(set-goal temporary-goal3 -1))
(defrule
	(up-compare-goal temporary-goal8 != 76543)
	(goal underattack no)
	(players-current-age focus-player <= castle-age); feudal
	(strategic-number sn-current-age < imperial)
(or	(up-compare-goal drushmicro == no)
	(military-population >= 7))
	(strategic-number sn-military-superiority <= -1)
	(unit-type-count infantry-class < 1)
	(unit-type-count heavy-eagle-warrior < 1)
	(unit-type-count-total kamayuk < 1)
	(unit-type-count-total shotel-warrior < 1)
	(unit-type-count-total gbeto < 1)
; tl	(unit-type-count-total karambit-warrior < 1)
	(unit-type-count-total condottiero < 1)
	(goal retreat yes)
=>
	(set-goal temporary-goal8 76542))
(defrule
	(goal temporary-goal8 76542)
(or	(goal assistance no)
	(strategic-number sn-military-superiority <= -1)); -2
=>
	(up-modify-goal temporary-goal s:= sn-maximum-town-size)
	(up-modify-goal temporary-goal s:+ sn-current-age);
	(up-modify-goal temporary-goal c:max 10)
	(up-modify-goal temporary-goal c:min 40); 16; 12; hmm
	(set-goal temporary-goal8 76543)
	(up-modify-goal temporary-goal3 g:= temporary-goal)
	(up-modify-goal temporary-goal3 c:* 2)
	(up-modify-goal temporary-goal3 c:max 40))
;test	(disable-self))
(defrule
	(goal temporary-goal8 76543)
=>
	(up-full-reset-search)
	(up-set-target-point position-self-x)
	(up-filter-distance g: temporary-goal g: temporary-goal3)
	(up-filter-include cmdid-military -1 -1 on-mainland) ;
	(up-filter-exclude -1 actionid-explore orderid-explore warship-class)
	(up-find-local c: all-units-class c: 240)
	(up-remove-objects search-local object-data-action == actionid-attack);
	(up-remove-objects search-local object-data-order == orderid-attack);
	(up-remove-objects search-local object-data-group-flag >= 0)
	(up-get-search-state local-total)); end jump
(defrule
;(or	(goal temporary-goal8 76542)
	(goal temporary-goal8 76543);)
	(up-compare-goal local-total >= 1)
=>
	(up-full-reset-search)
	(up-set-target-point position-self-x)
	(up-modify-goal temporary-goal c:- 6)
	(up-modify-goal temporary-goal c:max 8)
	(up-filter-distance g: temporary-goal g: temporary-goal3)
	(up-filter-include cmdid-military -1 -1 on-mainland) ;
	(up-filter-exclude -1 actionid-explore orderid-explore warship-class)
	(up-find-local c: all-units-class c: 240)
	(up-remove-objects search-local object-data-group-flag >= 0)
	(chat-local-to-self "Trying not to get lured out of town.")
;	(up-send-flare position-self-x)
;	(up-chat-data-to-all "temporary-goal: %d" g: temporary-goal)
	(up-target-point 0 action-move -1 stance-no-attack)
	(enable-timer retreat-timer 13); 10
	(enable-timer resetnow 12); 9
	(set-goal retreat no)); end jumps
#end-if
;#load-if-defined COMMENT-OUT
;Attempt 2 - try retreating more often and to a point that is away from the tc
#load-if-defined COMMENT-OUT
(defrule
(or	(up-compare-goal gl-threat-time >= 8000)
(or	(up-compare-goal gl-threat-time <= -1)
(or	(up-compare-goal patroldefense != no)
(or	(up-compare-goal patrolhelp != no)
(or	(up-timer-status patrol-timer != timer-disabled)
(or	(up-timer-status unit-control-flare-timer2 != timer-disabled)
	(military-population <= 1)))))))
=>
	(up-jump-rule 6));was 5
(defrule
(or	(up-compare-const diff-fp <= 0)
(or	(up-compare-goal attacking != no)
(or	(up-compare-goal gl-threat-target == villager-class)
(or	(up-compare-goal gl-threat-source == dangerous-animal-class)
(or	(up-timer-status retreat-timer == timer-running)
	(up-timer-status resetnow == timer-running))))))
=>
	(up-jump-rule 5));was 4
(defrule
	(up-compare-goal temporary-goal8 != 76543)
	(goal underattack no)
	(players-current-age focus-player <= castle-age); feudal
	(strategic-number sn-current-age < imperial)
(or	(up-compare-goal drushmicro == no)
	(military-population >= 7))
	(strategic-number sn-military-superiority <= -1)
	(unit-type-count infantry-class < 1)
	(unit-type-count heavy-eagle-warrior < 1)
	(unit-type-count-total kamayuk < 1)
	(unit-type-count-total shotel-warrior < 1)
	(unit-type-count-total gbeto < 1)
; tl	(unit-type-count-total karambit-warrior < 1)
	(unit-type-count-total condottiero < 1)
	(goal retreat yes)
=>
	(set-goal temporary-goal8 76542))
(defrule
	(goal temporary-goal8 76542)
(or	(goal assistance no)
	(strategic-number sn-military-superiority <= -1)); -2
=>
	(up-modify-goal temporary-goal s:= sn-maximum-town-size)
	(up-modify-goal temporary-goal s:+ sn-current-age);
	(up-modify-goal temporary-goal c:max 10)
	(up-modify-goal temporary-goal c:min 40); 16; 12; hmm
	(set-goal temporary-goal8 76543)
	(up-modify-goal temporary-goal3 g:= temporary-goal)
	(up-modify-goal temporary-goal3 c:* 2)
	(up-modify-goal temporary-goal3 c:max 40))
;test	(disable-self))
(defrule
	(goal temporary-goal8 76543)
=>
	(up-full-reset-search)
	(up-set-target-point position-self-x)
	(up-filter-distance g: temporary-goal g: temporary-goal3)
	(up-filter-include cmdid-military -1 -1 on-mainland) ;
	(up-filter-exclude -1 actionid-explore orderid-explore warship-class)
	(up-find-local c: all-units-class c: 240)
	(up-remove-objects search-local object-data-action == actionid-attack);
	(up-remove-objects search-local object-data-order == orderid-attack);
	(up-remove-objects search-local object-data-group-flag >= 0)
	(up-get-search-state local-total)); end jump
	
	(defrule
;(or	(goal temporary-goal8 76542)
	(goal temporary-goal8 76543);)
	(up-compare-goal local-total >= 1)
=>
	(up-reset-filters)
	(up-filter-distance c: 5 c: 30)
	(up-find-remote c: all-units-class c: 40)
	(up-clean-search search-remote -1 search-order-asc)
	(up-clean-search search-remote object-data-distance search-order-asc)
	(up-set-target-object search-remote c: 0)
	(up-get-point position-object point-x)
	(up-get-point-distance position-self-x point-x temporary-goal10)
	(up-get-point position-center point2-x)
	(up-copy-point point3-x position-self-x)
	(up-modify-goal temporary-goal10 c:* -8)
	(up-modify-goal temporary-goal10 c:/ 10)
	(up-lerp-tiles point3-x point-x g: temporary-goal10)
	(up-lerp-tiles point3-x point2-x c: -1)
)
(defrule
;(or	(goal temporary-goal8 76542)
	(goal temporary-goal8 76543);)
	(up-compare-goal local-total >= 1)
=>
	(up-full-reset-search)
	(up-set-target-point position-self-x)
	(up-modify-goal temporary-goal c:- 6)
	(up-modify-goal temporary-goal c:max 8)
	(up-filter-distance g: temporary-goal g: temporary-goal3)
	(up-filter-include cmdid-military -1 -1 on-mainland) ;
	(up-filter-exclude -1 actionid-explore orderid-explore warship-class)
	(up-find-local c: all-units-class c: 240)
	(up-remove-objects search-local object-data-group-flag >= 0)
	(chat-local-to-self "Trying not to get lured out of town.")
;	(up-send-flare point3-x)
;	(up-chat-data-to-all "temporary-goal: %d" g: temporary-goal)
	(up-target-point point3-x action-move -1 stance-no-attack)
	(enable-timer retreat-timer 8); 10
	(enable-timer resetnow 7); 9
;	(enable-timer 49 50)
	(set-goal retreat no)); end jumps
#end-if
;==============================================================
(defrule
(or	(and	(up-compare-goal gl-threat-time >= 12000); 8000
		(goal attacking yes))
(or	(up-compare-goal gl-threat-time <= -1)
(or	(up-compare-goal patroldefense != no)
(or	(up-compare-goal patrolhelp != no)
(or	(up-timer-status patrol-timer != timer-disabled)
(or	(up-timer-status unit-control-flare-timer2 != timer-disabled)
	(military-population <= 1)))))))
=>
	(up-jump-rule 16))
(defrule
(or	(up-compare-const diff-fp <= 0)
(or	(unit-type-count mangonel-line >= 1)
(or	(strategic-number sn-military-superiority >= 3)
(or	(and	(strategic-number sn-military-superiority >= 2)
		(strategic-number teamsuperiority >= 2))
	(population >= del-civ-pop)))))
=>
	(up-jump-rule 15))
(defrule
(or	(players-military-population every-enemy <= 1)
(or	(goal underattack yes)
(or	(up-compare-goal armytech >= imperial); castlea
	(and	(strategic-number sn-current-age >= imperial)
		(or	(goal assistance yes)
			(or	(goal attacking yes)
				(population >= max-civ-pop)))))))
=>
	(up-jump-rule 14))
(defrule
	(true)
=>
	(up-full-reset-search)
	(up-set-target-point position-self-x)
	(up-modify-goal temporary-goal10 s:= sn-safe-town-size)
	(up-modify-goal temporary-goal10 c:- 4)
	(up-modify-goal temporary-goal10 c:max 16)
	(up-filter-distance g: temporary-goal10 c: -1)
	(up-filter-include cmdid-military -1 -1 on-mainland)
	(up-filter-exclude -1 actionid-explore orderid-explore warship-class)
	(up-find-local c: all-units-class c: 240)
	(up-remove-objects search-local object-data-group-flag >= 0)
	(up-remove-objects search-local object-data-under-attack <= 0)
	(up-remove-objects search-local object-data-action == actionid-move)
	(up-remove-objects search-local object-data-order == orderid-move)
	(up-clean-search search-local object-data-speed search-order-desc)
	(up-modify-goal temporary-goal7 s:= sn-focus-player-number))
(defrule
(not	(up-set-target-object search-local c: 0))
=>
	(up-reset-search 1 1 1 1)
	(up-find-local c: all-units-class c: 240)
	(up-remove-objects search-local object-data-group-flag >= 0)
	(up-remove-objects search-local object-data-action == actionid-move)
	(up-remove-objects search-local object-data-order == orderid-move)
	(up-clean-search search-local object-data-speed search-order-desc))
(defrule
	(up-set-target-object search-local c: 0)
=>
	(set-strategic-number sn-focus-player-number 1)
	(up-get-object-data object-data-speed temporary-goal)
	(up-clean-search search-local object-data-distance search-order-desc)
	(up-set-target-object search-local c: 0)
	(up-get-point position-object saved-point-x)
	(up-clean-search search-local object-data-precise-z search-order-desc)
	(up-set-target-object search-local c: 0)
	(up-get-object-data object-data-precise-z temporary-goal4)
	(up-get-point-distance position-self-x saved-point-x temporary-goal8)
	(up-modify-goal temporary-goal8 c:min 50);
	(up-modify-goal temporary-goal8 c:max 0);
	(up-modify-goal temporary-goal c:+ 50);
	(up-modify-goal temporary-goal g:- temporary-goal8);
	(up-set-target-point saved-point-x)
	(up-filter-distance c: -1 c: 14))
(defrule; end neg jump
	(up-set-target-object search-local c: 0)
(not	(stance-toward focus-player ally))
	(player-in-game focus-player)
(nand	(strategic-number sn-target-player-number s:== sn-focus-player-number)
	(up-compare-goal armytech g:> enemyState))
	(strategic-number sn-focus-player-number != my-player-number)
=>
	(up-find-remote c: all-units-class c: 40))
(defrule
	(strategic-number sn-focus-player-number < max-players)
	(up-set-target-object search-local c: 0)
=>
	(up-modify-sn sn-focus-player-number c:+ 1)
	(up-jump-rule -2))
(defrule
	(up-set-target-object search-local c: 0)
	(up-set-target-object search-remote c: 0)
=>
	(up-clean-search search-local object-data-range search-order-asc)
	(up-set-target-object search-local c: 0)
	(up-get-object-data object-data-range temporary-point-x)
	(up-clean-search search-remote object-data-range search-order-desc)
	(up-set-target-object search-remote c: 0)
	(up-get-object-data object-data-range temporary-point-y)
	(up-modify-goal temporary-point-y g:- temporary-point-x)
	(up-modify-goal temporary-point-y c:max -1)
	(up-modify-goal temporary-point-y c:min 0)
	(set-goal temporary-point-x 4)
	(up-modify-goal temporary-point-x g:+ temporary-point-y))
(defrule
	(up-set-target-object search-local c: 0)
	(up-set-target-object search-remote c: 0)
=>
	(up-clean-search search-remote object-data-speed search-order-desc)
	(up-set-target-object search-remote c: 0)
	(up-get-object-data object-data-speed temporary-goal2)
	(up-get-point position-object object-point-x)
	(up-clean-search search-remote object-data-precise-z search-order-asc)
	(up-set-target-object search-remote c: 0)
	(up-get-object-data object-data-precise-z temporary-goal3)
	(up-get-search-state local-total)
	(up-modify-goal temporary-goal5 g:= remote-total)
;	(up-chat-data-to-all "Enemy forces: %d" g: temporary-goal5)
	(up-modify-goal temporary-goal5 g:* temporary-point-x)
	(up-modify-goal temporary-goal5 c:/ 3))
(defrule
	(up-compare-goal temporary-goal3 g:> temporary-goal4)
	(up-compare-goal temporary-goal g:>= temporary-goal2)
	(up-set-target-object search-local c: 0)
	(up-set-target-object search-remote c: 0)
=>
	(up-modify-goal temporary-goal6 s:= sn-enemy-sighted-response-distance)
	(up-modify-goal temporary-goal6 c:min 21)
	(up-modify-goal temporary-goal6 c:max 14)
	(up-full-reset-search)
	(up-set-target-point saved-point-x)
	(up-filter-distance c: -1 g: temporary-goal6)
	(up-filter-include cmdid-military -1 -1 on-mainland)
	(up-filter-exclude -1 actionid-explore orderid-explore warship-class)
	(set-strategic-number sn-focus-player-number 1)
	(set-goal temporary-goal3 128183))
(defrule; end neg jump
	(stance-toward focus-player ally)
	(player-in-game focus-player)
	(goal temporary-goal3 128183)
=>
	(up-find-remote c: all-units-class c: 40))
(defrule
	(strategic-number sn-focus-player-number < max-players)
	(goal temporary-goal3 128183)
=>
	(up-modify-sn sn-focus-player-number c:+ 1)
	(up-jump-rule -2))
(defrule
	(goal temporary-goal3 128183)
=>
	(up-modify-sn sn-focus-player-number g:= temporary-goal7)
	(up-get-search-state local-total)
;	(up-chat-data-to-all "Our forces: %d" g: remote-total)
	(up-modify-goal temporary-goal9 s:= sn-military-superiority)
	(up-modify-goal temporary-goal9 s:max teamsuperiority)
	(up-modify-goal temporary-goal9 c:max 0)
	(up-modify-goal remote-total g:+ temporary-goal9))
(defrule
	(up-compare-goal remote-total g:< temporary-goal5)
	(goal temporary-goal3 128183)
=>
	(up-full-reset-search)
	(up-set-group search-local c: 9)
	(up-set-target-point saved-point-x)
	(up-filter-distance c: -1 g: temporary-goal6)
	(up-filter-include cmdid-military -1 -1 on-mainland)
	(up-filter-exclude -1 actionid-explore orderid-explore warship-class)
	(up-find-local c: all-units-class c: 240)
	(up-remove-objects search-remote object-data-class == siege-weapon-class)
;	(up-remove-objects search-remote object-data-class == scorpion-class)
	(up-set-target-point position-self-x)
;	(up-remove-objects search-local object-data-group-flag >= 0)
	(up-remove-objects search-local object-data-attack-stance == stance-no-attack)
	(up-remove-objects search-local object-data-distance g:< temporary-goal10)
;	(enable-timer retreat-timer 9)
;	(enable-timer resetnow 8)
;	(set-goal retreat no)
	(set-goal temporary-goal3 128184))
(defrule
	(goal temporary-goal3 128184)
	(up-set-target-object search-local c: 0)
=>
	(chat-local-to-self "Avoid fighting uphill.")
	(up-target-point 0 action-move -1 stance-no-attack)
	(up-modify-group-flag 0 c: 9)
	(up-reset-group c: 9)
	(up-create-group 0 0 c: 9)
	(up-modify-group-flag 1 c: 9)
	(enable-timer group9 10))
(defrule
	(true)
=>
	(up-modify-sn sn-focus-player-number g:= temporary-goal7)); end jump
;#end-if
;==============================================================
#load-if-not-defined DARK-AGE-END; Regicide?; 232
#load-if-not-defined FEUDAL-AGE-END
(defrule
(or	(population >= max-pop)
	(and	(goal siegereq yes)
		(population >= siege-pop)))
	(unit-type-count-total villager <= min-number-vills)
(or	(up-compare-goal excessWood >= 900)
(or	(up-compare-goal excessFood >= 900)
	(up-compare-goal excessGold >= 250)))
=>
	(set-goal siegeretreat no)
	(up-jump-rule 19))
(defrule
(or	(up-timer-status resetnow != timer-disabled);(up-timer-status resetnow == timer-running)
(or	(military-population >= 120); test
(or	(military-population <= 1)
(or	(and	(strategic-number sn-military-superiority >= 43);(strategic-number target-military-superiority >= 80); 75
		(strategic-number teamsuperiority >= 3))
	(and	(strategic-number sn-maximum-town-size < 30); 33
		(enemy-buildings-in-town))))))
=>
	(set-goal siegeretreat no)
	(up-jump-rule 18))
(defrule
(or	(up-compare-const diff-fp <= 0)
(or	(and	(players-building-type-count target-player castle <= 0)
		(players-building-type-count target-player bombard-tower <= 0))
(or	(and	(up-projectile-detected projectile-castle >= 3000)
		(up-projectile-detected projectile-bombard-tower >= 3000))
(or	(unit-type-count champion >= 50)
	(unit-type-count elite-teutonic-knight >= 50)))))
=>
	(set-goal siegeretreat no)
	(up-jump-rule 17))
(defrule
(or	(unit-type-count paladin >= 33)
(or	(unit-type-count elite-eagle-warrior >= 42)
(or	(unit-type-count elite-battle-elephant >= 33)
(or	(unit-type-count elite-tarkan >= 33)
(or	(unit-type-count elite-war-elephant >= 12)
(or	(unit-type-count elite-serjeant >= 51)
	(unit-type-count huskarl-set >= 27)))))))
=>
	(set-goal siegeretreat no)
	(up-jump-rule 16))
(defrule
	(up-compare-goal siegeretreat != yes)
;(or	(goal attacking yes)
;	(goal underattack no)); test
(or	(up-projectile-detected projectile-castle < 3000)
	(up-projectile-detected projectile-bombard-tower < 3000))
	(up-projectile-target projectile-fortification != warship-class)
	(up-projectile-target projectile-castle != battering-ram-line)
	(up-projectile-target projectile-castle != trebuchet-set)
	(up-projectile-target projectile-castle != bombard-cannon)
	(up-projectile-target projectile-bombard-tower != battering-ram-line)
	(up-projectile-target projectile-bombard-tower != trebuchet-set)
	(up-projectile-target projectile-bombard-tower != bombard-cannon)
=>
	(set-goal siegeretreat yes)
	(up-full-reset-search))
(defrule
	(goal siegeretreat yes)
	(up-projectile-detected projectile-castle < 3000)
=>
	(up-modify-goal temporary-goal s:= sn-focus-player-number)
	(up-modify-sn sn-focus-player-number s:= sn-target-player-number)
	(up-full-reset-search)
	(up-set-target-point position-self-x)
	(up-filter-distance c: 24 c: -1)
	(up-filter-include -1 actionid-attack -1 -1)
	(up-find-remote c: castle c: 1)
	(up-modify-sn sn-focus-player-number g:= temporary-goal))
(defrule
	(goal siegeretreat yes)
	(up-projectile-detected projectile-bombard-tower < 3000)
(not	(up-set-target-object search-remote c: 0))
=>
	(up-modify-goal temporary-goal s:= sn-focus-player-number)
	(up-modify-sn sn-focus-player-number s:= sn-target-player-number)
	(up-full-reset-search)
	(up-set-target-point position-self-x)
	(up-filter-distance c: 24 c: -1)
	(up-filter-include -1 actionid-attack -1 -1)
	(up-find-remote c: bombard-tower c: 1)
	(up-modify-sn sn-focus-player-number g:= temporary-goal))
(defrule
	(goal siegeretreat yes)
(not	(up-set-target-object search-remote c: 0))
=>
;	(chat-local-to-self "Error finding the attacking fortification.")
	(set-goal siegeretreat no)
	(up-jump-rule 12))
(defrule
	(goal siegeretreat yes)
	(up-set-target-object search-remote c: 0)
=>
	(up-get-object-data object-data-range temporary-goal2)
	(up-get-point position-object saved-point-x))
(defrule
	(goal siegeretreat yes)
(not	(player-in-game any-ally))
=>
	(up-full-reset-search)
	(up-set-target-point saved-point-x)
	(up-filter-distance c: -1 c: 15) ; 17 - treb ; 15
	(up-find-local c: unpacked-trebuchet-class c: 1)
	(up-find-local c: battering-ram-line c: 1)
	(up-find-local c: bombard-cannon c: 1)
	(up-find-local c: packed-trebuchet-class c: 1);
	(up-get-search-state local-total)
;	(up-chat-data-to-all "local-total: %d" g: local-total)
	(up-jump-rule 4))
(defrule
	(goal siegeretreat yes)
=>
	(up-modify-goal temporary-goal s:= sn-focus-player-number)
	(set-strategic-number sn-focus-player-number 1))
(defrule
	(goal siegeretreat yes)
	(player-in-game focus-player)
	(stance-toward focus-player ally)
=>
	(up-full-reset-search)
	(up-set-target-point saved-point-x)
	(up-filter-distance c: -1 c: 15) ; 17 - treb ; 15
	(up-find-remote c: unpacked-trebuchet-class c: 1)
	(up-find-remote c: battering-ram-line c: 1)
	(up-find-remote c: bombard-cannon c: 1)
	(up-find-remote c: packed-trebuchet-class c: 1);
	(up-get-search-state local-total))
(defrule
	(goal siegeretreat yes)
	(up-compare-goal remote-total <= 0)
	(strategic-number sn-focus-player-number < max-players)
=>
	(up-modify-sn sn-focus-player-number c:+ 1)
	(up-jump-rule -2))
(defrule
	(goal siegeretreat yes)
=>
;	(up-chat-data-to-all "remote-total: %d" g: remote-total)
	(up-modify-sn sn-focus-player-number g:= temporary-goal))
(defrule
	(up-compare-goal siegeretreat >= yes)
(or	(up-compare-goal local-total >= 1)
	(up-compare-goal remote-total >= 1))
=>
	(set-goal siegeretreat no)
	(up-jump-rule 5)); end mini-jump
(defrule
	(goal siegeretreat yes)
	(goal attacking yes)
	(unit-type-count trebuchet-set <= 0)
	(unit-type-count battering-ram-line <= 0)
	(unit-type-count bombard-cannon-line <= 0)
=>
	(set-goal attacking no)
	(up-modify-sn sn-maximum-town-size c:max 10)
	(up-modify-sn sn-maximum-town-size c:min 14)
	(set-strategic-number sn-percent-attack-soldiers 0)
	(set-strategic-number sn-number-attack-groups 0)
	(set-strategic-number sn-percent-attack-boats 0); for now
	(set-strategic-number sn-number-boat-attack-groups 0))
(defrule
	(goal siegeretreat yes)
=>
	(up-full-reset-search)
	(up-set-target-point saved-point-x)
	(up-filter-distance c: -1 c: 15); 14 ; 17 - treb
;	(up-filter-exclude -1 actionid-explore orderid-explore warship-class)
	(up-filter-include cmdid-military -1 -1 -1)
	(up-find-local c: all-units-class c: 240)
	(up-filter-include cmdid-monk -1 -1 -1)
	(up-find-local c: all-units-class c: 240)
	(up-remove-objects search-local object-data-attack-stance != stance-aggressive)
	(up-remove-objects search-local object-data-group-flag >= 0)
	(up-set-target-point position-self-x)
	(up-remove-objects search-local object-data-distance <= 24)
	(up-copy-point temporary-point-x saved-point-x)
	(up-lerp-tiles temporary-point-x position-self-x c: 24))
(defrule
(or	(up-point-terrain temporary-point-x == terrain-water)
(or	(up-point-terrain temporary-point-x == terrain-water-deep)
(or	(up-point-terrain temporary-point-x == terrain-water-medium)
(or	(up-point-terrain temporary-point-x == terrain-water-bridge)
	(up-point-terrain temporary-point-x == terrain-water-old)))))
=>
	(up-jump-rule 1))
(defrule
	(up-set-target-object search-local c: 0)
	(goal attacking yes)
	(goal siegeretreat yes)
=>
	(chat-local-to-self text-siege-retreat); "Siege-Retreat."
	(up-target-point null-x action-move -1 -1)
	(up-set-target-point temporary-point-x)
	(up-target-point 0 action-move -1 stance-stand-ground)
	(enable-timer stance-timer 4)
	(set-goal siegeretreat no); 2
	(up-jump-rule 1)); end jump
(defrule
	(up-set-target-object search-local c: 0)
	(goal siegeretreat yes)
=>
	(chat-local-to-self text-siege-retreat); "Siege-Retreat."
	(up-copy-point temporary-point-x position-self-x)
	(up-get-point position-target object-point-x)
	(up-lerp-tiles temporary-point-x object-point-x c: 16); 12
	(up-target-point null-x action-move -1 -1)
	(up-set-target-point temporary-point-x)
	(up-target-point 0 action-move -1 stance-no-attack)
	(enable-timer resetnow 9); 8
	(set-goal siegeretreat no)); 2; end jump
#end-if
#end-if

#end-if
#end-if
#end-if
(defrule
	(goal migration-state 1)
	(goal attacking yes)
(or	(strategic-number sn-percent-attack-soldiers > 0)
	(strategic-number sn-number-attack-groups > 0))
	(unit-type-count-total transport-ship >= 1)
	(goal inseln yes)
	(game-time < 6000)
	(population < max-pop)
(not	(taunt-detected any-human-ally 31))
=>
	(set-strategic-number sn-percent-attack-soldiers 0)
	(set-strategic-number sn-number-attack-groups 0))
;==============================================================
; Nomad
;==============================================================
(defrule
	(building-type-count-total town-center >= 1)
	(strategic-number sn-maximum-town-size g:>= map-size)
=>
	(set-strategic-number sn-placement-zone-size 20)
	(set-strategic-number sn-target-evaluation-ally-proximity 0)
	(set-strategic-number sn-maximum-town-size 10)
	(disable-self))
(defrule
	(game-time > 12)
	(game-time < 2400)
	(building-type-count-total town-center >= 1)
	(strategic-number sn-camp-max-distance g:>= map-size)
=>
	(set-strategic-number sn-camp-max-distance 35)
	(disable-self))
;==============================================================
; Villager defense
;==============================================================
(defrule
(or	(players-building-type-count target-player watch-tower <= 0)
(or	(players-building-type-count target-player palisade-wall <= 0)
(or	(unit-type-count bombard-cannon-line >= 1)
(or	(up-compare-goal mangonel-set >= 1)
	(population > max-civ-pop)))))
=>
	(up-set-defense-priority c: palisade-wall c: 3000)
	(up-set-offense-priority c: palisade-wall c: 2)
	(up-jump-rule 1))
(defrule
	(players-building-type-count target-player watch-tower >= 1)
	(players-building-type-count target-player palisade-wall >= 1)
	(unit-type-count bombard-cannon-line <= 0)
	(up-compare-goal mangonel-set <= 0)
	(population <= max-civ-pop)
=>
	(up-set-defense-priority c: palisade-wall c: 9500)
	(up-set-offense-priority c: palisade-wall c: 8)
	(up-set-defense-priority c: watch-tower c: -1)
	(up-set-offense-priority c: watch-tower c: -1)); end jump
#load-if-defined SPANISH-CIV
(defrule
	(research-completed my-unique-research)
(or	(up-compare-goal custom-civ-pop >= up-max-civ)
(or	(civilian-population >= up-max-civ)
	(population >= max-civ-pop)))
	(unit-type-count-total villager > 10)
	(unit-type-count-total 211 < 7)
	(unit-type-count-total 224 < 7)
=>
	(up-modify-sn sn-allow-civilian-defense c:max 2))
(defrule
	(research-completed my-unique-research)
(or	(and	(up-compare-goal custom-civ-pop < up-max-civ)
		(and	(civilian-population < up-max-civ)
			(population < max-civ-pop)))
(or	(unit-type-count-total villager < 10)
(or	(unit-type-count-total 211 >= 7)
	(unit-type-count-total 224 >= 7))))
=>
	(up-modify-sn sn-allow-civilian-defense c:min 1))
#end-if

(defrule
(or	(game-time >= 1200)
(or	(and	(up-research-status c: ri-loom <= research-pending)
		(up-compare-goal custom-civ-pop >= up-max-civ))
(or	(strategic-number archers >= 4)
(or	(strategic-number infantry >= 3)
(or	(strategic-number cavalry >= 4)
(or	(strategic-number eagles >= 3)
	(strategic-number husks >= 3)))))))
=>
	(up-jump-rule 2))
(defrule
	(game-time < 840)
(or	(players-military-population focus-player <= 4)
	(military-population >= 2))
	(up-enemy-units-in-town >= 1)
	(up-enemy-units-in-town <= 5); 6
	(players-military-population focus-player <= 6); 5
	(military-population <= 6); 5
	(up-compare-goal my-mpop g:<= focus-mpop)
	(players-current-age focus-player <= dark-age)
	(players-military-population every-enemy <= 8); 9
	(players-current-age every-enemy <= feudal-age)
=>
	(up-modify-sn sn-allow-civilian-defense c:max 3))
(defrule
	(game-time < 960); 930
(or	(players-military-population focus-player <= 4)
	(military-population >= 2))
	(up-enemy-units-in-town >= 1)
	(up-enemy-units-in-town <= 5); 6
	(players-military-population focus-player <= 6); 5
	(military-population <= 6); 5
	(up-compare-goal my-mpop g:<= focus-mpop)
	(players-current-age focus-player <= feudal-age)
	(players-military-population every-enemy <= 8); 12
	(players-current-age every-enemy <= castle-age)
=>
	(up-modify-sn sn-allow-civilian-defense c:max 2)); end jump
(defrule
	(game-time < 960)
(or	(up-compare-goal verbuendete g:> feinde); >=
	(strategic-number sn-military-superiority s:<= teamsuperiority))
	(up-research-status c: ri-loom >= research-complete)
	(unit-type-count villager >= 16)
	(players-current-age focus-player <= feudal-age)
	(players-military-population focus-player < 16)
	(up-enemy-units-in-town >= 1)
	(up-compare-goal my-mpop g:<= focus-mpop)
(or	(current-age <= feudal-age)
	(military-population < 4))
=>
	(up-modify-sn sn-allow-civilian-defense c:max 3)
	(set-goal scouting no))

(defrule
(or	(building-type-count town-center <= 0)
(or	(and	(players-building-type-count target-player stone-wall-line >= 1);
		(up-projectile-detected projectile-watch-tower < 150000))
(or	(unit-type-count battering-ram-line >= 1)
(or	(up-compare-goal mangonel-set >= 1)
(or	(unit-type-count bombard-cannon-line >= 1)
	(unit-type-count trebuchet-set >= 1))))))
=>
	(set-goal ttower-distance 65535)
	(up-jump-rule 8))
(defrule
(or	(military-population >= 11)
(or	(and	(goal attacking yes)
		(and	(military-population >= 7)
			(strategic-number sn-maximum-town-size > 32)))
(or	(players-building-type-count target-player bombard-tower >= 1)
(or	(players-building-type-count target-player krepost >= 1)
	(players-building-type-count target-player castle >= 1)))))
=>
	(set-goal ttower-distance 65535)
	(up-jump-rule 7))
(defrule
	(true)
=>
	(set-goal ttower-distance 65535)
	(set-goal temporary-goal2 14); 12
	(up-get-fact enemy-villagers-in-town 0 temporary-goal3)
	(up-full-reset-search))
(defrule
	(goal defend yes)
(or	(up-building-type-in-town c: watch-tower >= 4);	(players-building-type-count target-player watch-tower >= 4)
	(up-building-type-in-town c: donjon >= 3))
	(player-in-game any-ally)
=>
	(up-jump-rule 3))
(defrule
(or	(players-building-type-count target-player watch-tower >= 1)
	(players-building-type-count target-player donjon >= 1))
=>
	(up-full-reset-search)
	(up-modify-goal temporary-goal s:= sn-focus-player-number)
	(up-modify-sn sn-focus-player-number s:= sn-target-player-number)
	(up-set-target-point position-self-x)
	(up-filter-distance c: -1 c: 26)
	(up-find-remote c: watch-tower c: 16)
	(up-find-remote c: donjon c: 16)
	(up-filter-status c: status-pending c: list-active)
	(up-find-status-remote c: watch-tower c: 16)
	(up-find-status-remote c: donjon c: 16)
	(up-clean-search search-remote object-data-distance search-order-asc)
	(up-modify-sn sn-focus-player-number g:= temporary-goal)
	(up-jump-rule 1))
(defrule
	(players-unit-type-count target-player villager >= 1)
=>
	(up-full-reset-search)
	(up-modify-goal temporary-goal s:= sn-focus-player-number)
	(up-modify-sn sn-focus-player-number s:= sn-target-player-number)
	(up-set-target-point position-self-x)
	(up-filter-distance c: -1 c: 26)
	(up-find-remote c: villager-class c: 16)
	(up-clean-search search-remote object-data-distance search-order-asc)
	(up-modify-sn sn-focus-player-number g:= temporary-goal)); end mini jump
(defrule
	(up-set-target-object search-remote c: 0)
=>
	(up-get-object-data object-data-distance ttower-distance)
;	(up-chat-data-to-self "Trush defense: %d" g: ttower-distance)
	(up-modify-goal temporary-goal g:= ttower-distance)
	(up-modify-goal temporary-goal c:+ 5)
	(up-modify-goal temporary-goal c:min 28)
	(up-modify-sn sn-maximum-town-size g:max temporary-goal)
	(up-modify-goal temporary-goal g:= villagercounttotal)
	(up-modify-goal temporary-goal c:- 2)
	(up-modify-goal temporary-goal2 g:- my-mpop)
	(up-modify-goal temporary-goal2 g:max temporary-goal3)
	(up-modify-goal temporary-goal2 c:max 7); 6
	(up-modify-goal temporary-goal2 g:min temporary-goal)
	(up-modify-sn sn-number-civilian-militia g:max temporary-goal2)
	(up-modify-sn sn-allow-civilian-offense c:max 2)
	(up-modify-sn sn-allow-civilian-defense c:max 2)); end mini jump
(defrule
;	(enemy-buildings-in-town)
(or	(up-building-type-in-town c: watch-tower >= 1)
	(up-building-type-in-town c: donjon >= 1))
	(strategic-number sn-maximum-town-size < 32);
	(up-compare-goal targetdistance < 26)
	(goal attacking no)
	(goal defend no)
	(up-projectile-detected projectile-watch-tower < 4000)
	(players-building-type-count target-player palisade-wall <= 0)
	(players-building-type-count target-player stone-wall-line <= 0)
	(players-building-type-count target-player gate <= 0)
	(players-military-population target-player < 3)
=>
	(up-modify-sn sn-number-civilian-militia c:max 8)
	(up-modify-sn sn-allow-civilian-offense c:max 2))
(defrule
	(strategic-number sn-maximum-town-size < 32);
	(up-compare-goal targetdistance < 26)
	(goal attacking no)
	(goal defend no)
	(up-projectile-detected projectile-watch-tower >= 4000)
	(players-building-type-count target-player palisade-wall <= 0)
	(players-building-type-count target-player stone-wall-line <= 0)
	(players-building-type-count target-player gate <= 0)
	(players-military-population target-player < 3)
=>
	(up-modify-sn sn-number-civilian-militia c:max 8)
	(up-modify-sn sn-allow-civilian-offense c:max 2)); end jump
(defrule
	(goal attacking no)
	(up-enemy-buildings-in-town <= 0)
	(strategic-number sn-allow-civilian-defense == 0)
=>
	(set-strategic-number sn-allow-civilian-offense 1))
;==============================================================
; Misc
;==============================================================
;(defrule
;	(up-compare-goal reset != yes);	(up-timer-status resetnow != timer-disabled)
;	(goal retreat no)
;	(goal attacking yes)
;;	(goal attackStart yes)
;=>
;	(disable-timer retreat-timer)
;	(set-goal reset no)
;	(set-goal reset yes)
;	(up-reset-unit c: -1)
;	(disable-timer resetnow)
;	(disable-timer resetnow2)
;	(up-set-attack-stance -1 c: stance-aggressive)
;	(chat-local-to-self text-resetting-military)
;;	(set-strategic-number sn-enemy-sighted-response-distance 8)
;	(enable-timer reset-timer 3))

(defrule
	(goal drushmicro yes)
	(goal selectdrushwaypoint 2)
	(timer-triggered resetnow)
	(up-compare-goal reset != no)
=>
	(disable-timer resetnow)
	(disable-timer resetnow2)
	(set-goal reset no)
	(set-goal selectdrushwaypoint 1)
	(up-reset-unit c: -1)
	(up-set-attack-stance -1 c: stance-aggressive);	(up-set-attack-stance militiaman-line c: stance-aggressive)
	(chat-local-to-self text-resetting-military)
;	(set-strategic-number sn-enemy-sighted-response-distance 8)
	(enable-timer reset-timer 2))
(defrule
	(goal drushmicro yes)
	(timer-triggered resetnow)
	(up-compare-goal reset != no)
=>
	(disable-timer resetnow)
	(disable-timer resetnow2)
	(set-goal reset no)
	(up-reset-unit c: -1)
	(up-set-attack-stance -1 c: stance-aggressive);	(up-set-attack-stance militiaman-line c: stance-aggressive)
	(chat-local-to-self text-resetting-military)
;	(set-strategic-number sn-enemy-sighted-response-distance 8)
	(enable-timer reset-timer 2))

(defrule
;	(up-compare-goal drushmicro != yes)
	(timer-triggered resetnow)
	(up-compare-goal reset != no)
=>
	(disable-timer resetnow)
	(disable-timer resetnow2)
	(set-goal reset no)
	(up-reset-unit c: -1)
	(up-set-attack-stance -1 c: stance-aggressive)
	(chat-local-to-self text-resetting-military)
;	(set-strategic-number sn-enemy-sighted-response-distance 8)
	(enable-timer reset-timer 2)); 3
(defrule
	(timer-triggered resetnow2)
	(up-compare-goal reset != no)
=>
	(disable-timer resetnow)
	(disable-timer resetnow2)
	(set-goal reset no)
	(chat-local-to-self text-resetting-military); -nm
	(up-reset-unit c: -1);
;	(up-reset-unit c: infantry-class)
;	(up-reset-unit c: archery-class)
;	(up-reset-unit c: archery-cannon-class)
;	(up-reset-unit c: cavalry-class)
;	(up-reset-unit c: cavalry-archer-class)
;	(up-reset-unit c: cavalry-cannon-class)
;	(up-reset-unit c: monastery-class)
;	(up-reset-unit c: siege-weapon-class)
;	(up-reset-unit c: scorpion-class)
	(up-set-attack-stance -1 c: stance-aggressive)
;;	(set-strategic-number sn-enemy-sighted-response-distance 8)
	(enable-timer reset-timer 2)); 3
(defrule
	(timer-triggered resetnow3)
;	(up-timer-status threesec != timer-running);	(up-compare-goal reset != yes)
=>
	(disable-timer resetnow3)
;	(set-goal reset no)
	(chat-local-to-self text-resetting-navy); -nm
	(up-reset-unit c: warship-class)
	(up-set-attack-stance warship-class c: stance-aggressive)
;;	(set-strategic-number sn-enemy-sighted-response-distance 8)
;	(enable-timer reset-timer 2)
)

(defrule
	(timer-triggered retreat-timer)
=>
	(set-goal retreat yes)
	(disable-timer retreat-timer))
(defrule
	(timer-triggered reset-timer)
=>
	(set-goal reset yes)
	(disable-timer reset-timer))
(defrule
	(up-compare-goal reset != yes)
	(goal retreat yes)
	(up-timer-status patrol-timer == timer-disabled)
	(up-timer-status retreat-timer != timer-running)
	(up-timer-status reset-timer != timer-running)
	(up-timer-status resetnow != timer-running)
	(up-timer-status resetnow2 != timer-running)
	(goal patroldefense no)
	(goal patrolhelp no)
	(up-timer-status unit-control-flare-timer2 == timer-disabled)
=>
	(enable-timer reset-timer 3)); test
(defrule
	(up-compare-goal retreat != yes)
	(up-timer-status patrol-timer == timer-disabled)
	(up-timer-status retreat-timer != timer-running)
	(up-timer-status resetnow != timer-running)
	(up-timer-status resetnow2 != timer-running)
	(goal patroldefense no)
	(goal patrolhelp no)
	(up-timer-status unit-control-flare-timer2 == timer-disabled)
=>
	(set-goal retreat yes)); test
(defrule
	(up-compare-goal retreat != yes)
;	(goal attacking yes)
	(up-timer-status retreat-timer == timer-disabled)
=>
	(enable-timer retreat-timer 3))


(defrule
	(timer-triggered group9)
	(up-group-size c: 9 >= 1)
=>
	(chat-local-to-self "Resetting group9.")
	(disable-timer group9)
	(up-full-reset-search)
	(up-set-group search-local c: 9)
	(up-target-point 0 action-stop -1 stance-aggressive)
	(up-modify-group-flag 0 c: 9)
	(up-reset-group c: 9))

(defrule
	(up-group-size c: 9 >= 1)
=>
	(up-set-target-point position-self-x)
	(up-full-reset-search)
	(up-set-group search-local c: 9)
	(up-remove-objects search-local object-data-distance >= 8))
(defrule
	(up-group-size c: 9 >= 1)
	(up-set-target-object search-local c: 0)
=>
	(chat-local-to-self "Cleaning units out of group9.")
	(up-target-point 0 action-stop -1 stance-aggressive)
	(up-full-reset-search)
	(up-set-group search-local c: 9)
	(up-remove-objects search-local object-data-distance < 8)
	(up-modify-group-flag 0 c: 9)
	(up-reset-group c: 9)
	(up-create-group 0 0 c: 9)
	(up-modify-group-flag 1 c: 9))


(defrule
(or	(goal attackStart yes)
;(or	(timer-triggered MSuperiority)
(or	(timer-triggered stance-timer)
(or	(timer-triggered resetnow)
(or	(timer-triggered resetnow2)
(or	(timer-triggered TSA-timer)
	(and	(strategic-number sn-maximum-town-size <= 14)
		(goal retreat no)))))));); just retreated
=>
	(up-update-targets))



(defrule
	(true)
=>
	(up-get-rule-id old-jump-rule)
	(up-modify-goal temporary-goal11 s:= sn-focus-player-number)
)
;New systems

(defrule
	(goal attackingsystem old)
	(strategic-number sn-rule-global-timer > 3)
=>
	(up-jump-direct g: new-jump-rule)
) 

(defrule
    (up-compare-sn sn-military-superiority > -30)
    (or(unit-type-count cavalry-archer-line > 1)
    (or(unit-type-count cavalry-archer > 1)
    (or(unit-type-count skirmisher-line > 1)
    (unit-type-count archer-line > 1))))
;    (players-building-count any-enemy > 0)
    (up-compare-const diff-fp == 1)
=>
    (set-goal group-micro yes)
)

(defrule
    ;(up-group-size c: ranged-group1 < 1)
    (or(population > 150)
    (unit-type-count-total archery-class > 60))
    ;(strategic-number sn-two-turns == 0)
=>
    (set-goal group-micro no)
    (set-goal melee-micro no)
)

#load-if-not-defined DIFFICULTY-EASIEST
#load-if-not-defined DIFFICULTY-EASY
#load-if-not-defined DIFFICULTY-MODERATE

(defrule
	(up-compare-const koth-game == 1)
	(or(up-compare-goal victory-time > 4000)
	(up-compare-goal victory-time < 2000))
	(up-compare-goal victory-time > 1000)
=>
	(set-goal group-micro yes)
)

#end-if
#end-if
#end-if

; (defrule
;     (population > p75)
;     (up-compare-flag water-flags == 2)
; =>
;     (set-goal group-micro no)
;     (set-goal melee-micro no)
; )

; (defrule
;     (up-compare-goal victory-flags > 0)
; =>
;     (set-goal group-micro no)
;     (set-goal melee-micro no)
; )

(defrule
    (or(up-group-size c: ranged-group1 < 1)
    (or(population > 150)
    (unit-type-count-total archery-class > 60)))
    (strategic-number sn-two-turns == 0)
=>
;    (up-set-attack-stance archer c: stance-aggressive)
    (up-set-attack-stance skirmisher-line c: stance-aggressive)
    (up-set-attack-stance cavalry-archer c: stance-aggressive)
    (up-set-attack-stance archer-line c: stance-aggressive)
    (up-set-attack-stance cavalry-archer-line c: stance-aggressive)
)

(defrule
    (or(up-group-size c: melee-group1 < 1)
    (population > 150))
    (strategic-number sn-twenty-turns == 6)
=>
    (up-set-attack-stance militiaman-line c: stance-aggressive)
    (up-set-attack-stance knight-line c: stance-aggressive)
    (up-set-attack-stance spearman-line c: stance-aggressive)
    (up-set-attack-stance camel c: stance-aggressive)
    (up-set-attack-stance battle-elephant-line c: stance-aggressive)
)





(defrule
    (or(population > 190)
    (up-compare-sn sn-military-superiority > 3))
    (up-compare-goal group-micro != yes)
    ; (or(up-compare-const diff > 4)
    ; (game-time > min-attack-time))
    ; (building-type-count wonder < 1)
    ; (xnor(building-type-count monument-class < 1)
    ; (game-type == 5));koth
    (up-compare-goal melee-micro != yes)
=>
  ;  (set-goal tsa yes)
    (set-goal attacking yes)
)

(defrule
    (up-compare-sn sn-military-superiority < 0)
    (population < 175)
 ;   (not(goal tsa yes))
=>
 ;   (set-goal tsa no)
    (set-goal attacking no)
)

; (defrule
;     (unit-type-count-total galley-line > 0)
; ;    (players-building-type-count target-player town-center > 0)
;     (players-building-type-count target-player dock > 0)
;     (timer-triggered two-mins)
;     (up-compare-sn sn-military-superiority > 1)
; =>
;     (up-full-reset-search)
;     (up-modify-sn sn-focus-player-number s:= sn-target-player-number)
;     (up-find-local c: galley-line c: 60)
;     (up-find-local c: fire-ship-line c: 60)
;     (up-find-local c: siege-ship c: 60)

;     (up-find-remote c: dock c: 10)
;     (up-set-target-point position-self-x)
;     (up-clean-search search-remote object-data-distance search-order-asc)
;     (up-remove-objects search-remote -1 > 0)
;     (up-target-objects 0 action-patrol -1 -1)
;     )

    
; (defrule
;     (unit-type-count-total galley-line > 0)
;     (players-building-type-count target-player town-center > 0)
;     (players-building-type-count target-player dock < 1)
;     (timer-triggered two-mins)
;     (up-compare-sn sn-military-superiority > 1)
; =>
;     (up-full-reset-search)
;     (up-modify-sn sn-focus-player-number s:= sn-target-player-number)
;     (up-find-local c: galley-line c: 60)
;     (up-find-local c: fire-ship-line c: 60)
;     (up-find-local c: siege-ship c: 60)
;     (up-find-remote c: town-center c: 10)
;     (up-set-target-point position-self-x)
;     (up-clean-search search-remote object-data-distance search-order-asc)
;     (up-remove-objects search-remote -1 > 0)
;     (up-target-objects 0 action-patrol -1 -1)
;     )

; (defrule
;     (up-compare-sn sn-military-superiority < 0)
;     (population < p175)
;   ;  (goal tsa yes)
;     (game-time > 600)
;     (goal group-micro no)
;     (goal melee-micro no)
; =>
; ;    (set-goal tsa no)
;     (set-goal attacking no)
;     (up-modify-sn sn-maximum-town-size g:= reset-town-size)
;     (up-full-reset-search)
;     (up-filter-include 4 -1 -1 -1)
;     (up-find-local c: all-units-class c: 60)
;     (up-set-target-point position-self-x)
;     (up-filter-distance c: 25 c: -1)
;     (up-target-point position-self-x action-move -1 -1)
;     (enable-timer reset-stance 10)
; ;    (chat-to-player my-player-number "Abort TSA and retreat")
; )
; (defrule
;     (population > p195)
; =>
;     (set-goal tsa yes)
;     (set-goal attacking yes)
; )
;TSA itself

; (defrule
;     (goal tsa yes)
;     (goal attacking yes)
; ;    (not(enemy-buildings-in-town))
;     (not(up-enemy-buildings-in-town > 2))
;     (players-building-count any-enemy > 0)
; =>
;     (up-modify-sn sn-maximum-town-size c:+ 2)
; )

;DUC attacks

; (defrule
;     (goal strategy axe-rush)
;     (unit-type-count axeman > 3)
;     (timer-triggered fifteensec)
; =>
;     (up-full-reset-search)
;     (up-find-local c: axeman c: 40)
;     (up-get-point position-target point-x)
;     (up-target-point point-x action-patrol -1 -1)
; )

; (defrule
;     (timer-triggered two-mins)
; =>
;     (up-chat-data-to-player my-player-number "Strategy %d" g: strategy)
;  ;   (up-chat-data-to-player my-player-number "TSA status %d" g: tsa)
;     (up-chat-data-to-player my-player-number "Attacking status %d" g: attacking)
;     (up-chat-data-to-player my-player-number "Town size %d" s: sn-maximum-town-size)
;     (up-chat-data-to-player my-player-number "Milsup %d" s: sn-military-superiority)
; ;    (up-chat-data-to-player my-player-number "Side milsup %d" g: side-milsup)
;     (up-chat-data-to-player my-player-number "Target player %d" s: sn-target-player-number)
;  ;   (up-chat-data-to-player my-player-number "DUC gathering status %d" g: ducgathering)
;     (up-chat-data-to-player my-player-number "Food gp %d" s: sn-food-gatherer-percentage)
;     (up-chat-data-to-player my-player-number "Wood gp %d" s: sn-wood-gatherer-percentage)
;  )


(defrule
    (timer-triggered reset-stance)
=>
    (up-full-reset-search)
    (up-filter-include 4 -1 -1 -1)
    (up-find-local c: all-units-class c: 60)
    (up-target-objects 0 action-none -1 stance-aggressive)
)

;Eventually we want to adjust this dynamically and take into account dravidian/ethiopian/mongolian bonuses

(defrule
	(true)
=>
;	(set-strategic-number rt-critical-value 0)
	(set-strategic-number fd-critical-value 9999)
)

(defrule
	(unit-type-count archer-line > 0)
=>
	(up-modify-sn fd-critical-value c:min arch-crit)
;	(up-modify-sn rt-critical-value c:max 280)
)

(defrule
	(unit-type-count skirmisher-line > 0)
=>
	(up-modify-sn fd-critical-value c:min skirm-crit)
;	(up-modify-sn rt-critical-value c:max 400)
)

(defrule
	(unit-type-count cavalry-archer-line > 0)
=>
	(up-modify-sn fd-critical-value c:min 1090)
;	(up-modify-sn rt-critical-value c:max 728)
)

(defrule
	(unit-type-count archer-line > 0)
	(research-completed ri-thumb-ring)
=>
	(up-modify-sn fd-critical-value c:min thumb-arch-crit)
)


(defrule
	(unit-type-count skirmisher-line > 0)
	(research-completed ri-thumb-ring)
=>
	(up-modify-sn fd-critical-value c:- 1);thumb ring reduces skirm reload time by 0.0005%!
)

(defrule
	(unit-type-count cavalry-archer-line > 0)
	(research-completed ri-thumb-ring)
=>
	(up-modify-sn fd-critical-value c:min 889)
)

#load-if-defined UP-MULTIPLAYER-GAME

(defrule
	(up-compare-sn fd-critical-value > 1400)
=>
	(up-modify-sn fd-critical-value c:- 100);100 ms buffer to deal with lag etc.
)
#end-if

(defrule
	(up-compare-const diff-fp != 1)
=>
	(up-modify-sn fd-critical-value c:/ 3)
	(up-modify-sn fd-critical-value c:max 100)
)
(defrule
	(goal group-micro yes)
	(up-group-size c: ranged-group1 > 0)
=>
	(up-full-reset-search)
	(up-set-group search-local c: ranged-group1)
	(up-remove-objects search-local -1 > 20)
	(up-modify-goal temporary-goal9 s:= turn-time-estimate)
	(up-modify-goal temporary-goal9 c:* 8)
	(up-modify-goal temporary-goal9 c:/ 10)
	(up-remove-objects search-local object-data-next-attack g:< temporary-goal9)
	(up-get-search-state local-total)
	(up-modify-goal local-total c:/ 2)
	(up-modify-goal local-total c:max 2)
	(up-clean-search search-local object-data-reload-time search-order-asc)
	(up-remove-objects search-local -1 g:> local-total)
	(up-modify-goal local-total c:- 1)
	(up-modify-goal local-total c:max 0)
	(up-set-target-object search-local g: local-total)
	(up-get-search-state local-total)
	(up-get-object-data object-data-next-attack temporary-goal)
	; (up-chat-data-to-player 1 "Remaining reload time %d" g: temporary-goal)
	; (up-chat-data-to-player 1 "Critical value %d" s: fd-critical-value)
)

(defrule
	(up-compare-sn ms-block-movement > 0)
	(goal group-micro yes)
	(up-group-size c: ranged-group1 > 0)
	(strategic-number sn-turn-count > 5)
=>
	(up-modify-sn ms-block-movement s:- turn-time-estimate)
	(up-jump-direct g: block-movement-goal)
)
(defrule
    ;(up-compare-goal block-movement > 0)
    (strategic-number sn-turn-count > 5)
	(goal group-micro yes)
	(up-group-size c: ranged-group1 > 0)
	(up-compare-goal local-total > 0)
	(up-compare-goal temporary-goal s:> fd-critical-value)
=>
    (up-modify-goal block-movement c:- 1)
    (up-jump-direct g: block-movement-goal)
)


(defrule
    (goal group-micro yes)
=>
    (set-strategic-number sn-number-tasked-units 40);adjust this eventually
    (set-goal firing-range 4)
    (set-goal following-range 9)
    (disable-self)
)

; (defrule
;     (or(and(unit-type-count-total archer > 2)
;     (research-completed ri-double-bit-axe))
;     (and(unit-type-count-total skirmisher-line > 2)
;     (research-completed ri-stone-mining)))
;     (goal group-micro yes)
; =>
;     (up-modify-goal firing-range c:+ 1)
;     (up-modify-goal following-range c:+ 1)
;     (disable-self)
; )

; (defrule
;     (research-completed ri-bow-saw)
;     (or(unit-type-count-total cavalry-archer > 0)
;     (or(unit-type-count-total archer > 0)
;     (unit-type-count-total archer-line > 0)))
;     (goal group-micro yes)
; =>
;     (up-modify-goal firing-range c:+ 1)
;     (up-modify-goal following-range c:+ 1)
;     (disable-self)
; )

; (defrule
;     (research-completed ri-two-man-saw)
;     (unit-type-count cavalry-archer > 0)
; =>
;     (up-modify-goal firing-range c:+ 2)
;     (up-modify-goal following-range c:+ 2)
;     (disable-self)
; )

;A better solution is to periodically select the firing range of the median unit


(defrule
    (timer-triggered fifteensec)
    (goal group-micro yes)
    (up-group-size c: ranged-group1 > 0)
=>
    (up-full-reset-search)
    (up-set-group search-local c: ranged-group1)
    (up-remove-objects search-local -1 > 20);don't sort through too many objects
    (up-get-search-state local-total)
    (up-modify-goal temporary-goal g:= local-total)
    (up-modify-goal temporary-goal c:/ 2)
    (up-modify-goal temporary-goal c:max 0)
    (up-clean-search search-local object-data-range search-order-asc)
    (up-set-target-object search-local g: temporary-goal)
    (up-get-object-data object-data-range firing-range)
    (up-modify-goal firing-range c:max 4)
    (up-modify-goal following-range g:= firing-range)
    (up-modify-goal following-range c:+ 5)
)

(defrule
	(up-point-distance ranged-group1-x position-self-x < 15)
	(goal group-micro yes)
	(up-group-size c: ranged-group1 > 0)
=>
	(up-modify-goal following-range c:+ 5)
)

(defrule
    (timer-triggered fifteensec)
    (goal group-micro yes)
    (up-group-size c: ranged-group1 > 25);Adjust range for large group
=>
    (up-modify-goal firing-range c:- 1)
)

; (defrule
;     (timer-triggered fifteensec)
;     (goal group-micro yes)
; =>
;     (up-chat-data-to-player my-player-number "Firing range %d" g: firing-range)
;     (up-chat-data-to-player my-player-number "Following range %d" g: following-range)
; )

;search for enemy melee units

(defrule
    (up-group-size c: range-group1 < 1)
=>
    (up-jump-rule 3)
)

(defrule
    (goal group-micro yes)
=>
    (up-full-reset-search)
    (set-strategic-number sn-focus-player-number 1)
    (set-goal num-enemy-melee 0)
)

(defrule
	(goal group-micro yes)
=>
	(set-strategic-number sn-focus-player-number 0)
	(up-set-target-point ranged-group1-x)
	(up-filter-distance c: -1 c: 6)
	(up-find-resource c: dangerous-animal-class c: 1)
	(up-remove-objects search-remote object-data-carry > 100)
	(up-get-search-state local-total)
	(up-modify-goal num-enemy-melee g:+ remote-total)
	(set-strategic-number sn-focus-player-number 1)
)
(defrule
    (goal group-micro yes)
    (player-valid focus-player)
    (players-stance focus-player enemy)
=>
    (up-full-reset-search)
    (up-set-target-point ranged-group1-x)
    (up-filter-distance c: -1 c: 4)
    (up-find-remote c: villager-class c: 10)
    (up-find-remote c: cavalry-class c: 10)
    (up-find-remote c: infantry-class c: 10)
    (up-find-remote c: scout-cavalry-line c: 10);doesn't seem to be part of cav class :O
    ;(up-find-remote c: cavalry-archer-class c: 10)
    (up-get-search-state local-total)
    (up-modify-goal num-enemy-melee g:+ remote-total)
)

(defrule
    (player-valid focus-player)
    (strategic-number sn-focus-player-number <= 16)
=>
    (up-modify-sn sn-focus-player-number c:+ 1)
    (up-jump-rule -2)
)

;Search for enemy ranged units

(defrule
    (up-group-size c: ranged-group1 < 1)
=>
    (up-jump-rule 4)
)

(defrule
    (goal group-micro yes)
=>
    (up-full-reset-search)
    (set-strategic-number sn-focus-player-number 1)
    (set-goal num-enemy-ranged 0)
)


(defrule
    (goal group-micro yes)
    (player-valid focus-player)
    (players-stance focus-player enemy)
=>
    (up-full-reset-search)
    (up-set-target-point ranged-group1-x)
    (up-filter-distance c: -1 c: 10)
;    (up-find-remote c: archer c: 40)
	(up-filter-include 4 -1 -1 -1)
	(up-find-remote c: all-units-class c: 5)
	(up-remove-objects search-remote object-data-range < 2)
	(up-remove-objects search-remote object-data-class == warship-class)
	(up-reset-filters)
	(up-filter-distance c: -1 c: 10)
    (up-find-remote c: archer-line c: 40)
    (up-find-remote c: monk c: 40)
    (up-find-remote c: cavalry-archer c: 40)
    (up-find-remote c: elephant-archer c: 40)
    (up-find-remote c: skirmisher-line c: 40)
    (up-find-remote c: cavalry-archer-line c: 40)
    (up-find-remote c: mangonel-line c: 40)
    (up-find-remote c: scorpion-line c: 40)
    (up-find-remote c: elephant-archer c: 40)
    (up-get-search-state local-total)
    (up-modify-goal num-enemy-ranged g:+ remote-total)
)

(defrule
    (goal group-micro yes)
    (player-valid focus-player)
    (up-compare-sn sn-focus-player-number < 17)
=>
    (up-modify-sn sn-focus-player-number c:+ 1)
    (up-jump-rule -2)
)


(defrule
    (up-set-target-object search-remote c: 0)
    (up-compare-goal num-enemy-ranged > 0)
=>
    (up-get-object-data object-data-player temporary-goal9)
)
;Set default march point



(defrule
	(up-get-fact game-time 0 temporary-goal6)
	(up-modify-goal temporary-goal6 c:mod 200)
	(up-compare-goal temporary-goal6 == 23)
=>
	(set-strategic-number waypoint-to-use 1)
)

(defrule
	(up-point-distance ranged-group1-x enemy-x < 27)
	(goal group-micro yes)
;	(timer-triggered one-min)
	(timer-triggered fifteensec)
=>
	(up-full-reset-search)
	(up-modify-goal point2-x s:= previous-point-x)
	(up-modify-goal point2-y s:= previous-point-y)
	(up-modify-sn previous-point-x g:= ranged-group1-x)
	(up-modify-sn previous-point-y g:= ranged-group1-y)
	(up-bound-point point3-x enemy-x)
	(up-bound-point point4-x enemy-x)
	(up-lerp-percent point3-x position-self-x c: 5)
	(up-cross-tiles point3-x position-self-x c: 25);recalculate waypoint2
	(up-bound-point point3-x point3-x)
	(up-lerp-percent point4-x position-self-x c: -20)
	(up-cross-tiles point4-x position-self-x c: 15);recalculate waypoint3
	(up-bound-point point4-x point4-x)
;	(up-send-flare point2-x)
;	(up-send-flare previous-point-x)
)

(defrule
	(goal group-micro yes)
	(or(goal group-action 2)
	(and(goal group-action 3)
	(players-building-type-count target-player wall-class > 0)))
	;(timer-triggered one-min)
	(timer-triggered fifteensec)
	; (up-get-fact game-time 0 temporary-goal5)
	; (up-modify-goal temporary-goal5 c:mod 30)
	; (up-compare-goal temporary-goal5 == 2)
	(up-compare-sn waypoint-to-use < 4)
	(up-point-distance ranged-group1-x point2-x < 3)
	(up-point-distance ranged-group1-x enemy-x < 28)
=>
	(up-modify-sn waypoint-to-use c:+ 1)
	(set-goal temporary-goal6 3456)
;	(chat-to-player 1 "No progress in a while, trying another angle")
	(up-jump-rule 2)
)

(defrule
	(goal group-micro yes)
	(goal group-action 2)
	(timer-triggered fifteensec)
	(up-compare-sn waypoint-to-use == 2)
	(up-point-distance ranged-group1-x point3-x < 5)
=>
	(up-modify-sn waypoint-to-use c:+ 1)
;	(up-chat-data-to-player 1 "Nothing at waypoint, go to waypoint %d" s: waypoint-to-use)
	(up-jump-rule 1)
) 

(defrule
	(goal group-micro yes)
	(goal group-action 2)
	(timer-triggered fifteensec)
	(up-compare-sn waypoint-to-use == 3)
	(up-point-distance ranged-group1-x point4-x < 5)
=>
	(up-modify-sn waypoint-to-use c:+ 1)
;	(up-chat-data-to-player 1 "Nothing at waypoint, go to waypoint %d" s: waypoint-to-use)
) 

(defrule
	(goal temporary-goal6 3456)
	(or(goal group-action 2)
	(goal group-action 3));addition for when the AI gets stuck tracking an object behind a wall
;	(up-compare-sn waypoint-to-use > 2)
=>
	(up-full-reset-search)
;	(fe-break-point 1 c:== 1 -1)
	(up-modify-sn sn-focus-player-number s:= sn-target-player-number)
	(up-set-target-point ranged-group1-x)
	(up-filter-distance c: -1 c: 7);6
	(up-find-remote c: wall-class c: 5);palisade-wall?
	(up-get-search-state local-total)
)

(defrule
	(goal temporary-goal6 3456)
	(or(goal group-action 2)
	(goal group-action 3))
	(up-compare-goal remote-total > 0)
;	(up-compare-sn waypoint-to-use > 2)
=>
	(set-goal group-action 8)
	(set-goal attempt-fire yes)
	(set-goal group-retreat no)
;	(chat-to-player 1 "Targeting wall")
	(up-jump-direct s: sn-building-jump)
)

(defrule
	;(timer-triggered one-min)
	(up-get-fact game-time 0 temporary-goal)
	(up-modify-goal temporary-goal c:mod 70)
	(or(up-compare-goal temporary-goal == 8)
	(and(up-compare-goal temporary-goal == 43)
	(and(up-compare-goal num-enemy-melee < 1)
	(up-compare-goal num-enemy-ranged < 1))))
	(or(goal group-action 2)
	(goal group-action 3))
	(goal group-micro yes)
	(up-group-size c: ranged-group1 > 0)
	(up-point-distance ranged-group1-x enemy-x < 26)
=>
	(up-full-reset-search)
	(up-set-group search-local c: ranged-group1)
;	(fe-break-point 1 c:== 1 -1)
)

(defrule
	;(timer-triggered one-min)
	(up-get-fact game-time 0 temporary-goal)
	(up-modify-goal temporary-goal c:mod 70)
	(or(up-compare-goal temporary-goal == 8)
	(and(up-compare-goal temporary-goal == 43)
	(and(up-compare-goal num-enemy-melee < 1)
	(up-compare-goal num-enemy-ranged < 1))))
	(or(goal group-action 2)
	(goal group-action 3))
	(goal group-micro yes)
	(up-group-size c: ranged-group1 > 0)
	(up-point-distance ranged-group1-x enemy-x < 26)
	(up-set-target-object search-local c: 0)
	(up-path-distance enemy-x 0 > 40);see comment
=>
	(set-goal group-action 8);attack lowest HP building/wall nearby
	(set-goal attempt-fire yes)
	(set-goal group-retreat no)
	(up-get-point position-object point-x)
;	(chat-to-all "TC is unpathable")
;	(up-send-flare enemy-x)
;	(up-send-flare point-x)
)


; (defrule
; 	(players-building-type-count target-player watch-tower > 0)
; =>
; 	(up-full-reset-search)
; 	(up-modify-sn sn-focus-player-number s:= sn-target-player-number)
; 	(up-filter-distance c: -1 c: 8)
; 	(up-bound-point point-x position-self-x);position-self-x
; 	(up-lerp-percent point-x enemy-x c: 25);check 3 quartersteps
; 	(up-set-target-point point-x)
; 	(up-find-remote c: watch-tower c: 1)
; 	;(up-reset-search 1 1 0 0)
; 	(up-filter-distance c: -1 c: 8)
; 	(up-bound-point point-x position-self-x)
; 	(up-lerp-percent point-x enemy-x c: 50);check 3 quartersteps

; 	(up-set-target-point point-x)
; 	;(up-find-remote c: watch-tower c: 1)
; 	(up-filter-distance c: -1 c: 8)
; 	(up-find-remote c: watch-tower c: 1)
; 	(up-bound-point point-x position-self-x)
; 	(up-lerp-percent point-x enemy-x c: 75);check 3 quartersteps
; 	(up-set-target-point point-x)
; 	(up-find-remote c: watch-tower c: 1)
; 	(up-bound-point point-x position-self-x)
; 	(up-lerp-percent point-x enemy-x c: 90);check 3 quartersteps
; 	(up-set-target-point point-x)
; 	(up-find-remote c: watch-tower c: 1)
; 	(up-set-target-point ranged-group1-x)
; 	(up-find-remote c: watch-tower c: 1)
; 	(up-get-search-state local-total)

; )

(defrule
	(true)
=>
	(set-goal remote-total 0)
	(set-goal temporary-goal 50)
	(up-modify-sn sn-focus-player-number s:= sn-target-player-number)
)

(defrule
	(players-building-type-count target-player watch-tower > 0)
	(goal group-micro yes)
	(up-compare-goal remote-total < 1)
	(up-compare-goal temporary-goal < 100)
=>
	(up-full-reset-search)
	(up-bound-point point-x position-self-x)
	(up-lerp-percent point-x enemy-x g: temporary-goal)
	(up-modify-goal temporary-goal c:+ 9)
	(up-set-target-point point-x)
	(up-filter-distance c: -1 c: 8)
	(up-find-remote c: watch-tower c: 1)
	(up-find-remote c: donjon c: 1)
	(up-find-remote c: castle c: 1)
	(up-get-search-state local-total)
	(up-jump-rule -1)
)
(defrule
	(players-building-type-count target-player watch-tower > 0)
	(up-compare-goal remote-total > 0)
	(up-compare-sn waypoint-to-use == 1)
	(goal group-micro yes)
=>
	(set-strategic-number waypoint-to-use 2)
)


#load-if-not-defined UP-ALLY-IN-GAME

(defrule
	(players-current-age every-enemy < castle-age)
	(up-compare-sn sn-military-superiority > -1)
=>
	(up-jump-rule 1)
)

#end-if

(defrule
	(or(town-under-attack)
	(up-compare-sn sn-military-superiority < -2))
	(goal attacking no)
	(up-group-size c: ranged-group1 > 0)
=>
	(up-full-reset-search)
	(up-bound-point walk-point-x position-self-x)
	(up-jump-rule 6)
)

(defrule
	(goal group-micro yes)
	(up-group-size c: ranged-group1 > 0)
	(goal attacking no)
	(up-compare-sn sn-military-superiority < 1);15

=>
	(up-full-reset-search)
	(up-set-target-point enemy-x)
	(up-find-local c: lumber-camp c: 5)
	(up-find-local c: mining-camp c: 5)
	(up-find-local c: town-center c: 5)
	(up-find-local c: mill c: 5)
	(up-get-search-state local-total)
	(up-set-target-point enemy-x)
	(up-clean-search search-local object-data-distance search-order-asc)
	(up-remove-objects search-local -1 > 0)
	(up-set-target-object search-local c: 0)
	(up-get-point position-object point-x)
	(up-bound-point point2-x ranged-group1-x)
	(up-lerp-tiles point2-x point-x c: 12)
	(up-lerp-percent point2-x position-self-x c: 25)
	(up-bound-point walk-point-x point2-x)
	(up-jump-rule 5);2
)
(defrule
    (goal group-micro yes)
    ;(up-compare-goal enemy-x != -1)
    ;(up-compare-goal enemy-y != -1)
    (or(and(up-group-size c: ranged-group1 < 15)
    (players-building-type-count target-player watch-tower > 0))
    (or(up-compare-sn sn-military-superiority <= -1)
    (players-military-population my-player-number <= 7)))
    (up-enemy-units-in-town >= 5)
    (strategic-number sn-maximum-town-size < 30)
    (up-point-distance ranged-group1-x position-self-x > 15)
=>
    (up-bound-point walk-point-x position-self-x)
   (up-lerp-tiles walk-point-x enemy-x c: 10) ;I think this leads to a bug
    (up-lerp-tiles walk-point-x position-self-x g: circling-distance)
    (up-jump-rule 4);1
;    (disable-self)
)
(defrule
    (goal group-micro yes)
    (up-compare-goal enemy-x != -1)
    (up-compare-goal enemy-y != -1)
    (up-compare-sn sn-military-superiority > -1)
    (players-military-population my-player-number > 6)
    (or(up-enemy-units-in-town < 5)
    (strategic-number sn-maximum-town-size >= 30))
	(strategic-number waypoint-to-use == 1)
=>
    (up-bound-point walk-point-x enemy-x)
    (up-lerp-tiles walk-point-x position-self-x g: circling-distance)
;    (disable-self)
)

(defrule
    (goal group-micro yes)
    (up-compare-goal enemy-x != -1)
    (up-compare-goal enemy-y != -1)
    (up-compare-sn sn-military-superiority > -1)
    (players-military-population my-player-number > 6)
    (or(up-enemy-units-in-town < 5)
    (strategic-number sn-maximum-town-size >= 30))
	(strategic-number waypoint-to-use == 1)
=>
    (up-bound-point walk-point-x enemy-x)
    (up-lerp-tiles walk-point-x position-self-x g: circling-distance)
;    (disable-self)
)

(defrule
    (goal group-micro yes)
    (up-compare-goal enemy-x != -1)
    (up-compare-goal enemy-y != -1)
    (up-compare-sn sn-military-superiority > -1)
    (players-military-population my-player-number > 6)
    (or(up-enemy-units-in-town < 5)
    (strategic-number sn-maximum-town-size >= 30))
	(strategic-number waypoint-to-use == 2)
=>
    (up-bound-point walk-point-x enemy-x)
	(up-lerp-percent walk-point-x position-self-x c: 5);-25, 16
	(up-cross-tiles walk-point-x position-self-x c: 25)
	(up-bound-point walk-point-x walk-point-x)
;	(chat-to-player 1 "Using waypoint to walk round")
;	(up-send-flare walk-point-x)
;    (up-lerp-tiles walk-point-x position-self-x g: circling-distance)
;    (disable-self)
)

(defrule
    (goal group-micro yes)
    (up-compare-goal enemy-x != -1)
    (up-compare-goal enemy-y != -1)
    (up-compare-sn sn-military-superiority > -1)
    (players-military-population my-player-number > 6)
    (or(up-enemy-units-in-town < 5)
    (strategic-number sn-maximum-town-size >= 30))
	(strategic-number waypoint-to-use == 3)
=>
    (up-bound-point walk-point-x enemy-x)
	(up-lerp-percent walk-point-x position-self-x c: -20);-25, 16
	(up-cross-tiles walk-point-x position-self-x c: 15)
	(up-bound-point walk-point-x walk-point-x)
;	(chat-to-player 1 "Using waypoint 2 to walk round")
;	(up-send-flare walk-point-x)
;    (up-lerp-tiles walk-point-x position-self-x g: circling-distance)
;    (disable-self)
)
(defrule
    (goal group-micro yes)
    (up-compare-goal enemy-x != -1)
    (up-compare-goal enemy-y != -1)
    (up-compare-sn sn-military-superiority > -1)
    (players-military-population my-player-number > 6)
    (or(up-enemy-units-in-town < 5)
    (strategic-number sn-maximum-town-size >= 30))
	(strategic-number waypoint-to-use == 4)
=>
    (up-bound-point walk-point-x enemy-x)
	(up-lerp-percent walk-point-x position-self-x c: -15)
	(up-cross-tiles walk-point-x position-self-x c: -17)
	(up-bound-point walk-point-x walk-point-x)
;	(chat-to-player 1 "Using waypoint 3 to walk round")
;	(up-send-flare walk-point-x)
;    (up-lerp-tiles walk-point-x position-self-x g: circling-distance)
;    (disable-self)
)
; (defrule
;     (up-point-distance walk-point-x position-self-x > 25)
;     (up-point-distance ranged-group1-x position-self-x > 15)
;     (up-group-size c: ranged-group1 < 8)
; =>
;     (up-lerp-tiles walk-point-x position-self-x c: 15)
; )

#load-if-defined DEFEND-WONDER

(defrule
    (goal group-micro yes)
    (building-type-count wonder > 0)
=>
    (up-full-reset-search)
    (up-find-local c: wonder c: 1)
    (up-set-target-object search-local c: 0)
    (up-get-point position-object point-x)
    (up-lerp-tiles point-x enemy-x c: 5)
    (up-bound-point walk-point-x point-x)
)

(defrule
    (goal group-micro yes)
    (players-building-type-count any-ally wonder > 0)
    (building-type-count wonder < 1)
=>
    (up-modify-sn sn-focus-player-number c:= this-any-ally)
    (up-full-reset-search)
    (up-find-remote c: wonder c: 1)
    (up-set-target-object search-local c: 0)
    (up-get-point position-object point-x)
    (up-lerp-tiles point-x enemy-x c: 5)
    (up-bound-point walk-point-x point-x)
)
#end-if

#load-if-defined VICTORY-STANDARD
(defrule
    (goal group-micro yes)
    (building-type-count wonder > 0)
=>
    (up-full-reset-search)
    (up-find-local c: wonder c: 1)
    (up-set-target-object search-local c: 0)
    (up-get-point position-object point-x)
    (up-lerp-tiles point-x enemy-x c: 5)
    (up-bound-point walk-point-x point-x)
)

(defrule
    (goal group-micro yes)
    (players-building-type-count any-ally wonder > 0)
    (building-type-count wonder < 1)
=>
    (up-modify-sn sn-focus-player-number c:= this-any-ally)
    (up-full-reset-search)
    (up-find-remote c: wonder c: 1)
    (up-set-target-object search-local c: 0)
    (up-get-point position-object point-x)
    (up-lerp-tiles point-x enemy-x c: 5)
    (up-bound-point walk-point-x point-x)
)
#end-if

#load-if-defined KING-OF-THE-HILL

(defrule
	(goal group-micro yes)
	(building-type-count monument-class < 1)
	(up-group-size c: ranged-group1 > 15)
=>
	(up-get-point position-center point-x)
	(up-bound-point walk-point-x point-x)
)


(defrule
    (goal group-micro yes)
    (building-type-count monument-class > 0)
=>
    (up-full-reset-search)
    (up-find-local c: monument-class c: 1)
    (up-set-target-object search-local c: 0)
    (up-get-point position-object point-x)
    (up-lerp-tiles point-x enemy-x c: 5)
    (up-bound-point walk-point-x point-x)
)
#end-if

(defrule
    (up-group-size c: ranged-group1 > 0)
    (goal group-micro yes)
=>
    (up-full-reset-search)
    (up-set-group search-local c: ranged-group1)
)

(defrule
    (up-group-size c: ranged-group1 > 0)
    (goal group-micro yes)
    (up-set-target-object search-local c: 0)
    (or(up-point-distance walk-point-x ranged-group1-x < 4)
    (and(up-path-distance walk-point-x 0 > 1000)
    (up-point-distance walk-point-x ranged-group-x < 11)))
    (up-point-distance ranged-group1-x enemy-x < 30);test
=>
    (up-cross-tiles walk-point-x enemy-x c: 8)
    (up-bound-point walk-point-x walk-point-x)
)

(defrule
    (up-compare-goal walk-point-x < 15)
    (up-compare-goal walk-point-y < 15)
    (goal group-micro yes)
=>
    (up-get-point position-flank point-x)
    (up-copy-point walk-point-x point-x)
    (up-lerp-percent walk-point-x position-self-x c: -10)
 ;   (chat-to-player my-player-number "Correcting left corner")
)

; (defrule
;     (up-point-distance walk-point-x position-self-x > 25)
;     (up-group-size c: ranged-group1 < 8)
; =>
;     (up-bound-point walk-point-x position-self-x)
; )

(defrule
    (timer-triggered fifteensec)
=>
    ;(up-send-flare walk-point-x)
    ;(up-send-flare enemy-x)
    ;(up-send-flare ranged-group1-x)
    (do-nothing)
)

;might eventually need some kind of mechanism to adjust enemy distance - maybe milsup?

(defrule
    (players-building-type-count target-player town-center > 0)
    (strategic-number sn-ten-turns == 2)
=>
;    (fe-break-point 1 c:== 1 -1)
    (up-modify-sn sn-focus-player-number s:= sn-target-player-number)
    (up-full-reset-search)
    (up-find-remote c: town-center c: 1)
    (up-set-target-object search-remote c: 0)
    (up-get-point position-object enemy-x)
)

(defrule
    (players-building-type-count target-player town-center < 1)
    (players-building-count target-player > 0)
    (strategic-number sn-ten-turns == 2)
=>
    (up-modify-sn sn-focus-player-number s:= sn-target-player-number)
    (up-full-reset-search)
    (up-find-remote c: building-class c: 1)
    (up-set-target-object search-remote c: 0)
    (up-get-point position-object enemy-x)
)

(defrule
    (current-age == feudal-age)
    (up-compare-goal enemy-x < 1)
=>
    (up-get-point position-flank enemy-x)
    (disable-self)
)

; (defrule
;     (strategic-number sn-ten-turns == 2)
; =>
;     (chat-local-to-self "here")
; )


;Centre of gravity approach

(defrule
    (up-group-size c: ranged-group1 < 1)
=>
    (up-jump-rule 6)
)

(defrule
    (goal group-micro yes)
=>
    (up-full-reset-search)
    (set-strategic-number sn-focus-player-number 1)
    (set-goal remote-total 0)
    (set-goal enemy-ranged1-x -1)
    (set-goal enemy-ranged1-y -1)
    (set-goal point-x 0)
    (set-goal point-y 0)
    (set-goal point2-x 0)
    (set-goal point2-y 0)
    (set-goal temporary-goal2 0)
    (set-goal temporary-goal3 500)
    (up-set-target-point ranged-group-x)
    (up-filter-distance c: -1 c: 65)
    (up-filter-distance c: -1 c: 65);don't include irrelevant units
)

(defrule
    (goal group-micro yes)
    (players-stance focus-player enemy)
=>
;    (up-find-remote c: archer c: 40)
    (up-find-remote c: archer-line c: 40)
    (up-find-remote c: monk c: 40)
    (up-find-remote c: cavalry-archer c: 40)
    (up-find-remote c: cavalry-archer-line c: 40)
    (up-find-remote c: elephant-archer c: 40)
    (up-find-remote c: skirmisher-line c: 40)
    (up-find-remote c: mangonel-line c: 40)
    (up-get-search-state local-total)
    (set-goal point-x 0)
    (set-goal point-y 0)
    (set-goal remote-total 0)
)

(defrule
    (goal group-micro yes)
    (player-valid focus-player)
    (strategic-number sn-focus-player-number < max-players)
=>
    (up-modify-sn sn-focus-player-number c:+ 1)
    (up-jump-rule -2)
)

(defrule
    (up-set-target-object search-remote c: 0)
    (goal group-micro yes)
=>
    (up-get-point position-object point2-x)
    (up-modify-goal point-x g:+ point2-x)
    (up-modify-goal point-y g:+ point2-y)
    (up-modify-goal temporary-goal2 c:+ 1)
    (up-get-search-state local-total)
)

(defrule
    (up-compare-goal remote-total > 0)
    (goal group-micro yes)
    (up-compare-goal temporary-goal3 > 0)
=>
    (up-remove-objects search-remote -1 c:== 0)
    (up-modify-goal temporary-goal3 c:- 1)
    (up-get-search-state local-total)
    (up-jump-rule -2)
)

(defrule
    (goal group-micro yes)
    (up-compare-goal temporary-goal2 > 0)
=>
    (up-modify-goal point-x g:/ temporary-goal2)
    (up-modify-goal point-y g:/ temporary-goal2)
)

;now find local units using same approach

(defrule
    (up-group-size c: ranged-group1 < 1)
=>
    (up-jump-rule 4)
)

(defrule
    (goal group-micro yes)
=>
    (up-full-reset-search)
    (set-goal point-x 0)
    (set-goal point-y 0)
    (set-goal point2-x 0)
    (set-goal point2-y 0)
    (set-goal temporary-goal2 0)
    (set-goal temporary-goal3 500)
    (set-goal remote-total 0)
 ;   (up-find-local c: archer c: 60)
    (up-find-local c: archer-line c: 60)
    (up-find-local c: cavalry-archer c: 60)
    (up-find-local c: skirmisher-line c: 60)
    (up-find-local c: cavalry-archer-line c: 60)
    (up-remove-objects search-local object-data-group-flag c:!= ranged-group1)
    (up-get-search-state local-total)
)

(defrule
    (goal group-micro yes)
    (up-set-target-object search-local c: 0)
=>
    (up-get-point position-object point2-x)
    (up-modify-goal point-x g:+ point2-x)
    (up-modify-goal point-y g:+ point2-y)
    (up-modify-goal temporary-goal2 c:+ 1)
    (up-get-search-state local-total)
)

(defrule
    (goal group-micro yes)
    (up-compare-goal local-total > 0)
    (up-compare-goal temporary-goal3 > 0)
=>
    (up-modify-goal temporary-goal3 c:- 1)
    (up-remove-objects search-local -1 c:== 0)
    (up-get-search-state local-total)
    (up-jump-rule -2)
)

(defrule
    (goal group-micro yes)
    (up-compare-goal temporary-goal2 > 0)
=>
    (up-modify-goal point-x g:/ temporary-goal2)
    (up-modify-goal point-y g:/ temporary-goal2)
    (up-bound-point ranged-group1-x point-x)
)

(defrule
    (or(up-group-size c: ranged-group1 < 1)
    (goal group-micro no))
=>
    (up-jump-rule 6);5
)


;Find nearest target
(defrule
    (true);additional checks
=>
    (set-goal closest-enemy-target-x 0)
    (set-goal closest-enemy-target-y 0)
    (set-goal closest-enemy-target-dist 0)
    (up-full-reset-search)
    (set-strategic-number sn-focus-player-number 0)
    (set-goal remote-total 0);1
    (up-set-target-point ranged-group1-x)
)

(defrule
	(true)
=>
	(up-filter-distance c: -1 g: following-range)
	(up-find-remote c: dangerous-animal-class c: 1)
	(up-remove-objects search-remote object-data-carry > 100)
	(set-strategic-number sn-focus-player-number 1)
)
(defrule
    (player-valid focus-player)
    (players-stance focus-player enemy);additional checks
=>
    (up-filter-distance c: -1 g: following-range) 
    (up-filter-include 4 -1 -1 -1)
    (up-find-remote c: all-units-class c: 30)
    (up-reset-filters)
    (up-filter-distance c: -1 g: following-range)
    (up-filter-include 3 -1 -1 -1)
    (up-find-remote c: all-units-class c: 20);10
	(up-reset-filters)
	(up-filter-distance c: -1 g: following-range)
	(up-find-remote c: monastery-class c: 5)
    (up-clean-search search-remote -1 search-order-asc)
    (up-clean-search search-remote object-data-distance search-order-asc)
    (up-get-search-state local-total)
;    (up-chat-data-to-player 1 "Enemy units found within following range %d" g: remote-total)
)

(defrule
    (up-compare-goal remote-total < 1)
    (player-valid focus-player)
    (strategic-number sn-focus-player-number < max-players)
=>
    (up-modify-sn sn-focus-player-number c:+ 1)
    (up-jump-rule -2)
)

(defrule
    (up-compare-goal remote-total > 0)
    (up-set-target-object search-remote c: 0)
=>
    (up-get-object-data object-data-id closest-enemy-target-id)
    (up-get-object-data object-data-distance closest-enemy-target-distance)
    (up-get-point position-object closest-enemy-target-x)
    (up-get-object-data object-data-class closest-enemy-target-class)
)

; (defrule
;     (goal group-micro yes)
; =>
;     (set-goal temporary-goal 0)
;     (up-get-group-size c: ranged-group1 temporary-goal)
;     (up-modify-goal temporary-goal g:- num-enemy-ranged)
;     (up-modify-goal group-advantage g:= temporary-goal)
; )

;Use more advantageous function that takes into account unit quality
;Weights CLASSIFIED
;Enemy melee given 0.5

(defrule
    (goal group-micro yes)
    (up-group-size c: ranged-group1 > 0)
=>
    (up-full-reset-search)
    (set-goal group-advantage 0)
    (set-goal temporary-goal 0)
    (up-set-group search-local c: ranged-group1)
    (up-get-group-size c: ranged-group1 temporary-goal)
    (up-modify-goal temporary-goal c:* 2)
    (up-remove-objects search-local object-data-type c:== archer)
    (up-get-search-state local-total)
    (up-modify-goal temporary-goal g:+ local-total)
    (up-remove-objects search-local object-data-type c:== crossbowman)
    (up-remove-objects search-local object-data-type c:== skirmisher)
    (up-get-search-state local-total)
	(up-modify-goal local-total c:* 2);new addition
    (up-modify-goal temporary-goal g:+ local-total)
    (up-remove-objects search-local object-data-type c:== arbalest)
    (up-remove-objects search-local object-data-type c:== cavalry-archer)
	(up-remove-objects search-local object-data-type c:== elite-skirmisher)
    (up-modify-goal local-total c:* 3)
    (up-modify-goal temporary-goal g:+ local-total)
	(up-get-search-state local-total);?
    (up-remove-objects search-local object-data-type c:!= heavy-cavalry-archer)
    (up-modify-goal local-total c:* 2)
    (up-modify-goal temporary-goal g:+ local-total)
    (up-modify-goal group-advantage g:+ temporary-goal)
)


(defrule
    (goal group-micro yes)
    (up-group-size c: ranged-group1 > 0)
=>
    (up-get-point-elevation ranged-group1-x temporary-goal2)
    (up-get-point-elevation closest-enemy-target-x temporary-goal3)
;    (up-send-flare closest-enemy-target-x)
;   (up-chat-data-to-player my-player-number "My elevation %d" g: temporary-goal2)
;    (up-chat-data-to-player my-player-number "Their elevation %d" g: temporary-goal3)

)

(defrule
    (up-compare-goal temporary-goal3 g:> temporary-goal2)
    (goal group-micro yes)
    (up-group-size c: ranged-group1 > 0)
    (up-compare-goal temporary-goal3 > 0)
    (or(up-compare-goal num-enemy-melee > 0)
    (up-compare-goal num-enemy-ranged > 0))
=>
    (up-modify-goal group-advantage c:* 7)
    (up-modify-goal group-advantage c:/ 10)
 ;   (up-chat-data-to-player my-player-number "Adjust for potential group elevation disadvantage %d" g: temporary-goal2)
)

(defrule
    (up-compare-goal temporary-goal2 g:> temporary-goal3)
    (goal group-micro yes)
    (up-group-size c: ranged-group1 > 0)
    (up-compare-goal temporary-goal2 > 0)
    (or(up-compare-goal num-enemy-melee > 0)
    (up-compare-goal num-enemy-ranged > 0))
=>
    (up-modify-goal group-advantage c:* 13)
    (up-modify-goal group-advantage c:/ 10)
;    (up-chat-data-to-player my-player-number "Adjust for potential group elevation advantage %d" g: temporary-goal2)
)


(defrule
    (goal group-micro yes)
    (up-group-size c: ranged-group1 > 0)
    (up-compare-goal num-enemy-ranged > 0)
    (up-modify-sn sn-focus-player-number g:= temporary-goal9)
    (strategic-number sn-focus-player-number > 0)
    (strategic-number sn-focus-player-number <= max-players)
=>
    (up-full-reset-search)
    (up-filter-include 4 -1 -1 -1)
    (up-set-target-point ranged-group-x)
    (up-filter-distance c: -1 c: 10)
    (up-find-remote c: all-units-class c: 40)
    (up-remove-objects search-remote object-data-range < 2)
)
(defrule
    (goal group-micro yes)
    (up-group-size c: ranged-group1 > 0)
    (up-compare-goal num-enemy-ranged > 0)
    (up-modify-sn sn-focus-player-number g:= temporary-goal9)
    (strategic-number sn-focus-player-number > 0)
    (strategic-number sn-focus-player-number <= max-players)
=>
;   (up-full-reset-search)
    (set-goal temporary-goal 0)
 ;   (up-set-group search-remote c: ranged-group1)
 ;   (up-get-group-size c: ranged-group1 temporary-goal)
    (up-get-search-state local-total)
    (up-modify-goal temporary-goal g:= remote-total)
    (up-modify-goal temporary-goal c:* 2)
    (up-remove-objects search-remote object-data-type c:== archer)
    (up-get-search-state local-total)
    (up-modify-goal temporary-goal g:+ remote-total)

    (up-remove-objects search-remote object-data-type c:== crossbowman)
    (up-remove-objects search-remote object-data-type c:== skirmisher);skirmisher-line
    (up-get-search-state local-total)
	(up-modify-goal local-total c:* 2);new addition
    (up-modify-goal temporary-goal g:+ remote-total)
    (up-remove-objects search-remote object-data-type c:== arbalest)
    (up-remove-objects search-remote object-data-type c:== cavalry-archer)
	(up-remove-objects search-remote object-data-type c:== elite-skirmisher)
    (up-modify-goal remote-total c:* 3)
    (up-modify-goal temporary-goal g:+ remote-total)
	(up-get-search-state local-total);?
    (up-remove-objects search-remote object-data-type c:!= heavy-cavalry-archer)
    (up-modify-goal remote-total c:* 2)
    (up-modify-goal temporary-goal g:+ remote-total)
    (up-modify-goal group-advantage g:- temporary-goal)
    (up-modify-goal group-advantage g:- num-enemy-melee)
)

(defrule
	(goal group-micro yes)
	(or(up-compare-goal num-enemy-ranged > 0)
	(up-compare-goal num-enemy-melee > 0))
	(players-building-type-count target-player watch-tower > 0)
=>
	(up-full-reset-search)
	(set-goal remote-total 0)
	(up-modify-sn sn-focus-player-number s:= sn-target-player-number)
	(up-set-target-point ranged-group1-x)
	(up-filter-distance c: 1 c: 9)
	(up-find-remote c: watch-tower c: 5)
	(up-get-search-state local-total)
	(up-set-target-object search-remote c: 0)
	(up-get-object-data object-data-garrison-count temporary-goal2)
	(up-modify-goal temporary-goal2 c:+ 1)
	(up-modify-goal remote-total c:* 4)
	(up-modify-goal remote-total g:* temporary-goal2)
	;(up-chat-data-to-player my-player-number "Adjust group advantage by %d" g: remote-total)
	(up-modify-goal group-advantage g:- remote-total)
	;(up-chat-data-to-player my-player-number "Resulting advantage %d" g: group-advantage)
)
; (defrule
;     (goal group-micro yes)
; =>
;     (up-chat-data-to-player my-player-number "I think my group advantage is %d" g: group-advantage)
; )


;Choose firing rate based on slowest unit

(defrule
    (goal group-micro yes)
    (unit-type-count-total cavalry-archer > 1)
    (up-compare-goal reload-time < 1125)
=>
    (set-goal reload-time 1125)
    (disable-self)
)

(defrule
    (goal group-micro yes)
    (unit-type-count-total cavalry-archer-line > 0)
    (up-compare-goal reload-time < 1350)
=>
    (set-goal reload-time 1350)
    (disable-self)
)


    
(defrule
    (goal group-micro yes)
    (or(unit-type-count-total archer > 1)
    (unit-type-count-total crossbowman > 1))
    (up-compare-goal reload-time < 1400)
=>
    (set-goal reload-time 1400);1400
    (disable-self)
)

(defrule
    (goal group-micro yes)
    (unit-type-count-total skirmisher-line > 1)
=>
    (set-goal reload-time 1500);1500
    (disable-self)
)


(defrule
    (up-group-size c: ranged-group1 < 1)
=>
    (up-jump-rule 4)
)

(defrule
    (goal group-micro yes)
=>
    (up-full-reset-search)
    (up-set-group search-local c: ranged-group1)
    ;(up-remove-objects search-local object-data-next-attack == 0)
	(up-modify-goal temporary-goal9 s:= turn-time-estimate)
	(up-modify-goal temporary-goal9 c:* 8)
	(up-modify-goal temporary-goal9 c:/ 10)
    (up-remove-objects search-local object-data-next-attack g:> temporary-goal9);> 0
    (up-get-search-state local-total)
)

(defrule
    (goal group-micro yes)
    (up-compare-goal local-total > 0)
    (up-compare-goal closest-enemy-target-distance g:<= firing-range)
    (or(up-compare-goal num-enemy-ranged > 0)
    (up-compare-goal num-enemy-melee > 0))
=>
    (set-goal attempt-fire yes)
)

(defrule
    (goal group-micro yes)
=>
    (up-full-reset-search)
    (up-set-group search-local c: ranged-group1)
    ;(up-remove-objects search-local object-data-next-attack == 0)
	(up-modify-goal temporary-goal9 s:= turn-time-estimate)
	(up-modify-goal temporary-goal9 c:* 8)
	(up-modify-goal temporary-goal9 c:/ 10)
	(up-remove-objects search-local object-data-next-attack g:< temporary-goal9)
   ; (up-remove-objects search-local object-data-next-attack g:> reload-time)
	(up-remove-objects search-local object-data-next-attack s:>= fd-critical-value)
    (up-get-search-state local-total)
)

(defrule
    (goal group-micro yes)
    (or(up-compare-goal closest-enemy-target-distance g:> firing-range)
    (up-compare-goal local-total > 1))
    ; (nor(players-military-population target-player < 2)
    ; (nor(players-population target-player < 20)
    ; (up-compare-goal circling-distance < 10)))
    (not(goal group-action 8))
=>
    (up-full-reset-search)
    (set-goal attempt-fire no)
)

; (defrule
;     (goal attempt-fire yes)
; =>
;     (chat-to-player my-player-number "We are trying to fire")
; )



(defrule
    (goal group-micro yes)
    (up-group-size c: ranged-group1 < 1)
    (or(unit-type-count cavalry-archer-line > 2)
    (or(unit-type-count archer-line > 2)
    (or(unit-type-count skirmisher-line > 2)
    (or(unit-type-count cavalry-archer > 2)
    (unit-type-count archer-line > 2)))))
    ; (or(players-military-population my-player-number > 6)
    ; (up-enemy-units-in-town > 2))
=>
    (up-modify-group-flag 0 c: ranged-group1)
    (up-reset-group c: ranged-group1)
    (up-full-reset-search)
    (up-filter-exclude -1 actionid-explore orderid-explore -1)
;    (up-find-local c: archer c: 40)
    (up-find-local c: skirmisher-line c: 40)
    (up-find-local c: cavalry-archer c: 40)
    (up-find-local c: archer-line c: 40)
    (up-find-local c: cavalry-archer-line c: 40)
    (up-set-target-point position-self-x)
    (up-clean-search search-local -1 search-order-asc)
    (up-clean-search search-local object-data-distance search-order-asc)
    (up-remove-objects search-local -1 > 0)
    (up-create-group 0 0 c: ranged-group1)
    (up-modify-group-flag 1 c: ranged-group1)
;   (chat-to-player my-player-number "Activating groups")
)
;Simplified micro for feeder group

(defrule
    (up-group-size c: ranged-group1 > 0)
    (up-group-size c: feeder-group > 0)
    (up-point-distance ranged-group-x feeder-group-x < 5)
    (goal group-micro yes)
=>
    (up-full-reset-search)
    (up-reset-group c: feeder-group)
    (up-modify-group-flag feeder-group c: 0)
    (chat-to-player my-player-number "Reset feeder group")
    (set-goal temporary-goal9 234569)
)

(defrule
    (goal temporary-goal9 234569)
    (goal group-micro yes)
    (up-group-size c: ranged-group1 > 0)
    (goal group-action 6)
=>
    (set-goal group-action 2);give the AI a chance to reconsider retreat
    (set-goal group-retreat no)
)

(defrule
	(goal group-micro yes)
	(up-point-distance ranged-group1-x enemy-x > 25)
	(players-building-type-count target-player castle < 1)
	(up-compare-goal sn-military-superiority > 1)
	(goal group-action 6)
	(or(timer-triggered fifteensec)
	(and(up-point-elevation ranged-group1-x > 2)
	(timer-triggered threesec)))
=>
	(set-goal group-action 2)
	(set-goal group-retreat no)
)

(defrule
    (goal group-micro yes)
    (up-group-size c: ranged-group1 > 0)
    (goal group-action 6)
    ;(timer-triggered two-mins)]
    (or(and(timer-triggered fifteensec)
    (up-point-distance ranged-group1-x position-self-x < 15))
    (timer-triggered one-min));two-mins
	(up-point-distance ranged-group1-x enemy-x > 9)
=>
    (set-goal group-action 2)
    (set-goal group-retreat no)
)

(defrule
    (up-group-size c: ranged-group1 > 0)
    (strategic-number sn-two-turns == 1)
    (goal group-micro yes)
    ; (or(up-group-size c: feeder-group < 1)
    ; (up-point-distance feeder-group-x position-self-x > 29));29
    ; (or(up-point-distance ranged-group-x position-self-x < 21)
    ; (up-group-size c: ranged-group1 < 10))
=>
    (up-modify-group-flag 0 c: ranged-group1)
    (up-reset-group c: ranged-group1)
    (up-full-reset-search)
    (up-set-target-point ranged-group-x)
    (up-filter-distance c: -1 c: 7)
;    (up-find-local c: archer c: 40)
    (up-find-local c: skirmisher-line c: 40)
    (up-find-local c: cavalry-archer c: 40)
    (up-find-local c: archer-line c: 40)
    (up-find-local c: cavalry-archer-line c: 40)
    (up-remove-objects search-local object-data-action c:== actionid-explore)
    (up-remove-objects search-local object-data-player != my-player-number)
;    (up-remove-objects search-local object-data-status != status-ready)
    (up-create-group 0 0 c: ranged-group1)
    (up-modify-group-flag 1 c: ranged-group1)
;    (chat-to-player my-player-number "Create group rule 3")
)
;Activate feeder group
(defrule
    (up-group-size c: ranged-group1 > 9)
    (up-point-distance ranged-group1-x position-self-x > 20)
    (goal group-micro yes)
;    (strategic-number sn-two-turns == 1)
    (up-group-size c: feeder-group < 1)
=>
    (up-modify-group-flag 0 c: feeder-group)
    (up-reset-group c: feeder-group)
    (up-full-reset-search)
    (up-set-target-point position-self-x)
    (up-filter-distance c: -1 c: 20)
    (up-filter-exclude -1 orderid-explore actionid-explore -1)
;    (up-find-local c: archer c: 40)
    (up-find-local c: skirmisher-line c: 40)
    (up-find-local c: cavalry-archer c: 40)
    (up-find-local c: archer-line c: 40)
    (up-find-local c: cavalry-archer-line c: 40)
    (up-remove-objects search-local object-data-action c:== actionid-explore)
    (up-remove-objects search-local object-data-group-flag c:== ranged-group1)
    (up-remove-objects search-local object-data-player != my-player-number)
;    (up-remove-objects search-local object-data-status != status-ready)
    (up-create-group 0 0 c: feeder-group)
    (up-modify-group-flag 1 c: feeder-group)
;   (chat-to-player my-player-number "Activating feeder group 1")
    (set-goal temporary-goal9 24567)
)




(defrule
    (up-group-size c: ranged-group1 > 9)
    (up-point-distance ranged-group-x position-self-x > 20)
    (goal group-micro yes)
    (up-group-size c: feeder-group > 0)
    (strategic-number sn-twenty-turns == 3)
=>
    (up-modify-group-flag 0 c: feeder-group)
    (up-reset-group c: feeder-group)
    (up-full-reset-search)
    (up-set-target-point feeder-group-x)
    (up-filter-distance c: -1 c: 7)
;    (up-find-local c: archer c: 40)
    (up-find-local c: skirmisher-line c: 40)
    (up-find-local c: cavalry-archer c: 40)
    (up-find-local c: archer-line c: 40)
    (up-find-local c: cavalry-archer-line c: 40)
    (up-remove-objects search-local object-data-group-flag c:== ranged-group1)
    (up-remove-objects search-local object-data-action c:== actionid-explore)
    (up-remove-objects search-local object-data-player != my-player-number)
;    (up-remove-objects search-local object-data-status != status-ready)
    (up-create-group 0 0 c: feeder-group)
    (up-modify-group-flag 1 c: feeder-group)
    (set-goal temporary-goal9 24567)
    (chat-to-player my-player-number "Creating group 2")
)

(defrule
    (goal temporary-goal9 24567)
    (up-set-target-object search-local c: 0)
=>
    (up-get-point position-object feeder-group-x)
)

(defrule
    (or(goal group-micro no)
    (up-group-size c: ranged-group1 < 10))
=>
    (up-modify-group-flag 0 c: feeder-group)
    (up-reset-group c: feeder-group)
)

(defrule
    (up-group-size c: ranged-group1 > 9)
    (up-group-size c: feeder-group > 0)
    (goal group-micro yes)
    (up-point-distance feeder-group-x position-self-x < 30)
=>
    (up-full-reset-search)
    (up-set-target-point position-self-x)
;    (up-filter-distance c: -1 c: 25)
    (up-filter-exclude -1 actionid-explore orderid-explore -1)
    (up-find-local c: archer c: 40)
    (up-find-local c: skirmisher-line c: 40)
    (up-find-local c: cavalry-archer c: 40)
    (up-find-local c: archer-line c: 40)
    (up-find-local c: cavalry-archer-line c: 40)
    (up-remove-objects search-local object-data-group-flag c:== ranged-group1)
    (up-remove-objects search-local object-data-group-flag c:== feeder-group)
    (up-target-point minus-x action-move -1 stance-no-attack)
    (up-target-point feeder-group-x action-move -1 stance-no-attack)
)

(defrule
    (up-group-size c: feeder-group > 0)
    (goal group-micro yes)
=>
    (up-full-reset-search)
    (up-set-group search-local c: feeder-group)
    (up-bound-point point-x position-self-x)
    (up-bound-point feeder-group-x position-self-x)
    (set-goal point2-x 0)
    (set-goal point2-y 0)
    (set-goal point-x 0)
    (set-goal point-y 0)
    (set-goal temporary-goal3 60)
    (set-goal temporary-goal4 0)
)

(defrule
    (up-group-size c: feeder-group > 0)
    (goal group-micro yes)
    (up-set-target-object search-local c: 0)
    (up-compare-goal temporary-goal3 > 0)
=>
    (up-modify-goal temporary-goal3 c:- 1)
    (up-get-point position-object point-x)
    (up-modify-goal point2-x g:+ point-x)
    (up-modify-goal point2-y g:+ point-y)
    (up-remove-objects search-local -1 == 0)
    (up-modify-goal temporary-goal4 c:+ 1)
    (up-jump-rule -1)
)

(defrule
    (up-group-size c: feeder-group > 0)
    (goal group-micro yes)
    (up-compare-goal temporary-goal4 != 0)
=>
    (up-modify-goal point2-x g:/ temporary-goal4)
    (up-modify-goal point2-y g:/ temporary-goal4)
    (up-bound-point feeder-group-x point2-x)
)

(defrule
    (up-group-size c: feeder-group > 0)
    (goal group-micro yes)
=>
    (up-full-reset-search)
    (set-strategic-number sn-focus-player-number 1)
    (up-set-target-point feeder-group-x)
    (set-goal temporary-goal4 0);we'll use this as an enemy counter to avoid using another goal
    (set-goal temporary-goal5 0)
    (up-modify-goal temporary-goal5 g:= firing-range)
    (up-modify-goal temporary-goal5 c:+ 1)
    (up-modify-goal temporary-goal5 c:max 5)
)

(defrule
    (up-group-size c: feeder-group > 0)
    (goal group-micro yes)
    (player-valid focus-player)
    (players-stance focus-player enemy)
=>
    (up-filter-include 4 -1 -1 -1)
    (up-filter-distance c: -1 g: temporary-goal5)
    (up-find-remote c: all-units-class c: 10);do we need to exclude anything?
    (up-reset-filters)
    (up-filter-distance c: -1 g: temporary-goal5)
    (up-find-remote c: villager-class c: 10)
    (up-clean-search search-remote -1 search-order-asc)
    (up-clean-search search-remote object-data-distance search-order-asc)
    (up-get-search-state local-total)
    (up-modify-goal temporary-goal4 g:= remote-total)
    (up-set-target-object search-remote c: 0)
    (up-get-object-data object-data-id temporary-goal7);this should be the last pass
)

(defrule
    (up-compare-goal temporary-goal4 < 1)
    (strategic-number sn-focus-player-number < max-players)
    (player-valid focus-player)
    (up-group-size c: feeder-group > 0)
    (goal group-micro yes)
=>
    (up-modify-sn sn-focus-player-number c:+ 1)
    (up-jump-rule -2)
)

(defrule
    (up-compare-goal temporary-goal4 > 0)
    (up-point-distance feeder-group-x ranged-group-x > 12)
    (goal group-micro yes)
    (up-group-size c: feeder-group > 0)
    (up-compare-goal block-firing-2 <= 0)
=>
    (set-goal feeder-group-action 3);2
)

(defrule
 ;   (or(up-compare-goal block-firing-2 > 0)
    (not(goal feeder-group-action 3));)
    (goal group-micro yes)
    (up-group-size c: feeder-group > 0)
=>
    (set-goal feeder-group-action 2);3
;    (up-modify-goal block-firing-2 c:- 1)
)

(defrule
    (up-compare-goal block-firing-2 > 0)
    (goal group-micro yes)
    (up-group-size c: feeder-group > 0)
=>
    (set-goal feeder-group-action 5)
    (up-modify-goal block-firing-2 c:- 1)
)

(defrule
    (up-compare-goal block-movement-2 > 0)
    (goal group-micro yes)
    (up-group-size c: feeder-group > 0)
=>
    (up-modify-goal block-movement-2 c:- 1)
    (up-modify-goal block-firing-2 c:- 1)
    (set-goal feeder-group-action 4);does nothing
)

(defrule
    (goal group-micro yes)
    (up-group-size c: feeder-group > 0)
=>
    (set-goal temporary-goal 0)
    (set-goal temporary-goal2 0)
    (set-goal temporary-goal3 0)
    (up-get-group-size c: ranged-group1 temporary-goal)
    (up-get-group-size c: feeder-group temporary-goal2)
    (up-get-group-size c: feeder-group temporary-goal3)
    (up-modify-goal temporary-goal2 c:* 3)
;    (up-chat-data-to-player my-player-number "Ranged 1 group size %d" g: temporary-goal)
;    (up-chat-data-to-player my-player-number "Feeder group 3 * size %d" g: temporary-goal2)
;    (up-chat-data-to-player my-player-number "Feeder group size %d" g: temporary-goal3)
)
;If group greater than 1/3 of main group merge



(defrule
    (up-compare-goal temporary-goal2 g:<= temporary-goal)
    (goal group-micro yes)
    (timer-triggered two-mins)
    (up-group-size c: feeder-group > 0)
=>
    (up-bound-point feeder-walk-x position-self-x)
    (up-lerp-tiles feeder-walk-x enemy-x g: temporary-goal3)
 ;   (chat-to-player my-player-number "Walk towards front of town")
)

(defrule
    (up-compare-goal temporary-goal2 g:<= temporary-goal)
    (goal group-micro yes)
    (timer-triggered threesec);fifteensec
    (up-group-size c: feeder-group > 0)
=>
    (up-cross-tiles feeder-walk-x position-self-x c: 10)
;    (up-lerp-tiles feeder-walk-x position-self-x c: 1);stop spiraling out of control
;    (chat-to-player my-player-number "Walk towards rotation by 10 tiles")
)

(defrule
    (up-point-distance feeder-walk-x position-self-x > 14)
    (goal group-micro yes)
=>
    (up-lerp-percent feeder-walk-x position-self-x c: 20)
)

(defrule
    (up-compare-goal temporary-goal2 g:> temporary-goal)
    (goal group-micro yes)
    (up-group-size c: feeder-group > 0)
;    (goal feeder-group-action 2)
=>
    (up-bound-point feeder-walk-x ranged-group1-x)
 ;   (chat-to-player my-player-number "Walk towards main group")
)
;Action 2 = walk to point

; (defrule
;     (up-group-size c: feeder-group > 0)
; =>
;     (up-chat-data-to-player my-player-number "Subgroup action %d" g: feeder-group-action)
; )

(defrule
    (goal group-micro yes)
    (up-group-size c: feeder-group > 0)
    (strategic-number sn-two-turns == 1)
    (goal feeder-group-action 2)
=>
    (up-full-reset-search)
    (up-set-group search-local c: feeder-group)
    (up-target-point minus-x action-move -1 stance-no-attack)
    (up-target-point feeder-walk-x action-move -1 stance-no-attack)
 ;   (up-send-flare feeder-walk-x)
)

;Action 3 - fire

(defrule
    (goal group-micro yes)
    (up-group-size c: feeder-group > 0)
    (goal feeder-group-action 3)
=>
    (up-full-reset-search)
    (up-set-group search-local c: feeder-group)
    (up-set-target-by-id g: temporary-goal7)
    (up-target-objects 1 action-default -1 stance-no-attack)
    (set-goal block-movement-2 2);3
    (set-goal block-firing-2 6)
)

;Action 5 - short movement

(defrule
    (or(up-group-size c: feeder-group > 5)
    (up-point-distance feeder-group-x ranged-group-x < 30))
    (goal group-micro yes)
    (up-group-size c: feeder-group > 0)
    (goal feeder-group-action 5)
=>
    (up-full-reset-search)
    (up-set-group search-local c: feeder-group)
    (up-target-point minus-x action-move -1 stance-no-attack)
    (up-target-point ranged-group-x action-move -1 stance-no-attack)
)

(defrule
    (up-group-size c: feeder-group <= 5)
    (up-point-distance feeder-group-x ranged-group-x > 29)
    (goal group-micro yes)
    (up-group-size c: feeder-group > 0)
    (goal feeder-group-action 5)
=>
    (up-full-reset-search)
    (up-set-group search-local c: feeder-group)
    (up-target-point minus-x action-move -1 stance-no-attack)
    (up-target-point position-self-x action-move -1 stance-no-attack)
)

(defrule
    (up-group-size c: feeder-group > 5)
    (strategic-number sn-twenty-turns == 6)
    (not(goal feeder-group-action 5))
    (not(goal feeder-group-action 3))
=>
    (up-full-reset-search)
    (up-set-group search-local c: feeder-group)
    (up-target-point feeder-group-x action-move -1 stance-no-attack)
    (up-target-point feeder-group-x action-move -1 stance-no-attack)
)

;TODO: add conditions to deactivate/remove groups

(defrule
    (game-time > 5)
    (goal group-micro yes)
    (up-group-size c: ranged-group1 > 0)
    (up-group-size c: feeder-group < 1)
=>
    (up-full-reset-search)
    (up-filter-exclude -1 actionid-explore orderid-explore -1 )
    (up-find-local c: archer c: 40)
    (up-find-local c: archer-line c: 40)
    (up-find-local c: cavalry-archer c: 40)
    (up-find-local c: skirmisher-line c: 40)
    (up-find-local c: cavalry-archer-line c: 40)
    (up-remove-objects search-local object-data-group-flag c:== ranged-group1)
    (up-target-point ranged-group-x action-move -1 stance-no-attack);was aggressive
)

(defrule
    (goal group-micro yes)
    (goal group-retreat no)
    (up-group-size c: ranged-group1 > 0)
    (strategic-number sn-five-turns == 1)
    (up-compare-goal closest-enemy-target-distance g:< following-range)
	(or(timer-triggered fifteensec)
	(not(goal group-action 8)))
=>
    (up-full-reset-search)
    (up-set-group search-local c: ranged-group1)
    (up-bound-point point-x ranged-group-x)
    (up-lerp-tiles point-x walk-point-x c: 10)
    (up-target-point minus-x action-move formation-line stance-no-attack);experiment with stand ground here or using box in certain situations (5-8 units)
    (up-target-point point-x action-move formation-line stance-no-attack)
    (set-goal group-action 2)
)

(defrule
    (goal group-action -1)
    (goal group-micro yes)
    (up-group-size c: ranged-group1 > 0)
    (up-compare-sn sn-military-superiority < 3)
    (timer-triggered fifteensec)
=>
    (up-full-reset-search)
    (up-bound-point point-x position-self-x)
    (generate-random-number 36)
    (up-get-fact random-number 0 temporary-goal)
    (generate-random-number 36)
    (up-get-fact random-number 0 temporary-goal2)
    (up-lerp-tiles point-x enemy-x c: 5)
    (up-modify-goal point-x g:+ temporary-goal)
    (up-modify-goal point-y g:+ temporary-goal)
    (up-modify-goal point-x c:- 18)
    (up-modify-goal point-y c:- 18)
    (up-set-group search-local c: ranged-group1)
    (up-target-point minus-x action-move formation-line -1)
    (up-target-point point-x action-move formation-line stance-no-attack)
;    (set-goal group-action 2);use?
)


(defrule
    (goal group-action -1)
    (timer-triggered two-mins)
    (goal group-micro yes)
    (up-compare-sn sn-military-superiority > 0)
    (up-group-size c: ranged-group1 > 0)
=>
    (set-goal group-action 2)
    (up-bound-point point-x ranged-group-x)
    (up-lerp-tiles point-x walk-point-x c: 10)
    (up-target-point minus-x action-move formation-line stance-no-attack)
    (up-target-point point-x action-move formation-line stance-no-attack)
)
;Follow



(defrule
    (goal group-micro yes)
    (up-group-size c: ranged-group1 > 0)
=>
    (up-bound-point point-x ranged-group1-x)
    (up-get-point-elevation point-x temporary-goal2)
    (up-bound-point point2-x point-x)
    (up-bound-point point3-x point-x)
    (up-cross-tiles point2-x closest-enemy-target-x g: multiplyer);position-self-x
    (up-modify-goal temporary-goal10 g:= multiplyer)
    (up-modify-goal temporary-goal10 c:* -1)
    (up-cross-tiles point3-x closest-enemy-target-x g: temporary-goal10);position-self-x
    (up-get-point-elevation point2-x temporary-goal3)
    (up-get-point-elevation point3-x temporary-goal4)
)

(defrule
    (goal group-micro yes)
    (up-group-size c: ranged-group1 > 0)
    (up-compare-goal temporary-goal3 g:> temporary-goal4)
=>
    (set-goal temporary-goal5 219769)
;    (up-chat-data-to-player my-player-number "Adjust course for potential elevation advantage %d" g: temporary-goal3)
)

(defrule
	(up-group-size c: ranged-group1 > 0)
=>
	(up-full-reset-search)
	(up-set-target-point ranged-group1-x)
	(up-filter-distance c: -1 g: following-range)
	(up-modify-sn sn-focus-player-number s:= sn-target-player-number)
	(up-filter-exclude -1 -1 -1 building-class)
	(up-filter-exclude -1 -1 -1 wall-class)
	(up-find-remote c: all-units-class c: 5)
	(up-get-search-state local-total)
)


(defrule
    (up-group-size c: ranged-group1 < 1)
=>
    (up-jump-rule 7)
)

(defrule
	(timer-triggered one-min)
=>
	(up-full-reset-search)
	(up-set-group search-local c: ranged-group1)
	(up-set-target-object search-local c: 0)
	(up-filter-distance c: -1 g: firing-range)
	(up-find-remote c: building-class c: 5)
	(up-find-remote c: wall-class c: 5)
	(up-clean-search search-remote object-data-hitpoints search-order-asc)
	(up-get-search-state local-total)
	(up-remove-objects search-remote -1 > 0)
)

(defrule
	(goal group-action 3)
	(timer-triggered one-min)
	(up-compare-goal remote-total > 0)
	(goal group-micro yes)
	(up-path-distance closest-enemy-target-x 0 > 30);1 maybe?	
=>
	(set-goal group-action 8)
	(up-target-objects 0 action-default -1 -1)
	(set-strategic-number ms-block-movement 1000)
	(up-jump-direct g: block-movement-goal)
)
(defrule
	(timer-triggered one-min);peform this check sparingly because up-path-distance is expensive
	(goal group-action 3)
	(goal group-micro yes)
	(up-path-distance closest-enemy-target-x 0 > 30);1 maybe?
=>
	(set-goal group-action 2)
	(up-bound-point point-x ranged-group1-x)
	(up-cross-tiles point-x ranged-group1-x c: 20)
	(up-lerp-percent point-x position-self-x c: 5)
	(set-strategic-number ms-block-movement 3000);7000
	(up-target-point point-x action-move -1 stance-no-attack)
	(chat-to-player my-player-number "Stuck tracking an inaccessible unit, reset")
	(up-jump-direct g: block-movement-goal)
)

(defrule
    (goal group-micro yes)
    (up-modify-goal temporary-goal g:= closest-enemy-target-distance)
    (up-modify-goal temporary-goal c:- 2)
	(up-compare-goal remote-total > 0)
    (up-compare-goal num-enemy-melee < 1)
    (goal group-retreat no)
    (or(strategic-number sn-two-turns == 1)
    (up-compare-goal group-action != 2))
;   (or(up-compare-goal group-advantage > 8)
;    (or(up-compare-goal num-enemy-ranged < 1)
;    (up-compare-goal firing-range < temporary-goal)))
    (or(up-compare-goal group-advantage > 0)
    (up-compare-goal num-enemy-ranged < 1))
    (up-compare-goal temporary-goal g:< following-range);is this intentional? was also firing-range
	(up-modify-goal temporary-goal c:+ 3)
    (or(up-compare-goal temporary-goal g:< firing-range);closest-enemy-target-distance
	(not(goal group-action 8)))
	(up-compare-goal closest-enemy-target-id > 0)
	(up-compare-goal closest-enemy-target-x > 0)
	(up-point-distance closest-enemy-target-x enemy-x > 5);don't follow units into the TC
=>
    (up-full-reset-search)
    (up-set-group search-local c: ranged-group1)
    (set-goal group-action 3)
    (up-bound-point point-x closest-enemy-target-x)
    (up-lerp-tiles point-x ranged-group-x c: 2)
    (up-target-point minus-x action-move formation-line stance-no-attack)
    (up-target-point point-x action-move formation-line stance-no-attack)
)

(defrule
    (goal group-micro yes)
    ;(strategic-number sn-twenty-turns == 18)
	(timer-triggered fifteensec)
=>
    (up-modify-goal multiplyer g:neg multiplyer)
)

(defrule    
    (goal group-micro yes)
    (up-modify-goal temporary-goal g:= firing-range)
    (up-modify-goal temporary-goal c:+ 2)
    (up-compare-goal num-enemy-melee < 1)
    (goal group-retreat no)
    (up-compare-goal num-enemy-ranged > 1)
    (up-compare-goal closest-enemy-target-distance < temporary-goal)
    (or(strategic-number sn-five-turns == 0)
    (up-compare-goal group-action != 4))
    (up-compare-goal group-advantage <= 10);8
    (up-group-size c: ranged-group1 > 0)
    (up-compare-goal closest-enemy-target-distance > 0)
    (not(goal temporary-goal5 219769))
=>
    (up-full-reset-search)
    (up-set-group search-local c: ranged-group1)
    (set-goal group-action 4)
    (up-bound-point point-x ranged-group-x)
    ;(up-send-flare point-x)
    ;(up-cross-tiles point-x ranged-group-x g: multiplyer)

    (up-cross-tiles point-x closest-enemy-target-x g: multiplyer);position-self-x
    ;(up-send-flare point-x)
	(up-remove-objects search-local object-data-next-attack s:> fd-critical-value)
    (up-target-point minus-x action-move formation-line stance-no-attack)
    (up-target-point point-x action-move formation-line stance-no-attack)
)

(defrule    
    (goal group-micro yes)
    (up-modify-goal temporary-goal g:= firing-range)
    (up-modify-goal temporary-goal c:+ 2)
    (up-compare-goal num-enemy-melee < 1)
    (goal group-retreat no)
    (up-compare-goal num-enemy-ranged > 1)
    (up-compare-goal closest-enemy-target-distance < temporary-goal)
    (or(strategic-number sn-five-turns == 0)
    (up-compare-goal group-action != 4))
    (up-compare-goal group-advantage <= 8)
    (up-group-size c: ranged-group1 > 0)
    (up-compare-goal closest-enemy-target-distance > 0)
    (goal temporary-goal5 219769)
=>
    (up-full-reset-search)
    (up-set-group search-local c: ranged-group1)
    (set-goal group-action 4)
    (up-bound-point point-x ranged-group-x)
    ;(up-send-flare point-x)
    ;(up-cross-tiles point-x ranged-group-x g: multiplyer)
    (up-modify-goal multiplyer c:* -1)
    (up-cross-tiles point-x closest-enemy-target-x g: multiplyer);position-self-x
	(up-remove-objects search-local object-data-next-attack s:> fd-critical-value)
    ;(up-send-flare point-x)
    (up-target-point minus-x action-move formation-line stance-no-attack)
    (up-target-point point-x action-move formation-line stance-no-attack)
)

; (defrule
; 	(goal group-micro yes)
; 	;(up-compare-goal group-advantage > 100)
; 	;(up-compare-goal num-enemy-melee > 0)
; 	(goal attempt-fire no)
; 	(up-group-size c: ranged-group1 > 0)
; 	(up-compare-goal closest-enemy-target-class == villager-class)
; 	(up-point-distance ranged-group1-x enemy-x < 9)
; =>
;      (up-full-reset-search)
;     (up-set-group search-local c: ranged-group1)
;     (up-bound-point point-x ranged-group-x)
;     (up-lerp-tiles point-x enemy-x c: 3)
;     (up-target-point minus-x action-move formation-line stance-no-attack)
;     (up-target-point point-x action-move formation-line stance-no-attack)
;     (set-goal group-action 5)
; 	(up-jump-rule 1)
; )

(defrule
    (goal group-micro yes)
    (up-group-size c: ranged-group1 > 0)
    (up-compare-goal num-enemy-melee > 0)
    (goal attempt-fire no)
=>
    (up-full-reset-search)
    (up-set-group search-local c: ranged-group1)
    (up-bound-point point-x ranged-group-x)
    (up-lerp-tiles point-x position-self-x c: 8)
    (up-target-point minus-x action-move formation-line stance-no-attack)
    (up-target-point point-x action-move formation-line stance-no-attack)
    (set-goal group-action 5)
)

(defrule
    (goal group-micro yes)
    (up-group-size c: ranged-group1 > 0)
    (up-point-distance ranged-group-x position-self-x > 10)
    (or(up-compare-goal group-advantage < -3);-5
	(and(up-point-distance ranged-group1-x position-self-x > 30)
	(up-group-size c: ranged-group1 < 5)))
=>
    (set-goal group-action 6)
    (set-goal group-retreat yes)
)

(defrule
    (goal group-micro yes)
    (up-group-size c: ranged-group1 > 0)
    (up-compare-sn sn-military-superiority < -1)
    (up-point-distance ranged-group-x position-self-x > 20)
    (or(players-unit-type-count target-player scout-cavalry-line > 1)
    (or(players-unit-type-count target-player militiaman-line > 1)
    (players-unit-type-count target-player knight-line > 1)))
=>
    (set-goal group-action 6)
    (set-goal group-retreat yes)
)

(defrule
	(goal group-micro yes)
	(or(up-research-status c: ri-fletching == research-pending)
	(or(up-research-status c: ri-bodkin-arrow == research-pending)
	(up-research-status c: ri-bracer == research-pending)))
	(building-type-count blacksmith == 1)
=>
	(up-full-reset-search)
	(up-find-local c: blacksmith c: 1)
	(up-set-target-object search-local c: 0)
	(set-goal temporary-goal2 3456)
)

(defrule
	(goal temporary-goal2 3456)
	(goal group-micro yes)
	(up-group-size c: ranged-group1 > 0)
	(or(up-compare-goal num-enemy-melee > 0)
	(up-compare-goal num-enemy-ranged > 0))
	(up-compare-goal group-advantage < 14)
	(up-point-distance ranged-group1-x position-self-x > 9)
	(up-object-data object-data-progress-value < 80)
=>
	(set-goal group-action 6)
	(set-goal group-retreat yes)
	(up-jump-rule 1)
)

(defrule
	(goal temporary-goal2 3456)
	(goal group-micro yes)
	(up-group-size c: ranged-group1 > 0)
	(up-object-data object-data-progress-value > 95)
	(goal group-action 6)
	(up-compare-sn sn-military-superiority > -1)
=>
	(set-goal group-action 2)
	(set-goal group-retreat no)
)

(defrule
    (goal group-micro yes)
    (unit-type-count-total archer-line < 1)
    (unit-type-count-total cavalry-archer-line < 1)
    (up-group-size c: ranged-group1 > 0)
    (up-group-size c: ranged-group1 < 8);9
    (up-compare-sn sn-military-superiority < 2)
	(up-group-size c: melee-group1 < 1)
    (up-point-distance ranged-group-x position-self-x > 25)
=>
    (set-goal group-action 6)
    (set-goal group-retreat yes)
)

(defrule
    (goal group-micro yes)
    (or(up-group-size c: ranged-group1 < 10);20
	(and(up-projectile-detected projectile-fortification < 500)
	(up-group-size c: ranged-group1 < 20)))
    (players-building-type-count target-player watch-tower > 0)
    (goal group-action 8)
    (up-point-distance ranged-group1-x position-self-x > 20)
=>
    (set-goal group-action 6)
    (set-goal group-retreat yes)
)
(defrule
    (goal group-micro yes)
    (up-group-size c: ranged-group1 > 0)
    (or(and(up-point-distance ranged-group-x enemy-x < 7)
    (players-building-type-count target-player town-center > 0))
    (up-projectile-detected projectile-town-center < 1500))
 ;   (up-projectile-detected projectile-fortification > 2)))
=>
    (set-goal group-action 6)
    (set-goal group-retreat yes)
; ;    (set-goal block-movement 40)
;     (up-full-reset-search)
;     (up-set-group search-local c: ranged-group1)
;     (up-target-point minus-x action-move formation-flank stance-no-attack)
;     (up-target-point position-self-x action-move formation-flank stance-no-attack)
    (chat-to-player my-player-number "retreat from TC")
)

(defrule
    (players-building-type-count target-player castle > 0)
=>
    (up-full-reset-search)
    (up-set-target-point ranged-group1-x)
    (up-filter-distance c: -1 c: 40)
    (up-find-remote c: castle c: 5)
    (up-clean-search search-remote object-data-distance search-order-asc)
    (up-set-target-object search-remote c: 0)
	(up-get-search-state local-total)
)

(defrule
    (goal group-micro yes)
    (up-group-size c: ranged-group1 > 0)
    (up-point-distance ranged-group-x enemy-x < 50)
    (players-building-type-count target-player castle > 0)
    (or(up-projectile-detected projectile-castle < 1500)
 ;   (up-projectile-detected projectile-fortification > 2)))
	(up-compare-goal remote-total > 0))
	(up-point-distance ranged-group1-x position-self-x > 10)
=>
    (set-goal group-action 6)
    (set-goal group-retreat yes)
;    (set-goal block-movement 40)
    (up-full-reset-search)
    (up-set-group search-local c: ranged-group1)
    (up-target-point minus-x action-move formation-flank stance-no-attack)
    (up-target-point position-self-x action-move formation-flank stance-no-attack)
    (chat-to-player my-player-number "retreat from castle")
)

(defrule
    (goal group-micro yes)
    (up-group-size c: ranged-group1 > 0)
=>
    (up-full-reset-search)
    (up-modify-sn sn-focus-player-number s:= sn-target-player-number)
    (up-set-group search-local c: ranged-group1-x)
    (generate-random-number 500)
    (up-get-group-size c: ranged-group1 temporary-goal)
    (up-get-fact random-number 0 temporary-goal2)
    (up-modify-goal temporary-goal2 g:mod temporary-goal)
    (up-set-target-object search-local g: temporary-goal2)
    (up-filter-distance c: -1 c: 8)
)

(defrule
    (goal group-micro yes)
    (up-find-remote c: town-center c: 1)
    (up-group-size c: ranged-group1 > 0)
    (not(goal group-action 6))
=>
    ; (up-full-reset-search)
    ; (up-set-group search-local c: ranged-group1)
    ; (up-target-point minus-x action-move formation-flank stance-no-attack)
    ; (up-target-point position-self-x action-move formation-flank stance-no-attack)
    (chat-to-player my-player-number "retreat from TC 2")
)
    
(defrule
    (goal group-micro yes)
    (up-group-size c: ranged-group1 > 0)
    (or(up-group-size c: ranged-group1 < 15)
    (up-research-status c: ri-bodkin-arrow <= research-pending))
    (players-unit-type-count target-player mangonel-line > 0)
=>
    (up-full-reset-search)
    (up-modify-sn sn-focus-player-number s:= sn-target-player-number)
    (up-set-target-point ranged-group1-x)
    (up-filter-distance c: -1 c: 11)
    (up-find-remote c: mangonel-line c: 1)
    (up-get-search-state local-total)
)

(defrule
    (goal group-micro yes)
    (up-group-size c: ranged-group1 > 0)
    (or(up-group-size c: ranged-group1 < 15)
    (up-research-status c: ri-bodkin-arrow <= research-pending))
    (players-unit-type-count target-player mangonel-line > 0)
    (up-compare-goal remote-total > 0)
=>
    (set-goal group-action 6)
    (set-goal group-retreat yes)
    (set-goal block-movement 40)
    (up-full-reset-search)
    (up-set-group search-local c: ranged-group1)
    (up-target-point minus-x action-move formation-flank stance-no-attack)
    (up-target-point position-self-x action-move formation-flank stance-no-attack)
    (chat-to-player my-player-number "retreat from mangy")
)

(defrule
    (goal group-action 6)
=>
    (up-modify-sn sn-focus-player-number s:= sn-target-player-number)
    (up-set-target-point ranged-group1-x)
    (up-filter-distance c: -1 c: 12)
    (up-find-remote c: mangonel-line c: 1)
    (up-find-remote c: town-center c: 1)
    (up-find-remote c: castle c: 1)
    (up-find-remote c: watch-tower c: 1)
    (up-get-search-state local-total)
    (up-get-point-elevation ranged-group1-x temporary-goal)
    (up-get-point-elevation closest-enemy-target-x temporary-goal2)
)

(defrule
    (up-compare-goal remote-total < 1)
    (up-group-size c: ranged-group1 > 5)
    (up-point-distance ranged-group-x enemy-x > 14)
    (up-compare-goal temporary-goal g:> temporary-goal2)
    (up-compare-sn sn-military-superiority > -4)
    (goal group-action 6)
    (up-compare-goal group-advantage > 0)
    (or(current-age >= castle-age)
    (players-current-age target-player < castle-age))
    (up-compare-goal temporary-goal > 2)
    (up-compare-goal closest-enemy-target-x > 5)
=>
    (set-goal group-action 2)
    (set-goal group-retreat no)
    (chat-to-player my-player-number "Reconsider retreat: advantageous elevation")
)

(defrule
	(up-group-size c: ranged-group1 > 0)
	(goal group-micro yes)
	(goal group-action 6)
=>
	(up-set-group search-local c: ranged-group1)
	(up-set-target-object search-local c: 0)
	(up-get-point position-object point-x)
	(up-get-object-data object-data-move-x point2-x)
	(up-get-object-data object-data-move-y point2-y)
)


(defrule
	(up-group-size c: ranged-group1 > 0)
	(goal group-micro yes)
	(goal group-action 6)
	(up-point-distance point-x point2-x < 3)
=>
	(set-goal group-action 2)
	(set-goal group-retreat no)
	(chat-to-player my-player-number "Units stuck; abort retreat")
)

(defrule
    (goal group-micro yes)
    (up-group-size c: ranged-group1 > 0)
    (up-point-distance ranged-group-x position-self-x <= 6)
;    (up-compare-goal group-advantage < -5)
    (up-compare-goal group-action != 7)
    (up-compare-goal group-action != 4)
    (up-compare-goal group-action != 5)
=>
    (set-goal group-action 7)
    (set-goal group-retreat no)
    (set-goal attempt-fire yes)
)

(defrule
    (goal group-micro yes)
    (up-group-size c: ranged-group1 > 0)
    (or(up-compare-goal circling-distance < 5);6
    (or(and(players-military-population every-enemy < 2)
    (game-time > 900))
    (players-population every-enemy < 20)))
    (up-compare-goal num-enemy-melee < 1)
    (up-compare-goal num-enemy-ranged < 1)
    (not(goal group-action 6))
=>
    (up-full-reset-search)
    (set-goal group-action 8)
    (set-goal group-retreat no)
    (set-goal attempt-fire yes)
)



#load-if-not-defined UP-MULTIPLE-ENEMIES

(defrule
	(players-military-population target-player < 10)
	(up-compare-sn sn-military-superiority > 2)
	(up-point-distance point-x enemy-x < 5)
	(not(goal group-action 6))
	(up-compare-goal num-enemy-melee < 1)
	(up-compare-goal num-enemy-ranged < 1)
	(goal group-micro yes)
	(up-group-size c: ranged-group1 > 0)
=>
	(up-full-reset-search)
	(set-goal group-action 8)
	(set-goal group-retreat no)
	(set-goal attempt-fire yes)
)

#end-if


(defrule
    (goal group-micro yes)
    (up-group-size c: ranged-group1 > 0)
=>
    (up-full-reset-search)
    (up-modify-sn sn-focus-player-number s:= sn-target-player-number)
    (up-filter-distance c: -1 c: 10)
    (up-set-target-point ranged-group1-x)
    (up-find-remote c: mangonel-line c: 1)
    (up-get-search-state local-total)
	(up-modify-goal temporary-goal8 g:= remote-total)
)

(defrule
    (goal group-micro yes)
	(up-group-size c: ranged-group1 > 0)
=>
	(up-full-reset-search)
	(up-set-target-point ranged-group1-x)
	(up-filter-distance c: -1 c: 5)
	(up-find-resource c: wood c: 5)
	(up-find-remote c: building-class c: 5)
	(up-find-remote c: wall-class c: 5)
	(up-get-search-state local-total)
)

(defrule
	(up-compare-goal remote-total > 4);4
	(up-compare-goal temporary-goal8 > 0)
	(not(goal group-action 6))
=>
	(up-full-reset-search)
	(set-goal group-action 6)
	(set-goal group-retreat yes)
	(set-goal attempt-fire no)
	(up-set-group search-local c: ranged-group1)
	(up-target-point position-self-x action-move -1 -1)
;	(chat-to-all "Too cramped for split micro to work; retreat")
	(up-jump-rule 1)
)
(defrule
    (goal group-micro yes)
    (up-group-size c: ranged-group1 > 14)
    (research-completed ri-bodkin-arrow)
    (players-unit-type-count target-player mangonel-line > 0)
    ;(up-compare-goal remote-total > 0)
	(up-compare-goal temporary-goal8 > 0)
=>
    (up-full-reset-search)
    (set-goal group-action 9)
    (set-goal group-retreat no)
    (set-goal attempt-fire yes)
;    (fe-break-point 1 c:== 1 -1)
)

(defrule
	(goal group-micro yes)
	(up-group-size c: ranged-group1 > 0)
=>
	(up-full-reset-search)
	(set-strategic-number sn-focus-player-number 0)
	(up-set-target-point ranged-group1-x)
	(up-filter-distance c: -1 c: 8)
	(up-find-remote c: dangerous-animal-class c: 10)
	(up-remove-objects search-remote object-data-carry > 101);boars share the same class!
	(up-get-search-state local-total)
)
(defrule
	(goal group-micro yes)
	(up-group-size c: ranged-group1 > 0)
	(up-compare-goal remote-total > 0)
	(not(goal group-action 6))
=>
	(up-full-reset-search)
	(up-bound-point point-x ranged-group1-x)
	(up-lerp-tiles point-x enemy-x c: 2)
	(up-set-group search-local c: ranged-group1)
	(up-target-point point-x action-attack-move -1 stance-aggressive)
	(set-goal group-action 10)
	(set-goal group-retreat no)
	(set-goal attempt-fire yes)
	(set-strategic-number ms-block-movement 3850)
)
(defrule
    (goal group-action 6)
    (goal group-retreat yes)
    (goal group-micro yes)
=>
    (set-strategic-number sn-focus-player-number 1)
    (set-goal remote-total 0)
    (set-goal temporary-goal 0)
    (set-goal temporary-goal2 0)
    (set-goal temporary-goal3 0)
    (set-goal temporary-goal4 1)
)

(defrule
    (goal group-action 6)
    (goal group-retreat yes)
    (goal group-micro yes)
    (players-stance focus-player enemy)
    (player-valid focus-player)
=>
    (up-full-reset-search)
    (up-set-target-point ranged-group1-x)
    (up-filter-distance c: -1 c: 10)
    (up-find-remote c: archer c: 40)
    (up-find-remote c: archer-line c: 40)
    (up-find-remote c: monk c: 40)
    (up-find-remote c: cavalry-archer c: 40)
    (up-find-remote c: elephant-archer c: 40)
    (up-find-remote c: skirmisher-line c: 40)
    (up-find-remote c: cavalry-archer-line c: 40)
    (up-find-remote c: mangonel-line c: 40)
    (up-find-remote c: scorpion-line c: 40)
    (up-find-remote c: elephant-archer c: 40)
    (up-get-search-state local-total)
    (up-modify-goal temporary-goal g:= remote-total)
)

(defrule
    (up-compare-goal remote-total > 0)
    (up-set-target-object search-remote c: 0)
    (goal group-action 6)
    (goal group-retreat yes)
    (goal group-micro yes)
=>
    (up-get-object-data object-data-player temporary-goal2)
)

(defrule
    (goal temporary-goal2 0)
    (player-valid focus-player)
    (strategic-number sn-focus-player-number < max-players)
    (goal group-action 6)
    (goal group-retreat yes)
    (goal group-micro yes)
=>
    (up-modify-sn sn-focus-player-number c:+ 1)
    (up-jump-rule -2)
)

(defrule
    (goal group-action 6)
    (goal group-retreat yes)
    (goal group-micro yes)
    (up-projectile-detected projectile-any < 500)
=>
    (up-get-projectile-player projectile-any temporary-goal3)
)
(defrule
    (goal group-action 6)
    (goal group-retreat yes)
    (goal group-micro yes)
    (or(up-projectile-detected projectile-any < 500)
	(or(up-projectile-detected projectile-siege < 500)
	(or(up-projectile-detected projectile-town-center < 500)
	(up-projectile-detected projectile-fortification < 500))))
;    (up-compare-goal temporary-goal3 g:== temporary-goal2)
	(up-get-fact game-time 0 temporary-goal5)
	(up-modify-goal temporary-goal5 c:mod 10)
	(up-compare-goal temporary-goal5 != 8)
	(up-compare-goal temporary-goal5 != 7)
=>
    (set-goal temporary-goal4 2)
)

(defrule
	(goal group-action 6)
	(goal group-retreat yes)
	(goal group-micro yes)
	(up-pending-objects c: watch-tower-building > 0)
=>
	(up-full-reset-search)
	(up-filter-status c: status-pending c: list-active)
	(up-find-status-local c: watch-tower c: 1)
	(up-set-target-object search-local c: 0)
	(up-get-point position-object point4-x)
	(up-jump-rule 2)
)

(defrule
    (goal group-action 6)
    (goal group-retreat yes)
    (goal group-micro yes)
    (up-point-distance ranged-group-x feeder-group-x < 25)
    (up-group-size c: feeder-group-x > 0)
=>
    (up-bound-point point4-x feeder-group-x)
)

(defrule
    (goal group-action 6)
    (goal group-retreat yes)
    (goal group-micro yes)
    (or(up-point-distance ranged-group-x feeder-group-x >= 25)
    (up-group-size c: feeder-group-x < 1))
=>
    (up-bound-point point4-x position-self-x)
)
    
(defrule
    (goal group-action 6)
    (goal group-retreat yes)
    (goal group-micro yes)
    (goal temporary-goal4 2)
    (up-group-size c: ranged-group1 > 1)
=>
    (up-set-group search-local c: ranged-group1);new
    (up-target-point minus-x action-move formation-flank stance-no-attack)
    (up-target-point point4-x action-move formation-flank stance-no-attack);position-self-x
 ;   (up-send-flare point4-x)
)

(defrule
    (goal group-micro yes)
    (up-group-size c: ranged-group1 > 1)
    (goal group-action 6)
    (goal group-retreat yes)
    (goal group-micro yes)
    (goal temporary-goal4 1)
=>
    (up-full-reset-search)
    (up-set-group search-local c: ranged-group1);new
    (up-target-point minus-x action-move formation-line stance-no-attack)
    (up-target-point point4-x action-move formation-line stance-no-attack)
  ;  (up-send-flare point4-x)
)

(defrule
    (goal group-micro yes)
    (goal group-retreat no)
    (up-group-size c: ranged-group1 > 0)
    (goal attempt-fire yes)
    (up-compare-goal closest-enemy-target-id >= 0)
    (or(up-compare-goal num-enemy-melee > 1)
    (up-compare-goal num-enemy-ranged > 1))
=>
    (up-full-reset-search)
;    (fe-break-point 1 c:== 1 -1)
    (set-goal temporary-goal 50)
    (set-goal temporary-goal2 0)
    (set-goal temporary-goal3 0)
    (set-goal temporary-goal4 1)
    (up-set-target-by-id g: closest-enemy-target-id)
    (up-get-object-data object-data-hitpoints temporary-goal)
    (up-set-group search-local c: ranged-group1)
    (up-get-point position-object point3-x)
    (up-set-target-point point3-x)
    (up-remove-objects search-local object-data-distance g:>= firing-range)
    (up-get-search-state local-total)
    (up-remove-objects search-local -1 >= 15);don't sort through too many units
    (up-clean-search search-local object-data-base-attack search-order-asc)

    (up-set-target-object search-local c: 0)
    (up-get-object-data object-data-base-attack temporary-goal2)
    (up-get-object-data object-data-pierce-armor temporary-goal4)
    (up-modify-goal temporary-goal2 g:- temporary-goal4)
    (up-modify-goal temporary-goal3 g:= local-total)
    (up-modify-goal temporary-goal2 g:* temporary-goal3)
    (up-modify-goal temporary-goal4 g:= temporary-goal)
    (up-modify-goal temporary-goal4 c:* 3)
    (up-modify-goal temporary-goal c:* 2)
)

(defrule
    (up-group-size c: ranged-group1 < 10)
=>
    (up-jump-rule 4)
)

(defrule
    (goal group-micro yes)
    (goal group-retreat no)
    (up-group-size c: ranged-group1 > 20)
    (goal attempt-fire yes)
    (up-compare-goal closest-enemy-target-id >= 0)

	(up-compare-goal num-enemy-melee < 1)
	(up-compare-goal num-enemy-ranged > 3)
    (not(goal group-action 9))
=>
    (up-full-reset-search)
    (up-set-group search-local c: ranged-group1)
    (up-set-target-object search-local c: 0)
    (up-get-object-data object-data-id temporary-goal5)
    (up-remove-objects search-local -1 == 0)
	(up-remove-objects search-local object-data-next-attack s:> turn-time-estimate)
    (up-set-target-by-id g: closest-enemy-target-id)
	(up-bound-point point-x ranged-group1-x)
	(up-cross-tiles point-x closest-enemy-target-x g: multiplyer)
	(up-lerp-tiles point-x position-self-x c: 1)
    (up-target-point point-x action-attack-move formation-line stance-aggressive)
    (up-reset-search 1 1 0 0)
    (up-add-object-by-id search-local g: temporary-goal5)
	(up-remove-objects search-local object-data-next-attack s:> fd-critical-value)
    (up-target-objects 1 action-default -1 stance-no-attack)
    (set-goal group-action 7)
 ;   (chat-to-player 1 "attack move micro")
    (set-goal temporary-goal6 24689)
	(set-strategic-number ms-block-movement 850)
    (up-jump-rule 4)
)

(defrule
    (goal group-micro yes)
    (goal group-retreat no)
    (up-group-size c: ranged-group1 > 0)
    (goal attempt-fire yes)
    (up-compare-goal closest-enemy-target-id >= 0)
    (up-compare-goal temporary-goal g:< temporary-goal2)
    (up-compare-goal temporary-goal4 g:> temporary-goal2)
    (or(up-compare-goal num-enemy-melee > 1)
    (up-compare-goal num-enemy-ranged > 1))
    (not(goal group-action 9))
=>
    (up-full-reset-search)
    (up-set-group search-local c: ranged-group1)
    (up-set-target-object search-local c: 0)
    (up-get-object-data object-data-id temporary-goal5)
    (up-remove-objects search-local -1 == 0)
    (up-set-target-by-id g: closest-enemy-target-id)
    (up-target-objects 0 action-stop formation-line stance-aggressive)
    (up-reset-search 1 1 0 0)
    (up-add-object-by-id search-local g: temporary-goal5)
    (up-target-objects 1 action-default -1 stance-no-attack)
    (set-goal group-action 7)
;    (chat-to-player 1 "stop micro")
    (set-goal temporary-goal6 24689)
    (up-jump-rule 3)
)

(defrule
    (goal group-micro yes)
    (goal group-retreat no)
    (up-group-size c: ranged-group1 > 0)
    (goal attempt-fire yes)
    (up-compare-goal closest-enemy-target-id >= 0)
    (up-compare-goal temporary-goal g:< temporary-goal2)
    (up-compare-goal temporary-goal4 g:< temporary-goal2)
    (up-compare-goal num-enemy-melee > 1)
        (not(goal group-action 9))
=>
    (up-full-reset-search)
    (up-set-group search-local c: ranged-group1)
    ;(up-set-target-object search-local c: 0)
    ;(up-get-object-data object-data-id temporary-goal5)
    ;(up-remove-objects search-local -1 == 0)
    ;(up-set-target-by-id g: closest-enemy-target-id)
    (up-bound-point point3-x ranged-group1-x)
    (up-lerp-tiles point3-x position-self-x c: 3)
    (up-target-point point3-x action-attack-move formation-line stance-aggressive)
    (up-reset-search 1 1 0 0)
    ;(up-add-object-by-id search-local g: temporary-goal5)
    ;(up-target-objects 1 action-default -1 stance-no-attack)
    (set-goal group-action 7)
 ;   (chat-to-player my-player-number "attack move micro")
    (set-goal temporary-goal6 24670)
    (up-jump-rule 2)
)

(defrule
    (goal group-micro yes)
    (goal group-retreat no)
    (up-group-size c: ranged-group1 > 0)
    (goal attempt-fire yes)
    (up-compare-goal closest-enemy-target-id >= 0)
    (up-compare-goal temporary-goal g:< temporary-goal2)
    (up-compare-goal temporary-goal4 g:< temporary-goal2)
    (up-compare-goal num-enemy-ranged > 1)
    (not(goal group-action 9))
=>
    (up-full-reset-search)
    (up-set-group search-local c: ranged-group1)
    ;(up-set-target-object search-local c: 0)
    ;(up-get-object-data object-data-id temporary-goal5)
    ;(up-remove-objects search-local -1 == 0)
    ;(up-set-target-by-id g: closest-enemy-target-id)
    (up-bound-point point3-x ranged-group1-x)
    (up-cross-tiles point3-x closest-enemy-target-x g: multiplyer)
    (up-lerp-tiles point3-x closest-enemy-target-x c: 1)
    (up-target-point point3-x action-attack-move formation-line stance-aggressive)
    (up-reset-search 1 1 0 0)
    ;(up-add-object-by-id search-local g: temporary-goal5)
    ;(up-target-objects 1 action-default -1 stance-no-attack)
    (set-goal group-action 7)
 ;   (chat-to-player my-player-number "attack move micro")
    (set-goal temporary-goal6 24670)
    (up-jump-rule 1)
)


(defrule
    (goal group-micro yes)
    (goal group-retreat no)
    (up-group-size c: ranged-group1 > 0)
    (goal attempt-fire yes)
    (up-compare-goal closest-enemy-target-id >= 0)
    (not(goal group-action 9))
	(not(goal group-action 8));test
=>
    (up-full-reset-search)
    (up-set-group search-local c: ranged-group1)
    (up-set-target-by-id g: closest-enemy-target-id)
    
    (up-target-objects 1 action-default formation-line stance-no-attack)
    (set-goal group-action 7)
)

(defrule
    (up-compare-sn sn-target-player-number < 0)
=>
    (up-find-player enemy find-closest temporary-goal5)
    (up-modify-sn sn-target-player-number g:= 45)
)

(defrule
	(true)
=>
	(up-get-rule-id temporary-goal)
	(up-modify-sn sn-building-jump g:= temporary-goal)
)
(defrule
    (goal group-micro yes)
    (goal group-retreat no)
    (up-group-size c: ranged-group1 > 1)
    (goal attempt-fire yes)
    (goal group-action 8)
=>
    (up-full-reset-search)
    (up-set-group search-local c: ranged-group1)
    (up-modify-sn sn-focus-player-number s:= sn-target-player-number)
    (up-set-target-point ranged-group1-x)
	(up-remove-objects search-local object-data-next-attack s:> fd-critical-value)
;    (up-chat-data-to-player my-player-number "Focus player %d" s: sn-focus-player-number)
    (up-reset-filters)
    (up-filter-distance c: -1 c: 15)
    (up-find-remote c: building-class c: 10)
    (up-find-remote c: farm-class c: 10)
    (up-find-remote c: wall-class c: 10)
    (up-clean-search search-remote object-data-hitpoints search-order-asc)
    (set-goal temporary-goal5 2468)
)

(defrule
    (goal group-micro yes)
    (goal group-retreat no)
    (up-group-size c: ranged-group1 > 1)
    (goal attempt-fire yes)
    (goal group-action 8)
    (goal temporary-goal5 2468)
    (up-set-target-object search-remote c: 0)
=>
    (up-target-objects 0 action-default -1 -1)
 ;   (chat-to-player my-player-number "Target building")
)

(defrule
    (goal group-action 9)
    (up-group-size c: ranged-group1 > 0)
    (up-projectile-detected projectile-siege < 1000)
=>
    (up-full-reset-search)
    (up-set-group search-local c: ranged-group1)
	(up-remove-objects search-local object-data-next-attack s:> fd-critical-value)
    (up-bound-point point-x ranged-group1-x)
    (up-lerp-tiles point-x position-self-x c: -1);-1
    (up-cross-tiles point-x position-self-x c: 5)
    (up-target-point point-x action-move formation-flank stance-no-attack);position-self?
)

;Detect when next volley will kill the obstruction since we can't track razes (walls don't give them) and finding dead rubble IDs is apparantely impossible

(defrule
	(goal group-action 8)
	(goal group-micro yes)
	;(timer-triggered two-mins)
=>
	(up-full-reset-search)
	(up-set-group search-local c: ranged-group1)
	(up-set-target-object search-local c: 0)
	(up-get-object-target-data object-data-hitpoints temporary-goal9)
	(up-get-group-size c: ranged-group1 temporary-goal8)
;	(up-chat-data-to-player 1 "Target HP %d" g: temporary-goal9)
	(up-get-object-data object-data-base-attack temporary-goal7)
	(up-modify-goal temporary-goal7 c:- 5)
	(up-modify-goal temporary-goal7 c:max 1)
	(up-modify-goal temporary-goal8 g:* temporary-goal7)
)

(defrule
	(up-compare-goal temporary-goal8 g:> temporary-goal9)
	(up-compare-goal temporary-goal9 > 0)
	(goal group-action 8)
=>
	(set-goal temporary-goal9 56)
)

(defrule
	(up-get-fact game-time 0 temporary-goal8)
	(up-modify-goal temporary-goal8 c:mod 170);two min timer
	(or(up-compare-goal temporary-goal8 == 2)
	(goal temporary-goal9 56))
	(goal group-action 8)
=>
	(set-goal group-action 2)
	(set-goal temporary-goal9 0)
	(set-strategic-number ms-block-movement 2000)
;	(up-chat-data-to-player 1 "Reset attack wall, razings %d" s: sn-razings)
)

(defrule
    (goal group-action 9)
    (up-group-size c: ranged-group1 > 0)
    (not(up-projectile-detected projectile-siege < 1000))
	(not(goal group-action 6))
=>
    (up-full-reset-search)
    (up-modify-sn sn-focus-player-number s:= sn-target-player-number)
    (up-find-remote c: mangonel-line c: 1)
    (up-set-group search-local c: ranged-group1)
	(up-remove-objects search-local object-data-next-attack s:> fd-critical-value)
    (up-target-objects 0 action-default -1 stance-no-attack);do we need to block movement? (potentially risky)
)



(defrule
    (or(goal group-action 9)
    (or(goal group-action 7)
    (goal group-action 8)))
=>
    (set-goal block-movement 2)
)

(defrule
    (goal temporary-goal6 24689)
=>
    (up-modify-goal block-movement c:+ 1)
    (set-goal temporary-goal6 0)
)

(defrule
    (goal temporary-goal6 24670)
=>
    (up-modify-goal block-movement c:+ 4);3
    (set-goal temporary-goal6 0)
)

(defrule
	(goal block-movement 2)
	(unit-type-count-total cavalry-archer-line > 5)
=>
	(up-modify-goal block-movement c:+ 1)
)

(defrule
    (goal group-action 5)
    (up-compare-goal num-enemy-melee < 1)
    (strategic-number sn-five-turns == 3)
=>
    (set-goal group-action 2)
)


(defrule
    (true)
=>
    (up-get-rule-id block-movement-goal)
)



(defrule
    (goal group-micro yes)
    (timer-triggered fifteensec)
    (players-building-type-count any-enemy town-center > 0)
    (not(goal melee-micro yes))
=>
;    (fe-break-point 1 c:== 1 -1)
    (up-full-reset-search)
    (up-filter-include 4 -1 -1 -1)
    (up-filter-exclude -1 actionid-explore orderid-explore -1)
	(up-set-target-point ranged-group1-x)
	(up-filter-distance c: 7 c: 100)
    (up-find-local c: all-units-class c: 55)
    (up-remove-objects search-local object-data-range > 2)
	(up-remove-objects search-local object-data-type == battering-ram-line)
    (up-reset-filters)
	(up-filter-exclude -1 actionid-attack orderid-attack -1)
    (up-find-local c: mangonel-line c: 5)
	(up-find-local c: battering-ram-line c: 5)
    (up-target-point ranged-group1-x action-move -1 -1)
)

(defrule
    (goal group-micro yes)
    (or(goal group-action 7)
    (up-compare-sn sn-military-superiority < 2))
=>
    (set-goal time-without-fire 0)
    (set-goal circling-distance 14)
)

(defrule
    (goal group-micro yes)
    (up-compare-sn sn-military-superiority > 3)
    (timer-triggered threesec)
=>
    (up-modify-goal time-without-fire c:+ 1)
)

(defrule
    (up-compare-goal time-without-fire > 7)
=>
    (up-modify-goal circling-distance c:- 1)
    (set-goal time-without-fire 0)
)

(defrule
    (true)
=>
    (set-goal closest-enemy-target-id -1)
)


(defrule
    (goal group-micro yes)
=>
 ;   (up-chat-data-to-player 1 "Action being taken %d" g: group-action)
 ;   (up-chat-data-to-player 1 "Subgroup action %d" g: feeder-group-action)
 (do-nothing)
)



; (defrule
;     (up-compare-flag water-flags == 1);we could reuse this on mixed maps to do sneaks if we want
;     (unit-type-count transport-ship-class > 0)
;     ;(or(up-compare-goal gl-threat-time < 10000)
;     ;(goal tsa yes))
;     (up-compare-sn sn-military-superiority > -6)
; =>
;     (up-full-reset-search)
;     (up-filter-include 4 -1 -1 -1)
;     (up-filter-exclude -1 actionid-explore orderid-explore warship-class)
;     (up-find-local c: all-units-class c: 60)
;     (set-strategic-number sn-focus-player-number my-player-number)
;     (up-reset-filters)
;     (up-set-target-point position-self-x)
;     (up-filter-range -1 5 -1 40)
;     (up-find-remote c: transport-ship c: 10);was local, think that is a mistake
;     (up-reset-filters)
;     (up-target-objects 0 action-garrison -1 -1)
; )

; (defrule
;     (up-compare-flag water-flags == 1)
;     (unit-type-count transport-ship-class > 0)
;     (up-compare-sn sn-military-superiority > 1)
;     (unit-type-count galley-line > 0)
;     (timer-triggered fifteensec)
; =>
;     (up-full-reset-search)
;     (up-modify-sn sn-focus-player-number s:= sn-target-player-number)
;     (up-find-remote c: town-center c: 1)
;     (up-find-remote c: dock c: 1)
;     (up-find-remote c: lumber-camp c: 1)
;     (up-set-target-object search-remote c: 0)
;     (up-get-point position-object point-x)
;     (up-set-target-point point-x)
;     (up-find-local c: galley-line c: 60)
;     (up-clean-search search-local object-data-distance search-order-asc)
;     (up-set-target-object search-local c: 0)
;     (up-get-point position-object point2-x)
;     (up-lerp-percent point-x point2-x c: 25)
;     (up-full-reset-search);full or partial reset?
;     (up-filter-range 5 -1 -1 -1)
;     (up-find-local c: transport-ship c: 10)
;     (up-target-point point-x action-unload -1 -1)
; )

;Melee micro



(defrule
    (true)
=>
    (set-goal melee-micro no)
)

(defrule
    (or(unit-type-count militiaman-line > 2)
    (or(unit-type-count scout-cavalry-line > 2)
    (or(unit-type-count knight-line > 2)
    (or(unit-type-count battle-elephant-line > 2)
    (or(unit-type-count spearman-line > 2)
    (or(unit-type-count camel-line > 2)
    (unit-type-count teutonic-knight > 2)))))))
    (up-compare-const diff-fp == 1)
    (or(population < 125)
    (goal group-micro yes))
    (population < 150)
=>
    (set-goal melee-micro yes)
)


(defrule
    (goal melee-micro no)
    (timer-triggered fifteensec)
=>
    (up-full-reset-search)
    (up-set-group search-local c: melee-group1)
    (up-target-point minus-x action-none formation-line stance-aggressive)
    (up-reset-group c: melee-group1)
)

;Create group

(defrule
    (goal melee-micro yes)
    (up-group-size c: melee-group1 < 1)
    (or(players-building-type-count target-player lumber-camp > 0)
    (or(players-building-type-count target-player mill > 0)
    (or(players-building-type-count target-player barracks > 0)
    (players-building-type-count target-player town-center > 0))))
=>
    (up-full-reset-search)
    (up-filter-exclude -1 actionid-explore orderid-explore -1)
    (up-find-local c: militiaman-line c: 10)
    (up-find-local c: scout-cavalry-line c: 10)
    (up-find-local c: knight-line c: 10)
    (up-find-local c: battle-elephant-line c: 10)
    (up-find-local c: camel c: 10)
    (up-find-local c: spearman-line c: 10)
    (up-remove-objects search-local object-data-action == actionid-explore)
    (up-get-search-state local-total)
)

(defrule
    (goal melee-micro yes)
    (up-group-size c: melee-group1 < 1)
    (up-compare-goal local-total > 0)
     (or(players-building-type-count target-player lumber-camp > 0)
    (or(players-building-type-count target-player mill > 0)
    (or(players-building-type-count target-player barracks > 0)
    (players-building-type-count target-player town-center > 0))))
=>
    (up-reset-group c: melee-group1)
    (up-modify-group-flag 0 c: melee-group1)
    (up-remove-objects search-local -1 > 10)
    (up-set-target-point position-self-x)
    (up-clean-search search-local object-data-distance search-order-asc)
    (up-set-target-object search-local c: 0)
    (up-remove-objects search-local -1 > 0)
    (up-create-group 0 0 c: melee-group1)
    (up-modify-group-flag 1 c: melee-group1)
    (up-get-point position-object melee-group1-x)
    (enable-timer patrol-timer 0)
    (enable-timer pick-melee-action 0)
)

;Add units to group

(defrule
    (goal melee-micro yes)
    (up-group-size c: melee-group1 > 0)
    (strategic-number sn-two-turns == 1)
    (unit-type-count-total militiaman-line < 2)
=>
    (up-full-reset-search)
    (up-filter-exclude -1 actionid-explore orderid-explore -1)
    (up-set-target-point melee-group1-x)
    (up-filter-distance c: -1 c: 8);wider area for melee group
    (up-filter-exclude -1 actionid-explore orderid-explore -1)
;    (up-find-local c: militiaman-line c: 40)
    (up-find-local c: scout-cavalry-line c: 40)
    (up-find-local c: knight-line c: 40)
    (up-find-local c: battle-elephant-line c: 40)
    (up-find-local c: camel c: 40)
    (up-find-local c: spearman-line c: 40)
    (up-remove-objects search-local object-data-order == orderid-explore)
    (up-reset-group c: melee-group1)
    (up-modify-group-flag 0 c: melee-group1)
    (up-create-group 0 0 c: melee-group1)
    (up-modify-group-flag 1 c: melee-group1)
    (up-get-search-state local-total)
;    (up-chat-data-to-player my-player-number "lt %d" g: local-total)
)

(defrule
    (goal melee-micro yes)
    (up-group-size c: melee-group1 > 0)
    (strategic-number sn-two-turns == 1)
;    (unit-type-count-total militiaman-line > 1)
=>
    (up-full-reset-search)
    (up-filter-exclude -1 actionid-explore orderid-explore -1)
    (up-set-target-point melee-group1-x)
    (up-filter-distance c: -1 c: 8);wider area for melee group
    (up-filter-exclude -1 actionid-explore orderid-explore -1)
    (up-find-local c: militiaman-line c: 40)
    (up-find-local c: scout-cavalry-line c: 40)
    (up-find-local c: knight-line c: 40)
    (up-find-local c: battle-elephant-line c: 40)
    (up-find-local c: camel c: 40)
    (up-find-local c: spearman-line c: 40)
    (up-remove-objects search-local object-data-order == orderid-explore)
    (up-reset-group c: melee-group1)
    (up-modify-group-flag 0 c: melee-group1)
    (up-create-group 0 0 c: melee-group1)
    (up-modify-group-flag 1 c: melee-group1)
)
;Task objects to melee group

(defrule
    (goal melee-micro yes)
    (up-group-size c: melee-group1 > 0)
    (strategic-number sn-two-turns == 2);was 2 turns
=>
    (up-full-reset-search)
    (up-filter-exclude -1 actionid-explore orderid-explore -1)
    (up-set-target-point melee-group1-x)
    (up-filter-distance c: -1 c: 20)
    (up-find-local c: militiaman-line c: 10)
    (up-find-local c: scout-cavalry-line c: 10)
    (up-find-local c: knight-line c: 10)
    (up-find-local c: battle-elephant-line c: 10)
    (up-find-local c: camel c: 10)
    (up-find-local c: spearman-line c: 10)
    (up-remove-objects search-local object-data-order == orderid-explore)
;    (up-remove-objects search-local object-data-group-flag == melee-group1);flag is inaccurate??
    (up-target-point melee-point-x action-move -1 stance-no-attack)
)

(defrule
    (goal melee-micro yes)
    (up-group-size c: melee-group1 > 0)
    (strategic-number sn-five-turns == 2);was every 2 turns
=>
    (up-full-reset-search)
    (up-filter-exclude -1 actionid-explore orderid-explore -1)
    (up-filter-exclude -1 actionid-attack orderid-attack -1)
    (up-set-target-point melee-group1-x)
    (up-filter-distance c: 20 c: 150)
    (up-find-local c: militiaman-line c: 10)
    (up-find-local c: scout-cavalry-line c: 10)
    (up-find-local c: knight-line c: 10)
    (up-find-local c: battle-elephant-line c: 10)
    (up-find-local c: camel c: 10)
    (up-find-local c: spearman-line c: 10)
    (up-remove-objects search-local object-data-order == orderid-explore)
    (up-remove-objects search-local object-data-group-flag == melee-group1)
    (up-target-point melee-point-x action-move -1 stance-no-attack)
)

;Within-group task

(defrule
    (goal melee-micro yes)
    (up-group-size c: melee-group1 > 0)
    (timer-triggered fifteensec)
=>
    (up-full-reset-search)
    (up-filter-exclude -1 actionid-explore orderid-explore -1)
    (up-filter-exclude -1 actionid-attack orderid-attack -1)
    (up-set-target-point melee-group1-x)
    (up-filter-distance c: 5 c: 150)
    (up-find-local c: militiaman-line c: 10)
    (up-find-local c: scout-cavalry-line c: 10)
    (up-find-local c: knight-line c: 10)
    (up-find-local c: battle-elephant-line c: 10)
    (up-find-local c: camel c: 10)
    (up-find-local c: spearman-line c: 10)
    (up-remove-objects search-local object-data-order == orderid-explore)
 ;   (up-remove-objects search-local object-data-group-flag == melee-group1)
     (up-target-point melee-point-x action-move -1 stance-no-attack)
)

;Update melee-point-x using centre of gravity

(defrule
    (goal melee-micro yes)
    (up-group-size c: melee-group1 > 1)
    (goal melee-micro yes)
=>
    (up-full-reset-search)
    (up-set-group search-local c: melee-group1)
    (up-get-search-state local-total)
    (set-goal point-x 0)
    (set-goal point-y 0)
    (set-goal point2-x 0)
    (set-goal point2-y 0)
    (set-goal temporary-goal 0)
    (set-goal temporary-goal3 120)
)

(defrule
    (goal melee-micro yes)
    (up-group-size c: melee-group1 > 1)
    (up-compare-goal temporary-goal3 > 0)
    (up-set-target-object search-local c: 0)
=>
    (up-modify-goal temporary-goal3 c:- 1);jic
    (up-get-point position-object point2-x)
    (up-modify-goal point-x g:+ point2-x)
    (up-modify-goal point-y g:+ point2-y)
    (up-modify-goal temporary-goal c:+ 1)
    (up-remove-objects search-local -1 == 0)
    (up-jump-rule -1)
)

(defrule
    (goal melee-micro yes)
    (up-group-size c: melee-group > 1)
    (up-compare-goal temporary-goal > 0)
=>
    (up-modify-goal point-x g:/ temporary-goal)
    (up-modify-goal point-y g:/ temporary-goal)
    (up-bound-point melee-group1-x point-x)
)

;Select mode

;TODO // add modes for supporting ally and fighting with only melee

(defrule
    (up-group-size c: melee-group1 > 0)
    (goal melee-micro yes)
=>
    (set-goal melee-mode none)
)
(defrule
    (or(unit-type-count scout-cavalry-line > 2)
    (unit-type-count knight-line > 2))
    (unit-type-count knight-line < 5)
    (unit-type-count knight-line < 7)
    (up-group-size c: melee-group1 > 0)
    (goal melee-micro yes)
=>
    (set-goal melee-mode raid)
)

(defrule
    (not(goal melee-mode raid))
    (up-group-size c: ranged-group1 > 0)
    (goal melee-micro yes)
=>
    (set-goal melee-mode support-range)
)

(defrule
    (or(up-group-size c: ranged-group1 > 4)
    (and(up-group-size c: ranged-group1 > 1)
    (up-point-distance ranged-group1-x melee-group1-x < 25)))
    (goal melee-micro yes)
=>
    (set-goal melee-mode support-range)
)

#load-if-defined UP-ALLY-IN-GAME

(defrule
    (up-group-size c: melee-group1 > 1)
    (up-group-size c: ranged-group1 < 1)
    (players-building-count target-player > 0)
    (players-military-population any-ally > 2)
    (goal melee-micro yes)
=>
    (up-full-reset-search)
    (up-set-target-point enemy-x)
    (up-filter-distance c: -1 c: 60)
    (up-filter-include 4 -1 -1 -1)
    (set-strategic-number sn-focus-player-number 1)
)
(defrule
    (up-group-size c: melee-group1 > 1)
    (up-group-size c: ranged-group1 < 1)
    (players-building-count target-player > 0)
    (players-military-population any-ally > 2)
    (player-valid focus-player)
    (players-stance focus-player ally)
    (goal melee-micro yes)
=>
    (up-find-remote c: all-units-class c: 30)

)

(defrule
    (up-group-size c: melee-group1 > 1)
    (up-group-size c: ranged-group1 < 1)
    (players-building-count target-player > 0)
    (players-military-population any-ally > 2)
    (player-valid focus-player)
    (strategic-number sn-focus-player-number < max-players)
    (goal melee-micro yes)
=>
    (up-modify-sn sn-focus-player-number c:+ 1)
    (up-jump-rule -2)
)

(defrule
    (up-group-size c: melee-group1 > 1)
    (up-group-size c: ranged-group1 < 1)
    (players-building-count target-player > 0)
    (players-military-population any-ally > 2)
    (goal melee-micro yes)
=>
    (up-get-search-state local-total)
)
(defrule
    (up-group-size c: melee-group1 > 1)
    (up-group-size c: ranged-group1 < 1)
    (players-building-count target-player > 0)
    (players-military-population any-ally > 2)
    (up-compare-goal remote-total > 7)
    (nand(up-compare-goal remote-total < 15)
    (goal melee-mode raid))
    (goal melee-micro yes)
=>
    (set-goal melee-mode support-ally)
)

(defrule
    (unit-type-count-total scout-cavalry-line == 8)
    (up-group-size c: melee-group1 > 1)
    (up-group-size c: ranged-group1 < 1)
=>
    (set-goal melee-mode support-ally)
)

(defrule
    (true)
=>
    (set-goal temporary-goal10 2)
)

(defrule
    (up-group-size c: melee-group1 > 1)
    (up-group-size c: ranged-group1 < 1)
    (players-building-count target-player > 0)
    (players-military-population any-ally > 2)
    (goal melee-mode support-ally)
    (up-compare-goal remote-total > 1)
    (goal melee-micro yes)
=>
    (up-remove-objects search-remote -1 > 20)
    (up-set-target-point enemy-x)
    (up-clean-search search-remote object-data-distance search-order-asc)
    (up-remove-objects search-remote -1 != 1);follow second closest unit to enemy
    (up-set-target-object search-remote c: 0)
    (up-get-point position-object point4-x);use this to hold relevant position for following rules
    (set-goal temporary-goal10 3)
)

#end-if


;Process own units
(defrule
    (up-group-size c: melee-group1 > 0)
    (goal melee-micro yes)
=>
    (up-full-reset-search)
    (up-set-group search-local c: melee-group1)
    (set-goal temporary-goal 0)
    (set-goal temporary-goal2 0)
    (set-goal temporary-goal3 0)
    (set-goal temporary-goal4 0)
    (set-goal temporary-goal6 0)
    (set-goal temporary-goal5 120)
    (set-goal temporary-goal8 0);we use temporary-goal8 to store pierce armor
    (set-goal temporary-goal9 0);we use temporary-goal9 to store hack armor
    (set-goal own-melee-power 0)
    (up-set-target-object search-local c: 0)
    (up-get-object-data object-data-pierce-armor temporary-goal8)
    (up-get-object-data object-data-strike-armor temporary-goal9)
)

(defrule
    (up-group-size c: melee-group1 > 0)
    (up-set-target-object search-local c: 0)
    (up-compare-goal temporary-goal5 > 0)
    (goal melee-micro yes)
=>
    (set-goal temporary-goal2 0)
    (up-modify-goal temporary-goal5 c:- 1)
    (up-get-object-data object-data-hitpoints temporary-goal3)
    (up-get-object-data object-data-base-attack temporary-goal4)
    (up-modify-goal temporary-goal2 g:+ temporary-goal3)
    (up-modify-goal temporary-goal2 g:* temporary-goal4)
    (up-modify-goal own-melee-power g:+ temporary-goal2);was temporary goal
    (up-modify-goal temporary-goal6 c:+ 1)
    (up-modify-goal temporary-goal5 c:- 1)
    (up-remove-objects search-local -1 == 0)
    (up-jump-rule -1)
)

(defrule
    (up-group-size c: melee-group1 > 0)
    (goal melee-micro yes)
=>
    (up-full-reset-search)
    (up-set-group search-local c: melee-group1)
    (up-remove-objects search-local -1 > 15);for peformance
    (up-clean-search search-local object-data-speed search-order-desc)
    (up-set-target-object search-local c: 0)
    (up-get-object-data object-data-speed temporary-goal7);store speed in temporary-goal7
)


;Process enemy units

(defrule
    (up-group-size c: melee-group1 > 0)
    (goal melee-micro yes)
=>
    (up-full-reset-search)
    (set-strategic-number sn-focus-player-number 1)
    (up-modify-flag melee-flags c:- 4)
    (up-modify-flag melee-flags c:- 2)
    (set-goal local-total 0)
    (set-goal remote-total 0)
    (set-goal enemy-power 0)
    (set-goal num-enemy-melee 0)
    (set-goal num-enemy-ranged 0)
)


(defrule
    (up-group-size c: melee-group1 > 0)
    (players-stance focus-player enemy)
    (player-valid focus-player)
    (strategic-number sn-focus-player-number < max-players)
    (goal melee-micro yes)
=>
    (up-set-target-point melee-point1-x)
    (up-filter-distance c: -1 c: 12)
    (up-filter-include 4 -1 -1 -1)
    (up-find-remote c: all-units-class c: 60)
    (up-reset-filters)
    (up-filter-distance c: -1 c: 12)
;    (up-filter-include -1 actionid-attack orderid-attack -1);experiment
    (up-filter-include -1 actionid-attack -1 -1)
    (up-find-remote c: villager-class c: 60)
    (up-remove-objects search-remote object-data-range > 1)
    (up-reset-filters)
    (up-get-search-state local-total)
)

(defrule
    (up-group-size c: melee-group1 > 0)
    (strategic-number sn-focus-player-number < max-players)
    (player-valid focus-player)
    (goal melee-micro yes)
=>
    (up-modify-sn sn-focus-player-number c:+ 1)
    (up-jump-rule -2)
)

(defrule
    (up-compare-goal remote-total >= 0)
    (up-set-target-object search-remote c: 0)
    (goal melee-micro yes)
=>
    (set-goal temporary-goal 0)
    (set-goal temporary-goal2 0)
    (set-goal temporary-goal3 0)
)

(defrule
    (unit-type-count infantry-class < 5)
    (up-object-data object-data-base-type == spearman)
    (up-compare-goal remote-total >= 0)
    (goal melee-micro yes)
=>
    (up-modify-goal enemy-power c:+ 45)
)
(defrule
    (up-compare-goal remote-total >= 0)
 ;   (up-set-target-object search-remote c: 0)
    (goal melee-micro yes)
=>
    (up-get-object-data object-data-hitpoints temporary-goal4)
    (up-get-object-data object-data-base-attack temporary-goal3)
    (up-modify-goal temporary-goal3 g:- temporary-goal9);hack armor
    (up-modify-goal temporary-goal3 c:max 1)
    (up-modify-goal temporary-goal3 g:* temporary-goal4)
    (up-modify-goal enemy-power g:+ temporary-goal3)
    (up-modify-goal remote-total c:- 1)
    (up-remove-objects search-remote -1 == 0)
    (up-modify-goal num-enemy-melee c:+ 1)
    (up-jump-rule -3)
)

(defrule
    (up-group-size c: melee-group1 > 0)
    (goal melee-micro yes)
=>
    (set-strategic-number sn-focus-player-number 1)
)

(defrule
    (up-group-size c: melee-group1 > 0)
    (players-stance focus-player enemy)
    (player-valid focus-player)
    (strategic-number sn-focus-player-number < max-players)
    (goal melee-micro yes)
=>
    (up-set-target-point melee-point1-x)
    (up-filter-distance c: -1 c: 12)
    (up-filter-include 4 -1 -1 -1)
    (up-find-remote c: all-units-class c: 60)
    ; (up-reset-filters)
    ; (up-filter-distance c: -1 c: 12)
    ; (up-find-remote c: villager-class c: 60)
    (up-remove-objects search-remote object-data-range < 2)
    (up-reset-filters)

)

(defrule
    (up-group-size c: melee-group1 > 0)
    (strategic-number sn-focus-player-number < max-players)
    (player-valid focus-player)
    (goal melee-micro yes)
=>
    (up-modify-sn sn-focus-player-number c:+ 1)
    (up-jump-rule -2)
)

(defrule
    (up-group-size c: melee-group1 > 0)
    (goal melee-micro yes)
=>
    (up-get-search-state local-total)
)

(defrule
    (up-compare-goal remote-total >= 15)
    (up-group-size c: melee-group1 > 0)
    (goal melee-micro yes)
=>
    (up-modify-flag melee-flags c:+ 2)
    (up-modify-flag melee-flags c:+ 4)
)

(defrule
    (up-compare-goal remote-total > 1)
    (up-compare-goal remote-total <= 14)
    (up-group-size c: melee-group1 > 0)
    (goal melee-micro yes)
=>
    (up-modify-flag melee-flags c:+ 2)
)

(defrule
    (up-compare-goal remote-total >= 0)
    (up-set-target-object search-remote c: 0)
    (up-group-size c: melee-group1 > 0)
    (goal melee-micro yes)
=>
    (set-goal temporary-goal 0)
    (set-goal temporary-goal2 0)
    (up-get-object-data object-data-hitpoints temporary-goal4)
    (up-get-object-data object-data-base-attack temporary-goal3)
    (up-modify-goal temporary-goal4 c:+ 30);assume range = 30 HP (when/if XS support happens we could use ML to tune this empirically or find a more accurate assumptino)
    (up-modify-goal temporary-goal3 g:- temporary-goal8);pierce armor
    (up-modify-goal temporary-goal3 c:max 1)
    (up-modify-goal temporary-goal3 g:* temporary-goal4)
    (up-modify-goal enemy-power g:+ temporary-goal3)
    (up-modify-goal remote-total c:- 1)
    (up-remove-objects search-remote -1 == 0)
    (up-modify-goal num-enemy-ranged c:+ 1)
    (up-jump-rule -1)
)

(defrule
    (goal melee-micro yes)
=>
    (up-modify-goal melee-advantage g:= own-melee-power)
    (up-modify-goal melee-advantage c:* 100);overflow risk? need to multiply by 10000 to obtain a 100x result
;    (up-modify-goal enemy-power c:* 100)
    (up-modify-goal melee-advantage g:/ enemy-power);obtains a percentage. 100 = even fight
;    (up-chat-data-to-player my-player-number "Melee advantage %d" g: melee-advantage)
;    (up-chat-data-to-player my-player-number "Own melee power %d" g: own-melee-power)
;    (up-chat-data-to-player my-player-number "Enemy power x100 %d" g: enemy-power)
)


; I think we can reuse num-enemy-melee/ranged if it does not apply
; Select actions

(defrule
    (goal melee-mode raid)
    (up-timer-status pick-melee-action < timer-running)
    (up-group-size c: melee-group1 > 0)
    (goal melee-micro yes)
=>
    (generate-random-number 1000)
    (up-get-fact random-number 0 temporary-goal)
    (up-full-reset-search)
    (up-modify-sn sn-focus-player-number s:= sn-target-player-number)
    (up-find-remote c: lumber-camp c: 10)
    (up-find-remote c: mill c: 10)
    (up-find-remote c: town-center c: 10)
    (up-get-search-state local-total)
    (up-modify-goal temporary-goal g:mod remote-total)
    (up-modify-goal temporary-goal c:max 0)
    (up-modify-goal temporary-goal g:min remote-total)
)

(defrule
    (goal melee-mode raid)
    (up-timer-status pick-melee-action < timer-running)
    (up-set-target-object search-remote g: temporary-goal)
    (up-group-size c: melee-group1 > 0)
    (up-compare-goal num-enemy-melee < 2)
    (up-compare-goal num-enemy-ranged < 2)
    (goal melee-micro yes)
=>
    (up-get-point position-object point-x)
    (up-set-group search-local c: melee-group1)
;    (up-target-point point-x action-move -1 stance-no-attack);can we use stance-defensive here?
    (set-goal melee-action m-move)
    (up-bound-point melee-walk-x point-x)
    (enable-timer pick-melee-action 90)
;    (chat-to-player my-player-number "Debug: set move action 1")
)



(defrule
    (up-compare-goal remote-total < 1)
    (goal melee-mode raid)
    (up-group-size c: melee-group1 > 0)
    (goal melee-micro yes)
=>
    (up-get-point position-enemy melee-walk-x)
    (set-goal melee-action m-move)
)

(defrule
    (goal melee-mode raid)
    (up-group-size c: melee-group1 > 0)
    (goal melee-action m-move)
    (up-compare-goal melee-advantage > 250)
    (strategic-number sn-five-turns == 4);don't do every turn otherwise you run into a situation where 1 enemy unit is sighted => charge enemy then 40 enemy units are near it
    (or(up-compare-goal num-enemy-melee > 0)
    (up-compare-goal num-enemy-ranged > 0))
    (goal melee-micro yes)
=>
    (set-goal melee-action m-attack)
    (enable-timer pick-melee-action 15)
;    (chat-to-player my-player-number "Debug: set attack action 1")
)

(defrule
    (goal melee-mode raid)
    (up-group-size c: melee-group1 > 0)
    ;(or
    (goal melee-action m-move)
    ;(goal melee-action m-attack))
    (up-compare-goal melee-advantage < 250)
    (up-compare-goal num-enemy-ranged > 10)
    (goal melee-micro yes)
=>
    (set-goal melee-action m-gb)
    (enable-timer pick-melee-action 30)
)

(defrule
    (goal melee-mode raid)
    (up-group-size c: melee-group1 > 0)
    (goal melee-micro yes)
=>
    (up-set-target-point melee-group1-x)
    (up-full-reset-search)
    (up-modify-sn sn-focus-player-number s:= sn-target-player-number)
    (up-filter-distance c: -1 c: 7)
    (up-find-remote c: villager-class c: 10)
    (up-get-search-state local-total)
)

(defrule
    (goal melee-mode raid)
    (up-group-size c: melee-group1 > 0)
    (up-compare-goal remote-total > 0)
    (goal melee-micro yes)
=>
    (set-goal melee-action m-attack)
    (enable-timer pick-melee-action 10)
;        (chat-to-player my-player-number "Debug: set attack action 2")
)

(defrule
    (goal melee-mode raid)
    (up-group-size c: melee-group1 > 0)
    (up-compare-goal melee-advantage < 90)
    (goal melee-micro yes)
=>
    (set-goal melee-action m-gb)
    (enable-timer pick-melee-action 25)
;    (chat-to-player my-player-number "Debug: set attack action 4")
)

(defrule
    (goal melee-mode none)
    (up-group-size c: melee-group1 > 0)
    (goal melee-micro yes)
=>
    (set-goal melee-action m-pseudo-tsa)
)

(defrule
    (goal melee-mode support-range)
    (goal group-action 6);retreat
    (goal melee-micro yes)
=>
    (set-goal melee-action m-retreat)
)

(defrule
    (goal melee-mode support-range)
    (goal group-action 2)
    (up-timer-status pick-melee-action < timer-running)
    (goal melee-micro yes)
=>
    (set-goal melee-action m-move)
    (up-bound-point melee-walk-x ranged-group1-x)
    (up-lerp-tiles melee-walk-x enemy-x c: 3)
)

(defrule
    (goal melee-mode support-range)
    (nor(goal group-action 6)
    (goal group-action 2))
    (up-timer-status pick-melee-action < timer-running)
    (or(up-compare-goal num-enemy-melee > 0)
    (up-compare-goal num-enemy-ranged > 0))
    (nand(goal group-action 4)
    (up-compare-goal melee-advantage < 85))
    (goal melee-micro yes)
=>
    (set-goal melee-action m-attack)
    (enable-timer pick-melee-action 10)
)

(defrule
    (goal melee-mode support-range)
    (goal group-action 4);perpendicular
    (up-timer-status pick-melee-action < timer-running)
    (up-compare-goal melee-advantage < 95)
    (goal melee-micro yes)
=>
    (up-bound-point melee-walk-x melee-group-x)
    (up-lerp-tiles melee-walk-x position-self-x c: 3)
    (enable-timer pick-melee-action 3)
    (set-goal melee-action m-move)
)


(defrule
    (goal melee-mode support-ally)
    (up-point-distance melee-group1-x point4-x > 10)
    (up-timer-status pick-melee-action < timer-running)
    (goal melee-micro yes)
=>
    (up-bound-point melee-walk-x point4-x)
    (up-lerp-tiles melee-walk-x position-self-x c: 2)
    (enable-timer pick-melee-action 5)
    (set-goal melee-action m-move)
)


(defrule
    (goal melee-mode support-ally)
    (goal temporary-goal10 2)
=>
    (up-full-reset-search)
    (up-get-point position-target point-x)
    (up-set-target-point point-x)
    (set-strategic-number sn-focus-player-number 0)
    (up-filter-distance c: -1 c: 120)
)

(defrule
    (up-compare-sn sn-focus-player-number < max-players)
    (player-valid focus-player)
    (players-stance focus-player ally)
    (goal melee-mode support-ally)
    (goal temporary-goal10 2)
=>
    (up-find-remote c: town-center c: 1)
    (up-get-search-state local-total)
)

(defrule
    (up-compare-sn sn-focus-player-number < max-players)
    (player-valid focus-player)
    (goal melee-mode support-ally)
    (goal temporary-goal10 2)
=>
    (up-modify-sn sn-focus-player-number c:+ 1)
    (up-jump-rule -2)
)

(defrule
    (goal melee-mode support-ally)
    (goal temporary-goal10 2)
    (up-compare-goal remote-total > 0)
    (strategic-number sn-twenty-turns == 6)
=>
    (up-clean-search search-remote object-data-distance search-order-asc)
    (up-set-target-object search-remote c: 0)
    (up-get-point position-object point-x)
    (up-modify-goal point-x c:- 4)
    (up-modify-goal point-y c:- 4)
    (generate-random-number 8)
    (up-get-fact random-number 0 temporary-goal)
    (up-modify-goal point-x g:+ temporary-goal)
    (generate-random-number 8)
    (up-get-fact random-number 0 temporary-goal2)
    (up-modify-goal point-y g:+ temporary-goal2)
    (up-full-reset-search)
    (up-set-group search-local c: melee-group1)
    (up-target-point point-x action-patrol -1 stance-aggressive)
    (set-goal melee-action m-attack)
)



(defrule
    (up-point-distance melee-group1-x position-self-x < 9)
    (or(up-compare-goal num-enemy-melee > 0)
    (up-compare-goal num-enemy-ranged > 0))
    (up-group-size c: melee-group1 > 0)
    (goal melee-micro yes)
    (not(goal melee-mode support-range));?
=>
    (set-goal melee-action m-attack)
    (enable-timer pick-melee-action 10)
)

(defrule
    (goal melee-mode support-ally)
    (up-point-distance melee-group1-x point4-x < 15)
    (goal melee-micro yes)
=>
    (up-full-reset-search)
    (up-set-target-point melee-group1-x)
    (up-filter-distance c: -1 c: 18)
;    (up-filter-include 4 -1 -1 -1)
    (set-strategic-number sn-focus-player-number 1)
    (up-filter-include 4 actionid-attack -1 -1)
    (set-goal temporary-goal3 3)
    (set-goal remote-total 0)
)

(defrule
    (goal melee-mode support-ally)
    (up-point-distance melee-group1-x point4-x < 15)
    (player-valid focus-player)
    (players-stance focus-player ally)
    (goal melee-micro yes)
=>
    (up-find-remote c: all-units-class c: 60)

)

(defrule
    (goal melee-mode support-ally)
    (up-point-distance melee-group1-x point4-x < 15)
    (player-valid focus-player)
    (strategic-number sn-focus-player-number < max-players)
    (goal melee-micro yes)
=>
    (up-modify-sn sn-focus-player-number c:+ 1)
    (up-jump-rule -2)
)
(defrule
    (goal melee-mode support-ally)
    (up-point-distance melee-group1-x point4-x < 15)
    (goal melee-micro yes)
=>
    (up-get-search-state local-total)
)

(defrule
    (goal melee-mode support-ally)
    (up-point-distance melee-group1-x point4-x < 15)
    (goal temporary-goal3 3)
    (goal melee-micro yes)
=>
    (up-reset-filters)
    (up-filter-distance c: -1 c: 18)
    (up-filter-include 4 actionid-patrol -1 -1)    
    (set-goal temporary-goal3 2)
    (up-jump-rule -3)
)

(defrule
    (goal melee-mode support-ally)
    (up-point-distance melee-group1-x point4-x < 15)
    (goal temporary-goal3 2)
    (goal melee-micro yes)
=>
    (up-reset-filters)
    (up-filter-distance c: -1 c: 18)
    (up-filter-include 4 actionid-defend -1 -1)
    (set-goal temporary-goal3 1)
    (up-jump-rule -4)
)

(defrule
    (or(up-compare-goal remote-total > 0)
    (up-compare-goal melee-advantage > 150))
    (strategic-number sn-five-turns == 2)
    (up-timer-status pick-melee-action < timer-running)
    (or(up-compare-goal num-enemy-melee > 0)
    (up-compare-goal num-enemy-ranged > 0))
    (goal melee-mode support-ally)
    (up-point-distance melee-group1-x point4-x < 15)
    (up-group-size c: melee-group1 > 0)
    (goal melee-micro yes)
=>
    (enable-timer pick-melee-action 10)
    (set-goal melee-action m-attack)
)

(defrule
    (up-compare-goal melee-advantage < 150)
    (or(up-point-distance melee-group1-x point4-x > 19)
    (and(up-compare-goal remote-total < 1)
    (up-point-distance melee-group1 point4-x < 13)))
    (goal melee-mode support-ally)
    (up-group-size c: melee-group1 > 0)
    (goal melee-micro yes)
=>
    (enable-timer pick-melee-action 5)
    (set-goal melee-action m-gb)
)

(defrule
    (up-projectile-detected projectile-town-center < 1000)
    (goal melee-micro yes)
    (nor(research-completed ri-chain-barding)
    (research-completed ri-chain-mail))
=>
    (enable-timer pick-melee-action 10)
    (set-goal melee-action m-gb)
)





; Move

(defrule
    (up-group-size c: melee-group1 > 0)
    (goal melee-action m-move)
    (strategic-number sn-two-turns == 1)
    (up-group-size c: melee-group1 < 5)
    (goal melee-micro yes)
    (up-group-size c: melee-group1 > 8)
=>
;    (fe-break-point 1 c:== 1 -1)
    (up-bound-point point-x melee-group1-x)
    (up-lerp-tiles point-x melee-walk-x c: 20)
    (up-full-reset-search)
    (up-set-group search-local c: melee-group1)
    (up-target-point minus-x action-move formation-line stance-no-attack)
    (up-target-point point-x action-move formation-line stance-no-attack);maybe try stance-defensive in some situations
;    (up-send-flare point-x)
;    (up-send-flare melee-walk-x)
    (up-jump-rule 1)
)

(defrule
    (up-group-size c: melee-group1 > 0)
    (goal melee-action m-move)
    (strategic-number sn-two-turns == 1)
    (goal melee-micro yes)
=>
    (up-bound-point point-x melee-group1-x)
    (up-lerp-tiles point-x melee-walk-x c: 20)
    (up-full-reset-search)
    (up-set-group search-local c: melee-group1)
    (up-target-point point-x action-move formation-box stance-no-attack);maybe try stance-defensive in some situations
)

; Patrol attack (eventually try and find a way of getting a surround)

(defrule
    (up-group-size c: melee-group1 > 0)
    (goal melee-action m-attack)
    (up-timer-status patrol-timer < timer-running)
    (goal melee-micro yes)
=>
    (set-strategic-number sn-focus-player-number 1)
    (set-goal point-x 0)
    (set-goal point-y 0)
    (set-goal point2-x 0)
    (set-goal point2-y 0)
    (up-full-reset-search)
    (up-set-target-point melee-group1-x)
    (up-filter-distance c: -1 c: 11)
)

(defrule
    (up-group-size c: melee-group1 > 0)
    (goal melee-action m-attack)
    (up-timer-status patrol-timer < timer-running)
    (players-stance focus-player enemy)
    (player-valid focus-player)
    (goal melee-micro yes)
=>
    (up-find-remote c: all-units-class c: 60)
    (up-remove-objects search-remote object-data-range < 2)
    (up-get-search-state local-total)
)

(defrule
    (strategic-number sn-focus-player-number < max-players)
    (player-valid focus-player)
    (up-group-size c: melee-group1 > 0)
    (goal melee-action m-attack)
    (up-timer-status patrol-timer < timer-running)
    (goal melee-micro yes)
=>
    (up-modify-sn sn-focus-player-number c:+ 1)

    (up-jump-rule -2)
)

(defrule
    (up-group-size c: melee-group1 > 0)
    (goal melee-action m-attack)
    (up-timer-status patrol-timer < timer-running)
    (up-compare-goal remote-total > 0)
    (goal melee-micro yes)
=>
    (up-jump-rule 3)
)
(defrule
    (up-group-size c: melee-group1 > 0)
    (goal melee-action m-attack)
    (up-timer-status patrol-timer < timer-running)
    (goal melee-micro yes)
=>
    (set-strategic-number sn-focus-player-number 1)
    (set-goal point-x 0)
    (set-goal point-y 0)
    (set-goal point2-x 0)
    (set-goal point2-y 0)
    (up-full-reset-search)
    (up-set-target-point melee-group1-x)
    (up-filter-distance c: -1 c: 11)
)

(defrule
    (up-group-size c: melee-group1 > 0)
    (goal melee-action m-attack)
    (up-timer-status patrol-timer < timer-running)
    (players-stance focus-player enemy)
    (player-valid focus-player)
    (goal melee-micro yes)
=>
    (up-find-remote c: all-units-class c: 60)
;    (up-remove-objects search-remote object-data-range > 1)

)

(defrule
    (strategic-number sn-focus-player-number < max-players)
    (player-valid focus-player)
    (up-group-size c: melee-group1 > 0)
    (goal melee-action m-attack)
    (up-timer-status patrol-timer < timer-running)
        (goal melee-micro yes)
=>
    (up-modify-sn sn-focus-player-number c:+ 1)

    (up-jump-rule -2)
)
(defrule
    (up-group-size c: melee-group1 > 0)
    (goal melee-action m-attack)
    (up-timer-status patrol-timer < timer-running)
        (goal melee-micro yes)
=>
    (up-get-search-state local-total)
)
;If we find nothing use a best guess of where enemy could be
(defrule
    (goal melee-action m-attack)
    (goal melee-micro yes)
    (up-timer-status patrol-timer < timer-running)
    (up-compare-goal remote-total == 0)
    (goal melee-mode support-range)
=>
    (up-full-reset-search)
    (up-bound-point point-x ranged-group1-x)
    (up-lerp-percent point-x enemy-x c: 20)
)

(defrule
    (goal melee-action m-attack)
    (goal melee-micro yes)
    (up-timer-status patrol-timer < timer-running)
    (up-compare-goal remote-total == 0)
    (not(goal melee-mode support-range))
=>
    (up-full-reset-search)
    (up-bound-point point-x position-self-x)
    (up-lerp-percent point-x enemy-x c: 80)
)

;Get CoG of enemy units (if ranged only consider enemy ranged)

(defrule
    (up-group-size c: melee-group1 > 0)
    (goal melee-action m-attack)
    (up-timer-status patrol-timer < timer-running)
        (goal melee-micro yes)
=>
    (set-goal temporary-goal3 120)
    (set-goal temporary-goal4 0)
    (up-remove-objects search-remote -1 > 25);sample of 25 is sufficient
)
(defrule
    (up-group-size c: melee-group1 > 0)
    (goal melee-action m-attack)
    (up-timer-status patrol-timer < timer-running)
    (up-set-target-object search-remote c: 0)
    (up-compare-goal temporary-goal3 > 0)
        (goal melee-micro yes)
=>
    (up-modify-goal temporary-goal3 c:- 1)
    (up-modify-goal temporary-goal4 c:+ 1)
    (set-goal point2-x 0)
    (set-goal point2-y 0)
    (up-get-point position-object point2-x)
    (up-modify-goal point-x c:+ point2-x)
    (up-modify-goal point-y c:+ point2-y)
    (up-remove-objects search-remote -1 == 0)
    (up-jump-rule -1)
)
(defrule
    (up-group-size c: melee-group1 > 0)
    (goal melee-action m-attack)
    (up-timer-status patrol-timer < timer-running)
    (up-compare-goal temporary-goal4 != 0)
        (goal melee-micro yes)
=>
    (up-modify-goal point-x g:/ temporary-goal4)
    (up-modify-goal point-y g:/ temporary-goal4)
    (up-lerp-percent point-x melee-group1-x c: 10)
)

(defrule
    (up-group-size c: melee-group1 > 0)
    (goal melee-action m-attack)
    (up-timer-status patrol-timer < timer-running)
    (or(up-compare-flag melee-flags != 8)
    (up-group-size c: melee-group1 < 6))
        (goal melee-micro yes)
=>
    (up-full-reset-search)
    (up-set-group search-local c: melee-group1)
    (up-target-point minus-x action-patrol -1 -1)
    (up-target-point point-x action-patrol formation-line stance-aggressive)
    (enable-timer patrol-timer 10)
)

(defrule
    (up-group-size c: melee-group1 > 0)
    (goal melee-action m-attack)
    (up-timer-status patrol-timer < timer-running)
    (up-compare-flag melee-flags == 8)
    (up-group-size c: melee-group1 > 5)
        (goal melee-micro yes)
=>
    (up-full-reset-search)
    (up-set-group search-local c: melee-group1)
    (up-bound-point point3-x point-x)
    (up-lerp-tiles point3-x melee-group1-x c: 3)
    (up-cross-tiles point3-x melee-group1-x c: 1)
    (up-set-target-point point3-x)
    (up-clean-search search-local object-data-distance search-order-asc)
    (up-remove-objects search-local -1 > 1)
    (up-target-point minus-x action-move -1 -1)
    (up-target-point point-x action-move formation-line stance-aggressive)
    (up-set-target-object search-local c: 0)
    (up-get-object-data object-data-id temporary-goal)
    (up-set-target-object search-local c: 1)
    (up-get-object-data object-data-id temporary-goal2)
)

(defrule
    (up-group-size c: melee-group1 > 0)
    (goal melee-action m-attack)
    (up-timer-status patrol-timer < timer-running)
    (up-compare-flag melee-flags == 8)
    (up-group-size c: melee-group1 > 5)
        (goal melee-micro yes)
=>

    (up-full-reset-search)
    (up-set-group search-local c: melee-group1)
    (up-bound-point point3-x point-x)
    (up-lerp-tiles point3-x melee-group1-x c: 3)
    (up-cross-tiles point3-x melee-group1-x c: -1)
    (up-set-target-point point3-x)
    (up-clean-search search-local object-data-distance search-order-asc)
    (up-remove-objects search-local -1 > 1)
    (up-target-point minus-x action-move -1 -1)
    (up-target-point point-x action-move formation-line stance-aggressive)
    (up-set-target-object search-local c: 0)
    (up-get-object-data object-data-id temporary-goal3)
    (up-set-target-object search-local c: 1)
    (up-get-object-data object-data-id temporary-goal4)
)

(defrule
	(up-group-size c: melee-group1 > 2)
	(goal melee-action m-attack)
	(or(up-timer-status patrol-timer < timer-running)
	(timer-triggered threesec))
	(goal melee-micro yes)
=>
	(up-full-reset-search)
	(up-set-target-point melee-group1-x)
	(up-filter-distance c: -1 c: 15)
	(up-set-group search-local c: melee-group1)
	(up-remove-objects search-local -1 < 2)
	(up-remove-objects search-local -1 > 6)
	(up-modify-sn sn-focus-player-number s:= sn-target-player-number)
	(up-find-remote c: siege-weapon-class c: 3)
	(up-get-search-state local-total)
)

(defrule
	(up-group-size c: melee-group1 > 2)
	(goal melee-action m-attack)
	(or(up-timer-status patrol-timer < timer-running)
	(timer-triggered threesec))
	(goal melee-micro yes)
	(up-compare-goal remote-total > 0)
=>
	(up-target-objects 0 action-default formation-stagger stance-aggressive)
	(chat-to-player my-player-number "Target siege")
)

(defrule
        (up-group-size c: melee-group1 > 0)
    (goal melee-action m-attack)
    (up-timer-status patrol-timer < timer-running)
    (up-compare-flag melee-flags == 8)
    (up-group-size c: melee-group1 > 5)
        (goal melee-micro yes)
=>
    (up-full-reset-search)
    (up-set-group search-local c: melee-group1)
    (up-remove-objects search-local object-data-id g:== temporary-goal)
    (up-remove-objects search-local object-data-id g:== temporary-goal2)
    (up-remove-objects search-local object-data-id g:== temporary-goal3)
    (up-remove-objects search-local object-data-id g:== temporary-goal4)
	(up-remove-objects search-local object-data-target == siege-weapon-class)
    (up-target-point point-x action-patrol -1 stance-aggressive)
    (enable-timer patrol-timer 10)
)



; Temporary retreat

(defrule
    (up-group-size c: melee-group1 > 0)
    (goal melee-action m-gb)
    (strategic-number sn-two-turns == 1)
    (or(strategic-number sn-twenty-turns < 15)
    (not(up-projectile-detected projectile-any > 0)))
    (up-point-distance melee-group1-x position-self-x > 7)
        (goal melee-micro yes)
=>
    (up-bound-point point-x melee-group-x)
    (up-lerp-tiles point-x enemy-x c: -20)
    (up-lerp-tiles point-x position-self-x c: 10)
    (up-bound-point point-x point-x)
    (up-full-reset-search)
    (up-set-group search-local c: melee-group1)
    (up-target-point point-x action-move formation-line stance-no-attack)
)

(defrule
    (up-group-size c: melee-group1 > 0)
    (goal melee-action m-gb)
    (strategic-number sn-two-turns == 1)
    (strategic-number sn-twenty-turns >= 15)
    (up-projectile-detected projectile-any > 0)
    (up-point-distance melee-group1-x position-self-x > 7)
        (goal melee-micro yes)
=>
    (up-bound-point point-x melee-group-x)
    (up-lerp-tiles point-x enemy-x c: -20)
    (up-lerp-tiles point-x position-self-x c: 10)
    (up-bound-point point-x point-x)
    (up-full-reset-search)
    (up-set-group search-local c: melee-group1)
    (up-target-point point-x action-move formation-flank stance-no-attack)
)

(defrule
    (up-group-size c: melee-group1 > 0)
    (goal melee-action m-gb)
    (up-point-distance melee-group1-x position-self-x <= 7)
        (goal melee-micro yes)
=>
    (up-bound-point point-x melee-group-x)
    (up-lerp-tiles point-x position-self-x c: 15)
    (up-cross-tiles point-x position-self-x c: 40)
    (up-bound-point point-x point-x)
    (up-full-reset-search)
    (up-set-group search-local c: melee-group1)
    (up-target-point point-x action-move formation-line stance-no-attack)
)

; Permenant retreat


(defrule
    (up-group-size c: melee-group1 > 0)
    (goal melee-action m-gb)
    (strategic-number sn-two-turns == 1)
    (or(strategic-number sn-twenty-turns < 15)
    (not(up-projectile-detected projectile-any > 0)))
    (goal melee-micro yes)
=>
    (up-full-reset-search)
    (up-set-group search-local c: melee-group1)
    (up-target-point position-self-x action-move formation-line stance-no-attack)
)

(defrule
    (up-group-size c: melee-group1 > 0)
    (goal melee-action m-gb)
    (strategic-number sn-two-turns == 1)
    (strategic-number sn-twenty-turns >= 15)
    (up-projectile-detected projectile-any > 0)
    (goal melee-micro yes)
=>

    (up-full-reset-search)
    (up-set-group search-local c: melee-group1)
    (up-target-point position-self-x action-move formation-flank stance-no-attack)
)
; Individual raid

;Generic patrol
(defrule
    (up-group-size c: melee-group1 > 0)
    (goal melee-action m-pseudo-tsa)
    (up-compare-sn sn-military-superiority > 1)
    (timer-triggered two-mins)
    (goal melee-micro yes)
=>
    (up-full-reset-search)
    (up-set-group search-local c: melee-group1);was ranged group 1 - surely a mistake?
    (up-bound-point point-x enemy-x)
    (generate-random-number 16)
    (up-get-fact random-number 0 temporary-goal)
    (generate-random-number 16)
    (up-get-fact random-number 0 temporary-goal2)
    (up-modify-goal point-x c:- 8)
    (up-modify-goal point-y c:- 8)
    (up-modify-goal point-x g:+ temporary-goal)
    (up-modify-goal point-y g:+ temporary-goal2)
    (up-bound-point point-x point-x)
    (up-target-point point-x action-patrol -1 stance-aggressive)
)

(defrule
    (up-group-size c: melee-group1 > 0)
    (goal melee-action m-pseudo-tsa)
    (up-compare-sn sn-military-superiority <= 1)
    (timer-triggered two-mins)
    (goal melee-micro yes)
=>
    (up-full-reset-search)
    (up-set-group search-local c: melee-group1);was ranged group 1 - surely a mistake?
    (up-bound-point point-x position-self-x)
    (generate-random-number 16)
    (up-get-fact random-number 0 temporary-goal)
    (generate-random-number 16)
    (up-get-fact random-number 0 temporary-goal2)
    (up-modify-goal point-x c:- 8)
    (up-modify-goal point-y c:- 8)
    (up-modify-goal point-x g:+ temporary-goal)
    (up-modify-goal point-y g:+ temporary-goal2)
    (up-bound-point point-x point-x)
    (up-target-point point-x action-patrol -1 stance-aggressive)
)
;TODO
(defrule
    (goal melee-action m-move)
    (up-point-distance melee-walk-x melee-group1-x < 3)
=>
    (up-full-reset-search)
    (up-set-group search-local c: ranged-group1)
    (up-target-point minus-x action-none -1 stance-aggressive)
)

(defrule
    (goal melee-action m-retreat)
=>
    (up-bound-point point-x melee-point-x)
    (up-lerp-tiles point-x position-self-x c: 20)
    (up-full-reset-search)
    (up-set-group search-local c: melee-group1)
	(up-remove-objects search-local object-data-target == siege-weapon-class)
    (up-target-point minus-x action-move -1 stance-no-attack)
    (up-target-point point-x action-move -1 stance-no-attack)
)


; (defrule
;     (timer-triggered threesec)
;     (goal melee-micro yes)
; =>
;     (up-chat-data-to-player my-player-number "Melee action %d" g: melee-action)
;     (up-chat-data-to-player my-player-number "Melee mode %d" g: melee-mode)
; )

(defrule
    (timer-triggered patrol-timer)
=>
    (disable-timer patrol-timer)
)

(defrule
    (timer-triggered pick-melee-action)
=>
    (disable-timer pick-melee-action)
)

(defrule
(or	(up-compare-const diff-fp != 1)
(or	(unit-type-count villager <= 0)
;(or	(goal patroldefense yes)
(or	(military-population >= 25)
(or	(up-enemy-units-in-town >= 25)
	(players-military-population every-enemy <= 1)))));)
=>
	(up-jump-rule 14))
(defrule
(not	(player-in-game any-ally))
	(military-population <= 1)
	(strategic-number sn-military-superiority <= -1)
	(strategic-number target-civilian-superiority <= -1)
=>
	(up-jump-rule 13))
(defrule
	(building-type-count town-center <= 0)
	(building-type-count castle <= 0)
	(building-type-count krepost <= 0)
	(building-type-count bombard-tower <= 0)
	(building-type-count watch-tower <= 0)
=>
	(up-jump-rule 12))
(defrule
	(true)
=>
	(set-goal temporary-goal5 28)
	(up-modify-goal temporary-goal7 s:= sn-focus-player-number)
	(set-strategic-number sn-focus-player-number 1)
	(set-goal temporary-goal8 0)
	(up-full-reset-search)
	(up-set-target-point position-self-x)
	(up-modify-goal temporary-goal s:= sn-maximum-town-size)
	(up-modify-goal temporary-goal c:max 32)
	(up-modify-goal temporary-goal c:min 38)
	(up-filter-distance c: -1 g: temporary-goal); 4 x
	(up-filter-include cmdid-military -1 -1 on-mainland)
	(up-filter-exclude -1 -1 -1 warship-class))
(defrule
(or	(up-research-status c: ri-loom <= research-pending)
	(up-research-status c: ri-wheel-barrow <= research-pending))
=>
	(up-modify-goal temporary-goal5 c:min 20))
(defrule; end neg jumps
(not	(players-stance focus-player ally))
	(player-in-game focus-player)
	(strategic-number sn-focus-player-number != my-player-number)
=>
	(up-find-remote c: all-units-class c: 40))
(defrule
	(strategic-number sn-focus-player-number < max-players)
(not	(up-set-target-object search-remote c: 0))
=>
	(up-modify-sn sn-focus-player-number c:+ 1)
	(up-jump-rule -2))
(defrule
	(up-set-target-object search-remote c: 0)
=>
	(up-clean-search search-remote object-data-distance search-order-asc)
	(up-set-target-object search-remote c: 0)
	(up-get-point position-object object-point-x)
	(up-get-object-data object-data-range temporary-goal2)
	(up-get-object-data object-data-speed temporary-goal3)
	(up-modify-goal temporary-goal2 c:* 125); 100
	(up-modify-goal temporary-goal2 g:+ temporary-goal3)
	(up-modify-goal temporary-goal2 c:/ 100)
;	(up-chat-data-to-self "Run from (%d) tiles distance." g: temporary-goal2)
	(up-modify-goal temporary-goal2 c:max 1)
	(up-modify-goal temporary-goal2 c:+ 1)
	(up-modify-goal temporary-goal2 c:min 9)
	(up-set-target-point object-point-x)
	(up-full-reset-search)
	(up-filter-distance c: -1 c: 7); 6
	(set-goal temporary-goal8 124190))
(defrule
	(goal temporary-goal8 124190)
=>
	(up-filter-include cmdid-military -1 -1 on-mainland)
	(up-filter-exclude -1 -1 -1 warship-class)
	(up-find-remote c: all-units-class c: 40)
	(up-get-search-state local-total)
	(up-modify-goal temporary-goal4 g:= remote-total)
	(up-set-target-object search-remote c: 0)
	(up-clean-search search-remote object-data-base-attack search-order-desc)
	(up-get-object-data object-data-base-attack temporary-goal6)
	(up-modify-goal temporary-goal5 g:/ temporary-goal6)
	(up-modify-goal temporary-goal5 c:max 4)
	(up-modify-goal temporary-goal5 c:min 7)
	(up-full-reset-search)
	(up-filter-distance c: -1 g: temporary-goal2)
	(set-goal temporary-goal8 124191))
(defrule
	(goal temporary-goal8 124191)
	(up-compare-goal temporary-goal4 g:>= temporary-goal5)
=>
	(up-filter-include -1 -1 -1 on-mainland)
	(up-filter-exclude -1 actionid-attack orderid-attack -1);	(up-filter-exclude -1 actionid-move orderid-move -1)
	(up-find-local c: villager-class c: 40)
	(up-remove-objects search-local object-data-action == actionid-enter)
	(up-remove-objects search-local object-data-order == orderid-enter)
	(up-set-target-object search-local c: 0)
	(up-get-point position-object saved-point-x)
	(up-lerp-tiles saved-point-x position-self-x g: temporary-goal2)
	(up-lerp-tiles saved-point-x position-self-x g: temporary-goal2)
	(up-set-target-point saved-point-x)
	(up-filter-include cmdid-military -1 -1 on-mainland)
;	(up-filter-exclude -1 -1 -1 warship-class)
	(up-find-remote c: all-units-class c: 40)
	(set-goal temporary-goal8 124192)
	(up-reset-filters))
(defrule
	(goal temporary-goal8 124192)
(nor	(up-set-target-object search-remote c: 0)
	(up-set-target-object search-local c: 0))
	(strategic-number sn-focus-player-number < max-players)
=>
	(up-modify-sn sn-focus-player-number c:+ 1)
	(up-full-reset-search)
	(up-set-target-point position-self-x)
	(up-filter-distance c: 4 g: temporary-goal)
	(up-filter-include cmdid-military -1 -1 on-mainland)
	(up-filter-exclude -1 -1 -1 warship-class)
	(set-goal temporary-goal8 0)
	(up-jump-rule -6))
(defrule
	(goal temporary-goal8 124192)
(not	(up-set-target-object search-remote c: 0))
	(up-set-target-object search-local c: 0)
=>
	(set-strategic-number sn-focus-player-number my-player-number)
	(up-reset-search 0 0 1 1)
	(up-filter-garrison c: -1 c: 4)
	(up-find-remote c: watch-tower c: 20)
	(up-find-remote c: bombard-tower c: 20)
	(up-filter-garrison c: -1 c: 14)
	(up-find-remote c: town-center c: 20)
	(up-filter-garrison c: -1 c: 19)
	(up-find-remote c: krepost c: 20)
	(up-find-remote c: castle c: 20)
	(set-goal temporary-goal8 124193)
	(up-get-search-state local-total))
(defrule; todo
	(goal temporary-goal8 124193)
	(up-compare-goal remote-total >= 1)
	(up-set-target-object search-remote c: 0)
=>
	(up-get-object-data object-data-maxhp temporary-goal)
	(up-modify-goal temporary-goal c:%* 20)
	(up-remove-objects search-remote object-data-hitpoints g:< temporary-goal)
;	(up-chat-data-to-self "Removing objects with less than %d hitpoints." g: temporary-goal)
	(up-modify-goal remote-total c:- 1)
	(up-jump-rule -1))
(defrule
	(goal temporary-goal8 124193)
	(up-set-target-object search-remote c: 0)
	(up-set-target-object search-local c: 0)
=>
;	(up-chat-data-to-self "Scary damage, run from (%d) units." g: temporary-goal5)
;	(up-chat-data-to-self "Found (%d) units." g: temporary-goal4)
	(up-clean-search search-remote object-data-distance search-order-asc)
	(up-remove-objects search-remote object-data-index >= 1)
	(up-get-search-state local-total)
;	(up-chat-data-to-self "Moving %d villagers to safety." g: local-total)
	(up-target-objects 0 action-garrison -1 -1))
(defrule
	(true)
=>
	(up-modify-sn sn-focus-player-number g:= temporary-goal7)); end jumps



(defrule
(or	(up-compare-const diff-fp != 1)
(or	(unit-type-count villager <= 0)
;(or	(goal patroldefense yes)
(or	(military-population >= 31)
(or	(up-enemy-units-in-town >= 31)
	(players-military-population every-enemy <= 1)))));)
=>
	(up-jump-rule 13))
(defrule
	(building-type-count town-center <= 0)
	(building-type-count lumber-camp <= 0)
=>
	(up-jump-rule 12))
(defrule
	(true)
=>
	(up-modify-goal temporary-goal7 s:= sn-focus-player-number)
	(set-strategic-number sn-focus-player-number 1)
	(up-modify-goal temporary-goal s:= sn-maximum-town-size)
	(up-modify-goal temporary-goal c:max 32)
	(up-modify-goal temporary-goal c:min 38)
	(set-goal temporary-goal2 0)
	(set-goal temporary-goal3 0)
	(set-goal saved-point-x -1)
	(up-full-reset-search)
	(up-set-target-point position-self-x)
	(up-filter-distance c: 4 g: temporary-goal)
	(up-filter-include -1 actionid-enter orderid-enter on-mainland)
	(up-find-local c: villager-class g: villagercount)
	(up-remove-objects search-local object-data-gather-type != wood)
	(up-clean-search search-local object-data-distance search-order-asc))
(defrule
	(up-set-target-object search-local c: 0)
=>
	(set-goal temporary-goal4 0)
	(up-get-point position-object saved-point-x)
	(up-full-reset-search)
	(up-find-local c: town-center c: 40)
	(up-find-local c: lumber-camp c: 40)
	(up-remove-objects search-local -1 > 13);for peformance reasons, triggers threshold at 1000 with 40, 600 with 20 and 500 with 15
	;could we set this threshold dependent on system specs somehow?
)
(defrule
	(up-compare-goal saved-point-x <= -1)
=>
	(up-jump-rule 8))
(defrule; end neg jumps
	(up-set-target-object search-local g: temporary-goal3)
	(up-object-data object-data-type == town-center)
=>
	(up-modify-goal temporary-goal4 c:+ 1))
(defrule
	(up-set-target-object search-local g: temporary-goal3)
=>
	(up-get-point position-object temporary-point-x)
	(up-set-target-point temporary-point-x)
	(up-reset-search 0 0 1 1)
	(up-reset-filters)
	(up-modify-goal temporary-goal4 c:+ 4)
	(up-filter-distance c: -1 g: temporary-goal4)
	(up-filter-status c: status-ready c: list-active)
	(up-find-resource c: wood c: 12)
	(up-filter-status c: status-resource c: list-active)
	(up-find-resource c: wood c: 12)
	(up-remove-objects search-remote object-data-tasks-count >= 3)
	(up-get-search-state local-total)
	(up-modify-goal temporary-goal2 g:= remote-total))
(defrule
	(up-compare-goal remote-total < 2)
	(up-set-target-object search-local g: temporary-goal3)
	(up-compare-goal temporary-goal3 < 481);sanity check
=>
	(up-modify-goal temporary-goal3 c:+ 1)
	(up-jump-rule -2))
(defrule; end neg jumps
	(up-compare-goal remote-total >= 2)
	(strategic-number sn-focus-player-number != my-player-number)
(not	(stance-toward focus-player ally))
	(player-valid focus-player)
	(up-set-target-object search-local g: temporary-goal3)
=>
	(up-reset-filters)
	(up-filter-distance c: -1 c: 9)
	(up-find-remote c: all-units-class c: 2)
	(up-get-search-state local-total)
	(up-modify-goal temporary-goal5 g:= remote-last)
	(up-modify-goal temporary-goal5 c:- 1)
	(up-modify-goal temporary-goal5 c:max 0)
	(up-remove-objects search-remote object-data-class != tree-class); tbs
	(up-get-search-state local-total)
	(up-modify-goal remote-total g:+ temporary-goal5))
(defrule
	(up-compare-goal remote-total >= 2)
	(up-compare-goal temporary-goal2 g:== remote-total)
	(strategic-number sn-focus-player-number < max-players)
	(up-set-target-object search-local g: temporary-goal3)
=>
	(up-modify-sn sn-focus-player-number c:+ 1)
	(up-jump-rule -2))
(defrule
	(up-compare-goal remote-total >= 2)
	(up-compare-goal temporary-goal2 g:== remote-total)
	(up-point-distance temporary-point-x saved-point-x >= 6)
	(up-set-target-object search-local g: temporary-goal3)
=>
	(set-strategic-number sn-focus-player-number 1)
	(up-lerp-tiles temporary-point-x saved-point-x c: 6)
	(up-set-target-point temporary-point-x)
	(up-bound-point temporary-point-x temporary-point-x)
	(up-bound-point saved-point-x saved-point-x);sanity checks
	(up-jump-rule -3))
(defrule
	(up-compare-goal temporary-goal2 g:!= remote-total)
	(up-set-target-object search-local g: temporary-goal3)
	(up-compare-goal temporary-goal3 < 480);sanity check
=>
	(set-strategic-number sn-focus-player-number 1)
	(up-modify-goal temporary-goal3 c:+ 1)
	(set-goal temporary-goal4 0)
	(up-jump-rule -7))
(defrule
	(up-compare-goal remote-total >= 2)
	(up-compare-goal temporary-goal2 g:== remote-total)
	(up-set-target-object search-local g: temporary-goal3)
=>
	(up-set-target-point saved-point-x)
	(up-reset-search 1 1 0 0)
	(up-reset-filters)
	(up-filter-distance c: -1 c: 4)
	(up-filter-include -1 actionid-enter orderid-enter on-mainland)
	(up-find-local c: villager-class g: villagercount)
	(up-remove-objects search-local object-data-gather-type != wood)
	(up-get-search-state local-total)
;	(up-chat-data-to-self "Found trees for %d scared villagers." g: local-total)
	(up-target-objects 0 action-default -1 -1)); end jump
(defrule
	(true)
=>
	(up-modify-sn sn-focus-player-number g:= temporary-goal7)); end jumps



(defrule
	(true)
=>
	(up-get-rule-id new-jump-rule)
)
;Debug


(defrule
	(goal attackingsystem new)
=>
	(up-modify-sn sn-focus-player-number g:= temporary-goal11)
)


;Mangonel micro

;Find enemy mangonels

(defrule
	(or(up-compare-const diff-fp != 1)
	(or(goal group-micro no);can technically be independent but something in the old system interferes
	(or(unit-type-count mangonel-line > 3)
	(game-time > 2700))))
=>
	(up-jump-rule 11)
	)

(defrule
	(true)
=>
	(up-full-reset-search)
	(up-modify-goal temporary-goal11 s:= sn-focus-player-number)
	(set-goal remote-total 0)
)

(defrule
	(up-compare-const diff-fp == 1)
	(strategic-number sn-focus-player-number < max-players)
	(player-valid focus-player)
	(players-stance focus-player enemy)
	(players-unit-type-count any-enemy mangonel-line > 0)
	(goal group-micro yes)
	(unit-type-count mangonel-line > 0)
=>
;	(up-full-reset-search)
	(up-set-target-point ranged-group1-x)
	(up-filter-distance c: 2 c: 18)
	(up-find-remote c: mangonel-line c: 2)
	(up-get-search-state local-total)
	(up-modify-sn sn-focus-player-number c:+ 1)
	(up-jump-rule -1)
)


(defrule
	(up-compare-const diff-fp == 1)
	(strategic-number sn-focus-player-number < max-players)
	(player-valid focus-player)
	(players-stance focus-player enemy)
	(players-unit-type-count any-enemy mangonel-line > 0)
	(up-compare-goal group-micro != yes)
	(unit-type-count mangonel-line > 0)
	(players-building-type-count target-player town-center > 0)
=>
;	(up-full-reset-search)
	;(up-set-target-point ranged-group1-x)
	(up-full-reset-search)
	(up-find-remote c: town-center c: 1)
	(up-set-target-object search-remote c: 0)
	(up-get-point position-object point-x)
	(up-set-target-point point-x)
	(up-find-local c: mangonel-line c: 10)
	(up-clean-search search-local object-data-distance search-order-asc)
	(up-set-target-object search-local c: 0)
	(up-get-point position-object point-x)
	(up-set-target-point point-x)
	(up-filter-distance c: 2 c: 12)
	(up-find-remote c: mangonel-line c: 2)
	(up-get-search-state local-total)
	(up-modify-sn sn-focus-player-number c:+ 1)
	(up-jump-rule -1)
)


(defrule
;	(goal group-micro yes)
	(up-compare-goal remote-total > 0)
	(unit-type-count mangonel-line > 0)
	(up-compare-const diff-fp == 1)
=>
	(set-goal temporary-goal2 24687)
	(up-reset-filters)
	(up-find-local c: mangonel-line c: 2)
)

(defrule
	(goal temporary-goal2 24687)
	(up-set-target-object search-remote c: 0)
=>
	(up-get-point position-object point-x)
	(up-get-object-data object-data-move-x point2-x)
	(up-get-object-data object-data-move-y point2-y)
)

(defrule
	(goal temporary-goal2 24687)
	(up-set-target-object search-local c: 0)
=>
	(up-get-object-data object-data-next-attack temporary-goal4)
	(up-get-point position-object point3-x)
	(generate-random-number 2)
)

; (defrule
; 	(true)
; =>
; 	(up-get-object-data object-data-next-attack temporary-goal4)
; 	(up-chat-data-to-player 1 "Remaining reload time %d" g: temporary-goal4)
; )

(defrule
	(goal temporary-goal2 24687)
	(random-number == 1)
	(up-object-data object-data-order != orderid-move)
	(up-object-data object-data-action != actionid-move)
	(up-object-data object-data-next-attack > 5600)
=>
	(up-cross-tiles point3-x point-x c: 5)
	(up-target-point point3-x action-move -1 -1)
;	(up-chat-data-to-player 1 "Move left, towards %d" g: point3-x)
)

(defrule
	(goal temporary-goal2 24687)
	(random-number == 2)
	(up-object-data object-data-order != orderid-move)
	(up-object-data object-data-action != actionid-move)
	(up-object-data object-data-next-attack > 5600)
=>
	(up-cross-tiles point3-x point-x c: -5)
	(up-target-point point3-x action-move -1 -1)
;	(up-chat-data-to-player 1 "Move right, towards %d" g: point3-x)
)

(defrule
	(goal temporary-goal2 24687)
	(up-object-data object-data-next-attack < 1)
	(or(random-number == 1)
	(or(and(up-compare-goal point2-x == -1)
	(up-compare-goal point2-y == -1))
	(and(up-compare-goal point-x g:== point2-x)
	(up-compare-goal point-y g:== point2-y))))
=>
	(up-target-objects 0 action-default -1 -1)
;	(up-chat-data-to-player 1 "Attack type 1, point %d" g: point2-x)
	(up-jump-rule 1)
)

(defrule
	(goal temporary-goal2 24687)
	(up-object-data object-data-next-attack < 1)
	(random-number == 2)
=>
	(up-lerp-tiles point-x point2-x c: 1)
	(up-target-point point-x action-ground -1 -1)
;	(up-chat-data-to-player 1 "Attack type 2, point %d" g: point2-x)
)

(defrule
	(true)
=>
	(up-modify-sn sn-focus-player-number g:= temporary-goal11)
)
; (defrule
;     (goal melee-action m-move)
; =>
;     (up-send-flare point-x)
;     (up-send-flare melee-walk-x)
; )

; (defrule
;     (true)
; =>
;     (up-send-flare melee-group1-x)
; )